   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"stm32f0xx_syscfg.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SYSCFG_DeInit,"ax",%progbits
  18              		.align	2
  19              		.global	SYSCFG_DeInit
  20              		.code	16
  21              		.thumb_func
  23              	SYSCFG_DeInit:
  24              	.LFB32:
  25              		.file 1 "../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c"
   1:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** /**
   2:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   ******************************************************************************
   3:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @file    stm32f0xx_syscfg.c
   4:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @author  MCD Application Team
   5:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @version V1.0.0
   6:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @date    23-March-2012
   7:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *          functionalities of the SYSCFG peripheral:
   9:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *           + Remapping the memory mapped at 0x00000000  
  10:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *           + Remapping the DMA channels
  11:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *           + Enabling I2C fast mode plus driving capability for I2C pins   
  12:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *           + Configuring the EXTI lines connection to the GPIO port
  13:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *           + Configuring the CFGR2 features (Connecting some internal signal
  14:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *             to the break input of TIM1)
  15:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *   
  16:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *  @verbatim
  17:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****  ===============================================================================
  18:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****                      ##### How to use this driver #####
  19:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****  ===============================================================================
  20:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****     [..] 
  21:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****                The SYSCFG registers can be accessed only when the SYSCFG 
  22:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****                interface APB clock is enabled.
  23:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****                To enable SYSCFG APB clock use:
  24:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****                RCC_APBPeriphClockCmd(RCC_APBPeriph_SYSCFG, ENABLE).
  25:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *  @endverbatim
  26:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *
  27:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   ******************************************************************************
  28:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @attention
  29:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *
  30:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  31:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *
  32:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  33:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * You may not use this file except in compliance with the License.
  34:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * You may obtain a copy of the License at:
  35:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *
  36:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  37:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *
  38:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * Unless required by applicable law or agreed to in writing, software 
  39:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  40:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  41:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * See the License for the specific language governing permissions and
  42:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * limitations under the License.
  43:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *
  44:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   ******************************************************************************
  45:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   */
  46:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** 
  47:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** /* Includes ------------------------------------------------------------------*/
  48:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** #include "stm32f0xx_syscfg.h"
  49:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** 
  50:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** /** @addtogroup STM32F0xx_StdPeriph_Driver
  51:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @{
  52:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   */
  53:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** 
  54:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** /** @defgroup SYSCFG 
  55:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @brief SYSCFG driver modules
  56:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @{
  57:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   */ 
  58:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** 
  59:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** /* Private typedef -----------------------------------------------------------*/
  60:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** /* Private define ------------------------------------------------------------*/
  61:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** /* Private macro -------------------------------------------------------------*/
  62:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** /* Private variables ---------------------------------------------------------*/
  63:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** /* Private function prototypes -----------------------------------------------*/
  64:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** /* Private functions ---------------------------------------------------------*/
  65:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** 
  66:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** /** @defgroup SYSCFG_Private_Functions
  67:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @{
  68:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   */ 
  69:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** 
  70:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** /** @defgroup SYSCFG_Group1 SYSCFG Initialization and Configuration functions
  71:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****  *  @brief   SYSCFG Initialization and Configuration functions 
  72:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****  *
  73:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** @verbatim
  74:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****  ===============================================================================
  75:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****         ##### SYSCFG Initialization and Configuration functions #####
  76:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****  ===============================================================================
  77:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** 
  78:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** @endverbatim
  79:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @{
  80:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   */
  81:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** 
  82:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** /**
  83:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @brief  Deinitializes the SYSCFG registers to their default reset values.
  84:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @param  None
  85:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @retval None
  86:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @note   MEM_MODE bits are not affected by APB reset.
  87:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *         MEM_MODE bits took the value from the user option bytes.
  88:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @note   CFGR2 register is not affected by APB reset.
  89:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *         CLABBB configuration bits are locked when set.
  90:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *         To unlock the configuration, perform a system reset.
  91:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   */
  92:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** void SYSCFG_DeInit(void)
  93:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** {
  26              		.loc 1 93 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 00AF     		add	r7, sp, #0
  33              		.cfi_def_cfa_register 7
  94:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   /* Set SYSCFG_CFGR1 register to reset value without affecting MEM_MODE bits */
  95:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   SYSCFG->CFGR1 &= SYSCFG_CFGR1_MEM_MODE;
  34              		.loc 1 95 0
  35 0004 0D4B     		ldr	r3, .L2
  36 0006 0D4A     		ldr	r2, .L2
  37 0008 1168     		ldr	r1, [r2]
  38 000a 0322     		mov	r2, #3
  39 000c 0A40     		and	r2, r1
  40 000e 1A60     		str	r2, [r3]
  96:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   /* Set EXTICRx registers to reset value */
  97:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   SYSCFG->EXTICR[0] = 0;
  41              		.loc 1 97 0
  42 0010 0A4B     		ldr	r3, .L2
  43 0012 0022     		mov	r2, #0
  44 0014 9A60     		str	r2, [r3, #8]
  98:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   SYSCFG->EXTICR[1] = 0;
  45              		.loc 1 98 0
  46 0016 094B     		ldr	r3, .L2
  47 0018 0022     		mov	r2, #0
  48 001a DA60     		str	r2, [r3, #12]
  99:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   SYSCFG->EXTICR[2] = 0;
  49              		.loc 1 99 0
  50 001c 074B     		ldr	r3, .L2
  51 001e 0022     		mov	r2, #0
  52 0020 1A61     		str	r2, [r3, #16]
 100:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   SYSCFG->EXTICR[3] = 0;
  53              		.loc 1 100 0
  54 0022 064B     		ldr	r3, .L2
  55 0024 0022     		mov	r2, #0
  56 0026 5A61     		str	r2, [r3, #20]
 101:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   /* Set CFGR2 register to reset value: clear SRAM parity error flag */
 102:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   SYSCFG->CFGR2 |= (uint32_t) SYSCFG_CFGR2_SRAM_PE;
  57              		.loc 1 102 0
  58 0028 044B     		ldr	r3, .L2
  59 002a 044A     		ldr	r2, .L2
  60 002c 9269     		ldr	r2, [r2, #24]
  61 002e 8021     		mov	r1, #128
  62 0030 4900     		lsl	r1, r1, #1
  63 0032 0A43     		orr	r2, r1
  64 0034 9A61     		str	r2, [r3, #24]
 103:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** }
  65              		.loc 1 103 0
  66 0036 BD46     		mov	sp, r7
  67              		@ sp needed
  68 0038 80BD     		pop	{r7, pc}
  69              	.L3:
  70 003a C046     		.align	2
  71              	.L2:
  72 003c 00000140 		.word	1073807360
  73              		.cfi_endproc
  74              	.LFE32:
  76              		.section	.rodata
  77              		.align	2
  78              	.LC0:
  79 0000 2E2E2F2E 		.ascii	"../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f"
  79      2E2F6578 
  79      742D7372 
  79      632F5354 
  79      4D333246 
  80 0033 3078785F 		.ascii	"0xx_syscfg.c\000"
  80      73797363 
  80      66672E63 
  80      00
  81              		.section	.text.SYSCFG_MemoryRemapConfig,"ax",%progbits
  82              		.align	2
  83              		.global	SYSCFG_MemoryRemapConfig
  84              		.code	16
  85              		.thumb_func
  87              	SYSCFG_MemoryRemapConfig:
  88              	.LFB33:
 104:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** 
 105:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** /**
 106:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @brief  Configures the memory mapping at address 0x00000000.
 107:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @param  SYSCFG_MemoryRemap: selects the memory remapping.
 108:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *   This parameter can be one of the following values:
 109:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *     @arg SYSCFG_MemoryRemap_Flash: Main Flash memory mapped at 0x00000000  
 110:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *     @arg SYSCFG_MemoryRemap_SystemMemory: System Flash memory mapped at 0x00000000
 111:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *     @arg SYSCFG_MemoryRemap_SRAM: Embedded SRAM mapped at 0x00000000
 112:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @retval None
 113:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   */
 114:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** void SYSCFG_MemoryRemapConfig(uint32_t SYSCFG_MemoryRemap)
 115:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** {
  89              		.loc 1 115 0
  90              		.cfi_startproc
  91 0000 80B5     		push	{r7, lr}
  92              		.cfi_def_cfa_offset 8
  93              		.cfi_offset 7, -8
  94              		.cfi_offset 14, -4
  95 0002 84B0     		sub	sp, sp, #16
  96              		.cfi_def_cfa_offset 24
  97 0004 00AF     		add	r7, sp, #0
  98              		.cfi_def_cfa_register 7
  99 0006 7860     		str	r0, [r7, #4]
 116:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   uint32_t tmpctrl = 0;
 100              		.loc 1 116 0
 101 0008 0023     		mov	r3, #0
 102 000a FB60     		str	r3, [r7, #12]
 117:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** 
 118:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   /* Check the parameter */
 119:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   assert_param(IS_SYSCFG_MEMORY_REMAP(SYSCFG_MemoryRemap));
 103              		.loc 1 119 0
 104 000c 7B68     		ldr	r3, [r7, #4]
 105 000e 002B     		cmp	r3, #0
 106 0010 0AD0     		beq	.L5
 107              		.loc 1 119 0 is_stmt 0 discriminator 1
 108 0012 7B68     		ldr	r3, [r7, #4]
 109 0014 012B     		cmp	r3, #1
 110 0016 07D0     		beq	.L5
 111 0018 7B68     		ldr	r3, [r7, #4]
 112 001a 032B     		cmp	r3, #3
 113 001c 04D0     		beq	.L5
 114 001e 0B4B     		ldr	r3, .L6
 115 0020 181C     		mov	r0, r3
 116 0022 7721     		mov	r1, #119
 117 0024 FFF7FEFF 		bl	assert_failed
 118              	.L5:
 120:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** 
 121:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   /* Get CFGR1 register value */
 122:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   tmpctrl = SYSCFG->CFGR1;
 119              		.loc 1 122 0 is_stmt 1
 120 0028 094B     		ldr	r3, .L6+4
 121 002a 1B68     		ldr	r3, [r3]
 122 002c FB60     		str	r3, [r7, #12]
 123:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** 
 124:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   /* Clear MEM_MODE bits */
 125:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   tmpctrl &= (uint32_t) (~SYSCFG_CFGR1_MEM_MODE);
 123              		.loc 1 125 0
 124 002e FB68     		ldr	r3, [r7, #12]
 125 0030 0322     		mov	r2, #3
 126 0032 9343     		bic	r3, r2
 127 0034 FB60     		str	r3, [r7, #12]
 126:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** 
 127:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   /* Set the new MEM_MODE bits value */
 128:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   tmpctrl |= (uint32_t) SYSCFG_MemoryRemap;
 128              		.loc 1 128 0
 129 0036 FA68     		ldr	r2, [r7, #12]
 130 0038 7B68     		ldr	r3, [r7, #4]
 131 003a 1343     		orr	r3, r2
 132 003c FB60     		str	r3, [r7, #12]
 129:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** 
 130:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   /* Set CFGR1 register with the new memory remap configuration */
 131:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   SYSCFG->CFGR1 = tmpctrl;
 133              		.loc 1 131 0
 134 003e 044B     		ldr	r3, .L6+4
 135 0040 FA68     		ldr	r2, [r7, #12]
 136 0042 1A60     		str	r2, [r3]
 132:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** }
 137              		.loc 1 132 0
 138 0044 BD46     		mov	sp, r7
 139 0046 04B0     		add	sp, sp, #16
 140              		@ sp needed
 141 0048 80BD     		pop	{r7, pc}
 142              	.L7:
 143 004a C046     		.align	2
 144              	.L6:
 145 004c 00000000 		.word	.LC0
 146 0050 00000140 		.word	1073807360
 147              		.cfi_endproc
 148              	.LFE33:
 150              		.section	.text.SYSCFG_DMAChannelRemapConfig,"ax",%progbits
 151              		.align	2
 152              		.global	SYSCFG_DMAChannelRemapConfig
 153              		.code	16
 154              		.thumb_func
 156              	SYSCFG_DMAChannelRemapConfig:
 157              	.LFB34:
 133:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** 
 134:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** /**
 135:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @brief  Configure the DMA channels remapping.
 136:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @param  SYSCFG_DMARemap: selects the DMA channels remap.
 137:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *   This parameter can be one of the following values:
 138:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *     @arg SYSCFG_DMARemap_TIM17: Remap TIM17 DMA requests from channel1 to channel2
 139:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *     @arg SYSCFG_DMARemap_TIM16: Remap TIM16 DMA requests from channel3 to channel4
 140:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *     @arg SYSCFG_DMARemap_USART1Rx: Remap USART1 Rx DMA requests from channel3 to channel5
 141:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *     @arg SYSCFG_DMARemap_USART1Tx: Remap USART1 Tx DMA requests from channel2 to channel4
 142:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *     @arg SYSCFG_DMARemap_ADC1: Remap ADC1 DMA requests from channel1 to channel2
 143:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @param  NewState: new state of the DMA channel remapping. 
 144:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *         This parameter can be: ENABLE or DISABLE.
 145:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @note   When enabled, DMA channel of the selected peripheral is remapped
 146:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @note   When disabled, Default DMA channel is mapped to the selected peripheral
 147:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @note 
 148:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *           By default TIM17 DMA requests is mapped to channel 1
 149:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *           use SYSCFG_DMAChannelRemapConfig(SYSCFG_DMARemap_TIM17, Enable)
 150:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *           to remap TIM17 DMA requests to channel 2
 151:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *           use SYSCFG_DMAChannelRemapConfig(SYSCFG_DMARemap_TIM17, Disable)
 152:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *           to map TIM17 DMA requests to channel 1 (default mapping)
 153:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @retval None
 154:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   */
 155:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** void SYSCFG_DMAChannelRemapConfig(uint32_t SYSCFG_DMARemap, FunctionalState NewState)
 156:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** {
 158              		.loc 1 156 0
 159              		.cfi_startproc
 160 0000 80B5     		push	{r7, lr}
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 7, -8
 163              		.cfi_offset 14, -4
 164 0002 82B0     		sub	sp, sp, #8
 165              		.cfi_def_cfa_offset 16
 166 0004 00AF     		add	r7, sp, #0
 167              		.cfi_def_cfa_register 7
 168 0006 7860     		str	r0, [r7, #4]
 169 0008 0A1C     		mov	r2, r1
 170 000a FB1C     		add	r3, r7, #3
 171 000c 1A70     		strb	r2, [r3]
 157:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   /* Check the parameters */
 158:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   assert_param(IS_SYSCFG_DMA_REMAP(SYSCFG_DMARemap));
 172              		.loc 1 158 0
 173 000e 7A68     		ldr	r2, [r7, #4]
 174 0010 8023     		mov	r3, #128
 175 0012 5B01     		lsl	r3, r3, #5
 176 0014 9A42     		cmp	r2, r3
 177 0016 18D0     		beq	.L9
 178              		.loc 1 158 0 is_stmt 0 discriminator 1
 179 0018 7A68     		ldr	r2, [r7, #4]
 180 001a 8023     		mov	r3, #128
 181 001c 1B01     		lsl	r3, r3, #4
 182 001e 9A42     		cmp	r2, r3
 183 0020 13D0     		beq	.L9
 184 0022 7A68     		ldr	r2, [r7, #4]
 185 0024 8023     		mov	r3, #128
 186 0026 DB00     		lsl	r3, r3, #3
 187 0028 9A42     		cmp	r2, r3
 188 002a 0ED0     		beq	.L9
 189 002c 7A68     		ldr	r2, [r7, #4]
 190 002e 8023     		mov	r3, #128
 191 0030 9B00     		lsl	r3, r3, #2
 192 0032 9A42     		cmp	r2, r3
 193 0034 09D0     		beq	.L9
 194 0036 7A68     		ldr	r2, [r7, #4]
 195 0038 8023     		mov	r3, #128
 196 003a 5B00     		lsl	r3, r3, #1
 197 003c 9A42     		cmp	r2, r3
 198 003e 04D0     		beq	.L9
 199 0040 134B     		ldr	r3, .L13
 200 0042 181C     		mov	r0, r3
 201 0044 9E21     		mov	r1, #158
 202 0046 FFF7FEFF 		bl	assert_failed
 203              	.L9:
 159:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 204              		.loc 1 159 0 is_stmt 1
 205 004a FB1C     		add	r3, r7, #3
 206 004c 1B78     		ldrb	r3, [r3]
 207 004e 002B     		cmp	r3, #0
 208 0050 08D0     		beq	.L10
 209              		.loc 1 159 0 is_stmt 0 discriminator 1
 210 0052 FB1C     		add	r3, r7, #3
 211 0054 1B78     		ldrb	r3, [r3]
 212 0056 012B     		cmp	r3, #1
 213 0058 04D0     		beq	.L10
 214 005a 0D4B     		ldr	r3, .L13
 215 005c 181C     		mov	r0, r3
 216 005e 9F21     		mov	r1, #159
 217 0060 FFF7FEFF 		bl	assert_failed
 218              	.L10:
 160:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** 
 161:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   if (NewState != DISABLE)
 219              		.loc 1 161 0 is_stmt 1
 220 0064 FB1C     		add	r3, r7, #3
 221 0066 1B78     		ldrb	r3, [r3]
 222 0068 002B     		cmp	r3, #0
 223 006a 06D0     		beq	.L11
 162:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   {
 163:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****     /* Remap the DMA channel */
 164:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****     SYSCFG->CFGR1 |= (uint32_t)SYSCFG_DMARemap;
 224              		.loc 1 164 0
 225 006c 094B     		ldr	r3, .L13+4
 226 006e 094A     		ldr	r2, .L13+4
 227 0070 1168     		ldr	r1, [r2]
 228 0072 7A68     		ldr	r2, [r7, #4]
 229 0074 0A43     		orr	r2, r1
 230 0076 1A60     		str	r2, [r3]
 231 0078 06E0     		b	.L8
 232              	.L11:
 165:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   }
 166:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   else
 167:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   {
 168:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****     /* use the default DMA channel mapping */
 169:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****     SYSCFG->CFGR1 &= (uint32_t)(~SYSCFG_DMARemap);
 233              		.loc 1 169 0
 234 007a 064B     		ldr	r3, .L13+4
 235 007c 054A     		ldr	r2, .L13+4
 236 007e 1268     		ldr	r2, [r2]
 237 0080 7968     		ldr	r1, [r7, #4]
 238 0082 C943     		mvn	r1, r1
 239 0084 0A40     		and	r2, r1
 240 0086 1A60     		str	r2, [r3]
 241              	.L8:
 170:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   }
 171:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** }
 242              		.loc 1 171 0
 243 0088 BD46     		mov	sp, r7
 244 008a 02B0     		add	sp, sp, #8
 245              		@ sp needed
 246 008c 80BD     		pop	{r7, pc}
 247              	.L14:
 248 008e C046     		.align	2
 249              	.L13:
 250 0090 00000000 		.word	.LC0
 251 0094 00000140 		.word	1073807360
 252              		.cfi_endproc
 253              	.LFE34:
 255              		.section	.text.SYSCFG_I2CFastModePlusConfig,"ax",%progbits
 256              		.align	2
 257              		.global	SYSCFG_I2CFastModePlusConfig
 258              		.code	16
 259              		.thumb_func
 261              	SYSCFG_I2CFastModePlusConfig:
 262              	.LFB35:
 172:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** 
 173:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** /**
 174:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @brief  Configure the I2C fast mode plus driving capability.
 175:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @param  SYSCFG_I2CFastModePlus: selects the pin.
 176:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *   This parameter can be one of the following values:
 177:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *     @arg SYSCFG_I2CFastModePlus_PB6: Configure fast mode plus driving capability for PB6
 178:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *     @arg SYSCFG_I2CFastModePlus_PB7: Configure fast mode plus driving capability for PB7
 179:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *     @arg SYSCFG_I2CFastModePlus_PB8: Configure fast mode plus driving capability for PB8
 180:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *     @arg SYSCFG_I2CFastModePlus_PB9: Configure fast mode plus driving capability for PB9
 181:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @param  NewState: new state of the DMA channel remapping. 
 182:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *         This parameter can be: ENABLE or DISABLE.
 183:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @note   ENABLE:  Enable fast mode plus driving capability for selected pin
 184:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @note   DISABLE: Disable fast mode plus driving capability for selected pin
 185:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @retval None
 186:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   */
 187:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** void SYSCFG_I2CFastModePlusConfig(uint32_t SYSCFG_I2CFastModePlus, FunctionalState NewState)
 188:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** {
 263              		.loc 1 188 0
 264              		.cfi_startproc
 265 0000 80B5     		push	{r7, lr}
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 7, -8
 268              		.cfi_offset 14, -4
 269 0002 82B0     		sub	sp, sp, #8
 270              		.cfi_def_cfa_offset 16
 271 0004 00AF     		add	r7, sp, #0
 272              		.cfi_def_cfa_register 7
 273 0006 7860     		str	r0, [r7, #4]
 274 0008 0A1C     		mov	r2, r1
 275 000a FB1C     		add	r3, r7, #3
 276 000c 1A70     		strb	r2, [r3]
 189:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   /* Check the parameters */
 190:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   assert_param(IS_SYSCFG_I2C_FMP(SYSCFG_I2CFastModePlus));
 277              		.loc 1 190 0
 278 000e 7A68     		ldr	r2, [r7, #4]
 279 0010 8023     		mov	r3, #128
 280 0012 5B02     		lsl	r3, r3, #9
 281 0014 9A42     		cmp	r2, r3
 282 0016 13D0     		beq	.L16
 283              		.loc 1 190 0 is_stmt 0 discriminator 1
 284 0018 7A68     		ldr	r2, [r7, #4]
 285 001a 8023     		mov	r3, #128
 286 001c 9B02     		lsl	r3, r3, #10
 287 001e 9A42     		cmp	r2, r3
 288 0020 0ED0     		beq	.L16
 289 0022 7A68     		ldr	r2, [r7, #4]
 290 0024 8023     		mov	r3, #128
 291 0026 DB02     		lsl	r3, r3, #11
 292 0028 9A42     		cmp	r2, r3
 293 002a 09D0     		beq	.L16
 294 002c 7A68     		ldr	r2, [r7, #4]
 295 002e 8023     		mov	r3, #128
 296 0030 1B03     		lsl	r3, r3, #12
 297 0032 9A42     		cmp	r2, r3
 298 0034 04D0     		beq	.L16
 299 0036 134B     		ldr	r3, .L20
 300 0038 181C     		mov	r0, r3
 301 003a BE21     		mov	r1, #190
 302 003c FFF7FEFF 		bl	assert_failed
 303              	.L16:
 191:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 304              		.loc 1 191 0 is_stmt 1
 305 0040 FB1C     		add	r3, r7, #3
 306 0042 1B78     		ldrb	r3, [r3]
 307 0044 002B     		cmp	r3, #0
 308 0046 08D0     		beq	.L17
 309              		.loc 1 191 0 is_stmt 0 discriminator 1
 310 0048 FB1C     		add	r3, r7, #3
 311 004a 1B78     		ldrb	r3, [r3]
 312 004c 012B     		cmp	r3, #1
 313 004e 04D0     		beq	.L17
 314 0050 0C4B     		ldr	r3, .L20
 315 0052 181C     		mov	r0, r3
 316 0054 BF21     		mov	r1, #191
 317 0056 FFF7FEFF 		bl	assert_failed
 318              	.L17:
 192:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** 
 193:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   if (NewState != DISABLE)
 319              		.loc 1 193 0 is_stmt 1
 320 005a FB1C     		add	r3, r7, #3
 321 005c 1B78     		ldrb	r3, [r3]
 322 005e 002B     		cmp	r3, #0
 323 0060 06D0     		beq	.L18
 194:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   {
 195:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****     /* Enable fast mode plus driving capability for selected pin */
 196:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****     SYSCFG->CFGR1 |= (uint32_t)SYSCFG_I2CFastModePlus;
 324              		.loc 1 196 0
 325 0062 094B     		ldr	r3, .L20+4
 326 0064 084A     		ldr	r2, .L20+4
 327 0066 1168     		ldr	r1, [r2]
 328 0068 7A68     		ldr	r2, [r7, #4]
 329 006a 0A43     		orr	r2, r1
 330 006c 1A60     		str	r2, [r3]
 331 006e 06E0     		b	.L15
 332              	.L18:
 197:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   }
 198:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   else
 199:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   {
 200:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****     /* Disable fast mode plus driving capability for selected pin */
 201:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****     SYSCFG->CFGR1 &= (uint32_t)(~SYSCFG_I2CFastModePlus);
 333              		.loc 1 201 0
 334 0070 054B     		ldr	r3, .L20+4
 335 0072 054A     		ldr	r2, .L20+4
 336 0074 1268     		ldr	r2, [r2]
 337 0076 7968     		ldr	r1, [r7, #4]
 338 0078 C943     		mvn	r1, r1
 339 007a 0A40     		and	r2, r1
 340 007c 1A60     		str	r2, [r3]
 341              	.L15:
 202:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   }
 203:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** }
 342              		.loc 1 203 0
 343 007e BD46     		mov	sp, r7
 344 0080 02B0     		add	sp, sp, #8
 345              		@ sp needed
 346 0082 80BD     		pop	{r7, pc}
 347              	.L21:
 348              		.align	2
 349              	.L20:
 350 0084 00000000 		.word	.LC0
 351 0088 00000140 		.word	1073807360
 352              		.cfi_endproc
 353              	.LFE35:
 355              		.section	.text.SYSCFG_EXTILineConfig,"ax",%progbits
 356              		.align	2
 357              		.global	SYSCFG_EXTILineConfig
 358              		.code	16
 359              		.thumb_func
 361              	SYSCFG_EXTILineConfig:
 362              	.LFB36:
 204:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** 
 205:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** /**
 206:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @brief  Selects the GPIO pin used as EXTI Line.
 207:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @param  EXTI_PortSourceGPIOx : selects the GPIO port to be used as source 
 208:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *                                for EXTI lines where x can be (A, B, C, D or F).
 209:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @param  EXTI_PinSourcex: specifies the EXTI line to be configured.
 210:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *         This parameter can be EXTI_PinSourcex where x can be (0..15)
 211:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @retval None
 212:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   */
 213:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** void SYSCFG_EXTILineConfig(uint8_t EXTI_PortSourceGPIOx, uint8_t EXTI_PinSourcex)
 214:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** {
 363              		.loc 1 214 0
 364              		.cfi_startproc
 365 0000 B0B5     		push	{r4, r5, r7, lr}
 366              		.cfi_def_cfa_offset 16
 367              		.cfi_offset 4, -16
 368              		.cfi_offset 5, -12
 369              		.cfi_offset 7, -8
 370              		.cfi_offset 14, -4
 371 0002 84B0     		sub	sp, sp, #16
 372              		.cfi_def_cfa_offset 32
 373 0004 00AF     		add	r7, sp, #0
 374              		.cfi_def_cfa_register 7
 375 0006 0A1C     		mov	r2, r1
 376 0008 FB1D     		add	r3, r7, #7
 377 000a 011C     		add	r1, r0, #0
 378 000c 1970     		strb	r1, [r3]
 379 000e BB1D     		add	r3, r7, #6
 380 0010 1A70     		strb	r2, [r3]
 215:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   uint32_t tmp = 0x00;
 381              		.loc 1 215 0
 382 0012 0023     		mov	r3, #0
 383 0014 FB60     		str	r3, [r7, #12]
 216:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** 
 217:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   /* Check the parameters */
 218:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   assert_param(IS_EXTI_PORT_SOURCE(EXTI_PortSourceGPIOx));
 384              		.loc 1 218 0
 385 0016 FB1D     		add	r3, r7, #7
 386 0018 1B78     		ldrb	r3, [r3]
 387 001a 002B     		cmp	r3, #0
 388 001c 14D0     		beq	.L23
 389              		.loc 1 218 0 is_stmt 0 discriminator 1
 390 001e FB1D     		add	r3, r7, #7
 391 0020 1B78     		ldrb	r3, [r3]
 392 0022 012B     		cmp	r3, #1
 393 0024 10D0     		beq	.L23
 394 0026 FB1D     		add	r3, r7, #7
 395 0028 1B78     		ldrb	r3, [r3]
 396 002a 022B     		cmp	r3, #2
 397 002c 0CD0     		beq	.L23
 398 002e FB1D     		add	r3, r7, #7
 399 0030 1B78     		ldrb	r3, [r3]
 400 0032 032B     		cmp	r3, #3
 401 0034 08D0     		beq	.L23
 402 0036 FB1D     		add	r3, r7, #7
 403 0038 1B78     		ldrb	r3, [r3]
 404 003a 052B     		cmp	r3, #5
 405 003c 04D0     		beq	.L23
 406 003e 424B     		ldr	r3, .L25
 407 0040 181C     		mov	r0, r3
 408 0042 DA21     		mov	r1, #218
 409 0044 FFF7FEFF 		bl	assert_failed
 410              	.L23:
 219:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   assert_param(IS_EXTI_PIN_SOURCE(EXTI_PinSourcex));
 411              		.loc 1 219 0 is_stmt 1
 412 0048 BB1D     		add	r3, r7, #6
 413 004a 1B78     		ldrb	r3, [r3]
 414 004c 002B     		cmp	r3, #0
 415 004e 40D0     		beq	.L24
 416              		.loc 1 219 0 is_stmt 0 discriminator 1
 417 0050 BB1D     		add	r3, r7, #6
 418 0052 1B78     		ldrb	r3, [r3]
 419 0054 012B     		cmp	r3, #1
 420 0056 3CD0     		beq	.L24
 421 0058 BB1D     		add	r3, r7, #6
 422 005a 1B78     		ldrb	r3, [r3]
 423 005c 022B     		cmp	r3, #2
 424 005e 38D0     		beq	.L24
 425 0060 BB1D     		add	r3, r7, #6
 426 0062 1B78     		ldrb	r3, [r3]
 427 0064 032B     		cmp	r3, #3
 428 0066 34D0     		beq	.L24
 429 0068 BB1D     		add	r3, r7, #6
 430 006a 1B78     		ldrb	r3, [r3]
 431 006c 042B     		cmp	r3, #4
 432 006e 30D0     		beq	.L24
 433 0070 BB1D     		add	r3, r7, #6
 434 0072 1B78     		ldrb	r3, [r3]
 435 0074 052B     		cmp	r3, #5
 436 0076 2CD0     		beq	.L24
 437 0078 BB1D     		add	r3, r7, #6
 438 007a 1B78     		ldrb	r3, [r3]
 439 007c 062B     		cmp	r3, #6
 440 007e 28D0     		beq	.L24
 441 0080 BB1D     		add	r3, r7, #6
 442 0082 1B78     		ldrb	r3, [r3]
 443 0084 072B     		cmp	r3, #7
 444 0086 24D0     		beq	.L24
 445 0088 BB1D     		add	r3, r7, #6
 446 008a 1B78     		ldrb	r3, [r3]
 447 008c 082B     		cmp	r3, #8
 448 008e 20D0     		beq	.L24
 449 0090 BB1D     		add	r3, r7, #6
 450 0092 1B78     		ldrb	r3, [r3]
 451 0094 092B     		cmp	r3, #9
 452 0096 1CD0     		beq	.L24
 453 0098 BB1D     		add	r3, r7, #6
 454 009a 1B78     		ldrb	r3, [r3]
 455 009c 0A2B     		cmp	r3, #10
 456 009e 18D0     		beq	.L24
 457 00a0 BB1D     		add	r3, r7, #6
 458 00a2 1B78     		ldrb	r3, [r3]
 459 00a4 0B2B     		cmp	r3, #11
 460 00a6 14D0     		beq	.L24
 461 00a8 BB1D     		add	r3, r7, #6
 462 00aa 1B78     		ldrb	r3, [r3]
 463 00ac 0C2B     		cmp	r3, #12
 464 00ae 10D0     		beq	.L24
 465 00b0 BB1D     		add	r3, r7, #6
 466 00b2 1B78     		ldrb	r3, [r3]
 467 00b4 0D2B     		cmp	r3, #13
 468 00b6 0CD0     		beq	.L24
 469 00b8 BB1D     		add	r3, r7, #6
 470 00ba 1B78     		ldrb	r3, [r3]
 471 00bc 0E2B     		cmp	r3, #14
 472 00be 08D0     		beq	.L24
 473 00c0 BB1D     		add	r3, r7, #6
 474 00c2 1B78     		ldrb	r3, [r3]
 475 00c4 0F2B     		cmp	r3, #15
 476 00c6 04D0     		beq	.L24
 477 00c8 1F4B     		ldr	r3, .L25
 478 00ca 181C     		mov	r0, r3
 479 00cc DB21     		mov	r1, #219
 480 00ce FFF7FEFF 		bl	assert_failed
 481              	.L24:
 220:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   
 221:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   tmp = ((uint32_t)0x0F) << (0x04 * (EXTI_PinSourcex & (uint8_t)0x03));
 482              		.loc 1 221 0 is_stmt 1
 483 00d2 BB1D     		add	r3, r7, #6
 484 00d4 1A78     		ldrb	r2, [r3]
 485 00d6 0323     		mov	r3, #3
 486 00d8 1340     		and	r3, r2
 487 00da 9B00     		lsl	r3, r3, #2
 488 00dc 0F22     		mov	r2, #15
 489 00de 111C     		mov	r1, r2
 490 00e0 9940     		lsl	r1, r1, r3
 491 00e2 0B1C     		mov	r3, r1
 492 00e4 FB60     		str	r3, [r7, #12]
 222:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   SYSCFG->EXTICR[EXTI_PinSourcex >> 0x02] &= ~tmp;
 493              		.loc 1 222 0
 494 00e6 194B     		ldr	r3, .L25+4
 495 00e8 BA1D     		add	r2, r7, #6
 496 00ea 1278     		ldrb	r2, [r2]
 497 00ec 9208     		lsr	r2, r2, #2
 498 00ee D2B2     		uxtb	r2, r2
 499 00f0 1649     		ldr	r1, .L25+4
 500 00f2 B81D     		add	r0, r7, #6
 501 00f4 0078     		ldrb	r0, [r0]
 502 00f6 8008     		lsr	r0, r0, #2
 503 00f8 C0B2     		uxtb	r0, r0
 504 00fa 0230     		add	r0, r0, #2
 505 00fc 8000     		lsl	r0, r0, #2
 506 00fe 4158     		ldr	r1, [r0, r1]
 507 0100 F868     		ldr	r0, [r7, #12]
 508 0102 C043     		mvn	r0, r0
 509 0104 0140     		and	r1, r0
 510 0106 0232     		add	r2, r2, #2
 511 0108 9200     		lsl	r2, r2, #2
 512 010a D150     		str	r1, [r2, r3]
 223:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   SYSCFG->EXTICR[EXTI_PinSourcex >> 0x02] |= (((uint32_t)EXTI_PortSourceGPIOx) << (0x04 * (EXTI_Pin
 513              		.loc 1 223 0
 514 010c 0F4B     		ldr	r3, .L25+4
 515 010e BA1D     		add	r2, r7, #6
 516 0110 1278     		ldrb	r2, [r2]
 517 0112 9208     		lsr	r2, r2, #2
 518 0114 D2B2     		uxtb	r2, r2
 519 0116 0D49     		ldr	r1, .L25+4
 520 0118 B81D     		add	r0, r7, #6
 521 011a 0078     		ldrb	r0, [r0]
 522 011c 8008     		lsr	r0, r0, #2
 523 011e C0B2     		uxtb	r0, r0
 524 0120 0230     		add	r0, r0, #2
 525 0122 8000     		lsl	r0, r0, #2
 526 0124 4058     		ldr	r0, [r0, r1]
 527 0126 F91D     		add	r1, r7, #7
 528 0128 0C78     		ldrb	r4, [r1]
 529 012a B91D     		add	r1, r7, #6
 530 012c 0D78     		ldrb	r5, [r1]
 531 012e 0321     		mov	r1, #3
 532 0130 2940     		and	r1, r5
 533 0132 8900     		lsl	r1, r1, #2
 534 0134 251C     		mov	r5, r4
 535 0136 8D40     		lsl	r5, r5, r1
 536 0138 291C     		mov	r1, r5
 537 013a 0143     		orr	r1, r0
 538 013c 0232     		add	r2, r2, #2
 539 013e 9200     		lsl	r2, r2, #2
 540 0140 D150     		str	r1, [r2, r3]
 224:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** }
 541              		.loc 1 224 0
 542 0142 BD46     		mov	sp, r7
 543 0144 04B0     		add	sp, sp, #16
 544              		@ sp needed
 545 0146 B0BD     		pop	{r4, r5, r7, pc}
 546              	.L26:
 547              		.align	2
 548              	.L25:
 549 0148 00000000 		.word	.LC0
 550 014c 00000140 		.word	1073807360
 551              		.cfi_endproc
 552              	.LFE36:
 554              		.section	.text.SYSCFG_BreakConfig,"ax",%progbits
 555              		.align	2
 556              		.global	SYSCFG_BreakConfig
 557              		.code	16
 558              		.thumb_func
 560              	SYSCFG_BreakConfig:
 561              	.LFB37:
 225:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** 
 226:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** /**
 227:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @brief  Connect the selected parameter to the break input of TIM1.
 228:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @note   The selected configuration is locked and can be unlocked by system reset
 229:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @param  SYSCFG_Break: selects the configuration to be connected to break
 230:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *         input of TIM1
 231:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *   This parameter can be any combination of the following values:
 232:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *     @arg SYSCFG_Break_PVD: Connects the PVD event to the Break Input of TIM1.
 233:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *     @arg SYSCFG_Break_SRAMParity: Connects the SRAM_PARITY error signal to the Break Input of T
 234:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *     @arg SYSCFG_Break_Lockup: Connects Lockup output of CortexM0 to the break input of TIM1.
 235:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @retval None
 236:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   */
 237:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** void SYSCFG_BreakConfig(uint32_t SYSCFG_Break)
 238:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** {
 562              		.loc 1 238 0
 563              		.cfi_startproc
 564 0000 80B5     		push	{r7, lr}
 565              		.cfi_def_cfa_offset 8
 566              		.cfi_offset 7, -8
 567              		.cfi_offset 14, -4
 568 0002 82B0     		sub	sp, sp, #8
 569              		.cfi_def_cfa_offset 16
 570 0004 00AF     		add	r7, sp, #0
 571              		.cfi_def_cfa_register 7
 572 0006 7860     		str	r0, [r7, #4]
 239:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   /* Check the parameter */
 240:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   assert_param(IS_SYSCFG_LOCK_CONFIG(SYSCFG_Break));
 573              		.loc 1 240 0
 574 0008 7B68     		ldr	r3, [r7, #4]
 575 000a 042B     		cmp	r3, #4
 576 000c 0AD0     		beq	.L28
 577              		.loc 1 240 0 is_stmt 0 discriminator 1
 578 000e 7B68     		ldr	r3, [r7, #4]
 579 0010 022B     		cmp	r3, #2
 580 0012 07D0     		beq	.L28
 581 0014 7B68     		ldr	r3, [r7, #4]
 582 0016 012B     		cmp	r3, #1
 583 0018 04D0     		beq	.L28
 584 001a 074B     		ldr	r3, .L29
 585 001c 181C     		mov	r0, r3
 586 001e F021     		mov	r1, #240
 587 0020 FFF7FEFF 		bl	assert_failed
 588              	.L28:
 241:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** 
 242:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   SYSCFG->CFGR2 |= (uint32_t) SYSCFG_Break;
 589              		.loc 1 242 0 is_stmt 1
 590 0024 054B     		ldr	r3, .L29+4
 591 0026 054A     		ldr	r2, .L29+4
 592 0028 9169     		ldr	r1, [r2, #24]
 593 002a 7A68     		ldr	r2, [r7, #4]
 594 002c 0A43     		orr	r2, r1
 595 002e 9A61     		str	r2, [r3, #24]
 243:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** }
 596              		.loc 1 243 0
 597 0030 BD46     		mov	sp, r7
 598 0032 02B0     		add	sp, sp, #8
 599              		@ sp needed
 600 0034 80BD     		pop	{r7, pc}
 601              	.L30:
 602 0036 C046     		.align	2
 603              	.L29:
 604 0038 00000000 		.word	.LC0
 605 003c 00000140 		.word	1073807360
 606              		.cfi_endproc
 607              	.LFE37:
 609              		.section	.text.SYSCFG_GetFlagStatus,"ax",%progbits
 610              		.align	2
 611              		.global	SYSCFG_GetFlagStatus
 612              		.code	16
 613              		.thumb_func
 615              	SYSCFG_GetFlagStatus:
 616              	.LFB38:
 244:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** 
 245:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** /**
 246:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @brief  Checks whether the specified SYSCFG flag is set or not.
 247:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @param  SYSCFG_Flag: specifies the SYSCFG flag to check. 
 248:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *   This parameter can be one of the following values:
 249:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *     @arg SYSCFG_FLAG_PE: SRAM parity error flag.
 250:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @retval The new state of SYSCFG_Flag (SET or RESET).
 251:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   */
 252:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** FlagStatus SYSCFG_GetFlagStatus(uint32_t SYSCFG_Flag)
 253:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** {
 617              		.loc 1 253 0
 618              		.cfi_startproc
 619 0000 80B5     		push	{r7, lr}
 620              		.cfi_def_cfa_offset 8
 621              		.cfi_offset 7, -8
 622              		.cfi_offset 14, -4
 623 0002 84B0     		sub	sp, sp, #16
 624              		.cfi_def_cfa_offset 24
 625 0004 00AF     		add	r7, sp, #0
 626              		.cfi_def_cfa_register 7
 627 0006 7860     		str	r0, [r7, #4]
 254:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   FlagStatus bitstatus = RESET;
 628              		.loc 1 254 0
 629 0008 3B1C     		mov	r3, r7
 630 000a 0F33     		add	r3, r3, #15
 631 000c 0022     		mov	r2, #0
 632 000e 1A70     		strb	r2, [r3]
 255:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** 
 256:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   /* Check the parameter */
 257:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   assert_param(IS_SYSCFG_FLAG(SYSCFG_Flag));
 633              		.loc 1 257 0
 634 0010 7A68     		ldr	r2, [r7, #4]
 635 0012 8023     		mov	r3, #128
 636 0014 5B00     		lsl	r3, r3, #1
 637 0016 9A42     		cmp	r2, r3
 638 0018 06D0     		beq	.L32
 639              		.loc 1 257 0 is_stmt 0 discriminator 1
 640 001a 0E4A     		ldr	r2, .L36
 641 001c 0223     		mov	r3, #2
 642 001e FF33     		add	r3, r3, #255
 643 0020 101C     		mov	r0, r2
 644 0022 191C     		mov	r1, r3
 645 0024 FFF7FEFF 		bl	assert_failed
 646              	.L32:
 258:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** 
 259:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   /* Check the status of the specified SPI flag */
 260:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   if ((SYSCFG->CFGR2 & SYSCFG_CFGR2_SRAM_PE) != (uint32_t)RESET)
 647              		.loc 1 260 0 is_stmt 1
 648 0028 0B4B     		ldr	r3, .L36+4
 649 002a 9A69     		ldr	r2, [r3, #24]
 650 002c 8023     		mov	r3, #128
 651 002e 5B00     		lsl	r3, r3, #1
 652 0030 1340     		and	r3, r2
 653 0032 04D0     		beq	.L33
 261:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   {
 262:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****     /* SYSCFG_Flag is set */
 263:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****     bitstatus = SET;
 654              		.loc 1 263 0
 655 0034 3B1C     		mov	r3, r7
 656 0036 0F33     		add	r3, r3, #15
 657 0038 0122     		mov	r2, #1
 658 003a 1A70     		strb	r2, [r3]
 659 003c 03E0     		b	.L34
 660              	.L33:
 264:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   }
 265:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   else
 266:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   {
 267:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****     /* SYSCFG_Flag is reset */
 268:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****     bitstatus = RESET;
 661              		.loc 1 268 0
 662 003e 3B1C     		mov	r3, r7
 663 0040 0F33     		add	r3, r3, #15
 664 0042 0022     		mov	r2, #0
 665 0044 1A70     		strb	r2, [r3]
 666              	.L34:
 269:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   }
 270:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   /* Return the SYSCFG_Flag status */
 271:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   return  bitstatus;
 667              		.loc 1 271 0
 668 0046 3B1C     		mov	r3, r7
 669 0048 0F33     		add	r3, r3, #15
 670 004a 1B78     		ldrb	r3, [r3]
 272:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** }
 671              		.loc 1 272 0
 672 004c 181C     		mov	r0, r3
 673 004e BD46     		mov	sp, r7
 674 0050 04B0     		add	sp, sp, #16
 675              		@ sp needed
 676 0052 80BD     		pop	{r7, pc}
 677              	.L37:
 678              		.align	2
 679              	.L36:
 680 0054 00000000 		.word	.LC0
 681 0058 00000140 		.word	1073807360
 682              		.cfi_endproc
 683              	.LFE38:
 685              		.section	.text.SYSCFG_ClearFlag,"ax",%progbits
 686              		.align	2
 687              		.global	SYSCFG_ClearFlag
 688              		.code	16
 689              		.thumb_func
 691              	SYSCFG_ClearFlag:
 692              	.LFB39:
 273:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** 
 274:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** /**
 275:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @brief  Clear the selected SYSCFG flag.
 276:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @param  SYSCFG_Flag: selects the flag to be cleared.
 277:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *   This parameter can be any combination of the following values:
 278:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   *     @arg SYSCFG_FLAG_PE: SRAM parity error flag.
 279:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   * @retval None
 280:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   */
 281:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** void SYSCFG_ClearFlag(uint32_t SYSCFG_Flag)
 282:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** {
 693              		.loc 1 282 0
 694              		.cfi_startproc
 695 0000 80B5     		push	{r7, lr}
 696              		.cfi_def_cfa_offset 8
 697              		.cfi_offset 7, -8
 698              		.cfi_offset 14, -4
 699 0002 82B0     		sub	sp, sp, #8
 700              		.cfi_def_cfa_offset 16
 701 0004 00AF     		add	r7, sp, #0
 702              		.cfi_def_cfa_register 7
 703 0006 7860     		str	r0, [r7, #4]
 283:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   /* Check the parameter */
 284:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   assert_param(IS_SYSCFG_FLAG(SYSCFG_Flag));
 704              		.loc 1 284 0
 705 0008 7A68     		ldr	r2, [r7, #4]
 706 000a 8023     		mov	r3, #128
 707 000c 5B00     		lsl	r3, r3, #1
 708 000e 9A42     		cmp	r2, r3
 709 0010 06D0     		beq	.L39
 710              		.loc 1 284 0 is_stmt 0 discriminator 1
 711 0012 084A     		ldr	r2, .L40
 712 0014 8E23     		mov	r3, #142
 713 0016 5B00     		lsl	r3, r3, #1
 714 0018 101C     		mov	r0, r2
 715 001a 191C     		mov	r1, r3
 716 001c FFF7FEFF 		bl	assert_failed
 717              	.L39:
 285:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** 
 286:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c ****   SYSCFG->CFGR2 |= (uint32_t) SYSCFG_Flag;
 718              		.loc 1 286 0 is_stmt 1
 719 0020 054B     		ldr	r3, .L40+4
 720 0022 054A     		ldr	r2, .L40+4
 721 0024 9169     		ldr	r1, [r2, #24]
 722 0026 7A68     		ldr	r2, [r7, #4]
 723 0028 0A43     		orr	r2, r1
 724 002a 9A61     		str	r2, [r3, #24]
 287:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_syscfg.c **** }
 725              		.loc 1 287 0
 726 002c BD46     		mov	sp, r7
 727 002e 02B0     		add	sp, sp, #8
 728              		@ sp needed
 729 0030 80BD     		pop	{r7, pc}
 730              	.L41:
 731 0032 C046     		.align	2
 732              	.L40:
 733 0034 00000000 		.word	.LC0
 734 0038 00000140 		.word	1073807360
 735              		.cfi_endproc
 736              	.LFE39:
 738              		.text
 739              	.Letext0:
 740              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/20140609/arm-none-eabi/include/machine/_default_types
 741              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20140609/arm-none-eabi/include/stdint.h"
 742              		.file 4 "../../ext-src/CMSIS/ST/STM32F0xx/Include/stm32f0xx.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_syscfg.c
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccSfwOMb.s:18     .text.SYSCFG_DeInit:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccSfwOMb.s:23     .text.SYSCFG_DeInit:0000000000000000 SYSCFG_DeInit
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccSfwOMb.s:72     .text.SYSCFG_DeInit:000000000000003c $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccSfwOMb.s:77     .rodata:0000000000000000 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccSfwOMb.s:82     .text.SYSCFG_MemoryRemapConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccSfwOMb.s:87     .text.SYSCFG_MemoryRemapConfig:0000000000000000 SYSCFG_MemoryRemapConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccSfwOMb.s:145    .text.SYSCFG_MemoryRemapConfig:000000000000004c $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccSfwOMb.s:151    .text.SYSCFG_DMAChannelRemapConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccSfwOMb.s:156    .text.SYSCFG_DMAChannelRemapConfig:0000000000000000 SYSCFG_DMAChannelRemapConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccSfwOMb.s:250    .text.SYSCFG_DMAChannelRemapConfig:0000000000000090 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccSfwOMb.s:256    .text.SYSCFG_I2CFastModePlusConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccSfwOMb.s:261    .text.SYSCFG_I2CFastModePlusConfig:0000000000000000 SYSCFG_I2CFastModePlusConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccSfwOMb.s:350    .text.SYSCFG_I2CFastModePlusConfig:0000000000000084 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccSfwOMb.s:356    .text.SYSCFG_EXTILineConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccSfwOMb.s:361    .text.SYSCFG_EXTILineConfig:0000000000000000 SYSCFG_EXTILineConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccSfwOMb.s:549    .text.SYSCFG_EXTILineConfig:0000000000000148 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccSfwOMb.s:555    .text.SYSCFG_BreakConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccSfwOMb.s:560    .text.SYSCFG_BreakConfig:0000000000000000 SYSCFG_BreakConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccSfwOMb.s:604    .text.SYSCFG_BreakConfig:0000000000000038 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccSfwOMb.s:610    .text.SYSCFG_GetFlagStatus:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccSfwOMb.s:615    .text.SYSCFG_GetFlagStatus:0000000000000000 SYSCFG_GetFlagStatus
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccSfwOMb.s:680    .text.SYSCFG_GetFlagStatus:0000000000000054 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccSfwOMb.s:686    .text.SYSCFG_ClearFlag:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccSfwOMb.s:691    .text.SYSCFG_ClearFlag:0000000000000000 SYSCFG_ClearFlag
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccSfwOMb.s:733    .text.SYSCFG_ClearFlag:0000000000000034 $d
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.0.9252205565be9cbc11fa49e4ee70d556
                           .group:0000000000000000 wm4.stm32f0xx.h.54.664bd2bdbb20859ae6a5c66c16d4ee5a
                           .group:0000000000000000 wm4.core_cm0.h.32.41c1bd92799bc17b3c8424dd5c622427
                           .group:0000000000000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:0000000000000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:0000000000000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:0000000000000000 wm4.core_cm0.h.130.eea61816b4c7004601b0935484a214ea
                           .group:0000000000000000 wm4.stm32f0xx.h.226.38dd78fa77e64690c744af5bf4bffc7b
                           .group:0000000000000000 wm4.stm32f0xx_cec.h.80.d17e4ea90700c26010f339885be92ac0
                           .group:0000000000000000 wm4.stm32f0xx_crc.h.31.48fbd36307d848f32978567b16118557
                           .group:0000000000000000 wm4.stm32f0xx_comp.h.31.a640b8c7673f3e181cfd826dce70b6e2
                           .group:0000000000000000 wm4.stm32f0xx_dac.h.31.3e178ad0888f70df8fbc4c999d855b3e
                           .group:0000000000000000 wm4.stm32f0xx_dbgmcu.h.31.282da985c6ed8dd33417cf074ecfdf63
                           .group:0000000000000000 wm4.stm32f0xx_dma.h.31.68def2497939cb34c3f292e0c507724a
                           .group:0000000000000000 wm4.stm32f0xx_exti.h.31.81a00331ef3e014ed4dafe9e9baacca3
                           .group:0000000000000000 wm4.stm32f0xx_flash.h.31.60d92ed32439cfb92572ec2678e2be21
                           .group:0000000000000000 wm4.stm32f0xx_gpio.h.31.df5c3a39b21131ade11d30b7e1580be6
                           .group:0000000000000000 wm4.stm32f0xx_syscfg.h.31.f98c72ea26c47fccafefd977b75786d3
                           .group:0000000000000000 wm4.stm32f0xx_i2c.h.31.83969866ec38bbcc1bff9238f01a1954
                           .group:0000000000000000 wm4.stm32f0xx_iwdg.h.31.bb16f7e18e54df66bf9bd0e2b29bdc93
                           .group:0000000000000000 wm4.stm32f0xx_pwr.h.31.5b469253a65db741700e0b45f396c99d
                           .group:0000000000000000 wm4.stm32f0xx_rcc.h.31.bc2f5dd9e2f518d727a1e0ce497a42e6
                           .group:0000000000000000 wm4.stm32f0xx_rtc.h.31.bc9d631913a743746cf54f04d4efbf7b
                           .group:0000000000000000 wm4.stm32f0xx_spi.h.31.5b4d0d36c03feb5b081143cdba79744d
                           .group:0000000000000000 wm4.stm32f0xx_tim.h.31.21b4d7229c685868595d751757b51e1b
                           .group:0000000000000000 wm4.stm32f0xx_usart.h.31.8abae79a1c4f266d08faf5996370b48f
                           .group:0000000000000000 wm4.stm32f0xx_wwdg.h.31.0cf1a9b3d89d147c688025fdd33d9c49
                           .group:0000000000000000 wm4.stm32f0xx_misc.h.31.d5c08c37e69b8a852dbb75e9252454c6

UNDEFINED SYMBOLS
assert_failed
