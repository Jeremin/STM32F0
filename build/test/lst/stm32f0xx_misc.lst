   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"stm32f0xx_misc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata
  18              		.align	2
  19              	.LC0:
  20 0000 2E2E2F2E 		.ascii	"../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f"
  20      2E2F6578 
  20      742D7372 
  20      632F5354 
  20      4D333246 
  21 0033 3078785F 		.ascii	"0xx_misc.c\000"
  21      6D697363 
  21      2E6300
  22 003e 0000     		.section	.text.NVIC_Init,"ax",%progbits
  23              		.align	2
  24              		.global	NVIC_Init
  25              		.code	16
  26              		.thumb_func
  28              	NVIC_Init:
  29              	.LFB32:
  30              		.file 1 "../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c"
   1:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** /**
   2:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   ******************************************************************************
   3:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * @file    stm32f0xx_misc.c
   4:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * @author  MCD Application Team
   5:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * @version V1.0.0
   6:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * @date    23-March-2012
   7:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * @brief   This file provides all the miscellaneous firmware functions (add-on
   8:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   *          to CMSIS functions).
   9:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   ******************************************************************************
  10:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * @attention
  11:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   *
  12:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  13:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   *
  14:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  15:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * You may not use this file except in compliance with the License.
  16:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * You may obtain a copy of the License at:
  17:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   *
  18:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  19:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   *
  20:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * Unless required by applicable law or agreed to in writing, software 
  21:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  22:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  23:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * See the License for the specific language governing permissions and
  24:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * limitations under the License.
  25:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   *
  26:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   ******************************************************************************
  27:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   */
  28:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** 
  29:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** /* Includes ------------------------------------------------------------------*/
  30:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** #include "stm32f0xx_misc.h"
  31:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** 
  32:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** /** @addtogroup STM32F0xx_StdPeriph_Driver
  33:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * @{
  34:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   */
  35:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** 
  36:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** /** @defgroup MISC 
  37:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * @brief MISC driver modules
  38:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * @{
  39:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   */
  40:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** 
  41:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** /* Private typedef -----------------------------------------------------------*/
  42:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** /* Private define ------------------------------------------------------------*/
  43:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** /* Private macro -------------------------------------------------------------*/
  44:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** /* Private variables ---------------------------------------------------------*/
  45:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** /* Private function prototypes -----------------------------------------------*/
  46:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** /* Private functions ---------------------------------------------------------*/
  47:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** 
  48:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** /** @defgroup MISC_Private_Functions
  49:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * @{
  50:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   */
  51:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** /**
  52:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   *
  53:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** @verbatim
  54:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****  *******************************************************************************
  55:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****                    ##### Interrupts configuration functions #####
  56:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****  *******************************************************************************
  57:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****     [..] This section provide functions allowing to configure the NVIC interrupts
  58:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****         (IRQ). The Cortex-M0 exceptions are managed by CMSIS functions.
  59:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****          (#) Enable and Configure the priority of the selected IRQ Channels. 
  60:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****              The priority can be 0..3. 
  61:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** 
  62:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****         -@- Lower priority values gives higher priority.
  63:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****         -@- Priority Order:
  64:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****             (#@) Lowest priority.
  65:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****             (#@) Lowest hardware priority (IRQn position).  
  66:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   
  67:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** @endverbatim
  68:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** */
  69:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** 
  70:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** /**
  71:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * @brief  Initializes the NVIC peripheral according to the specified
  72:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   *         parameters in the NVIC_InitStruct.
  73:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
  74:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   *         function should be called before.    
  75:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * @param  NVIC_InitStruct: pointer to a NVIC_InitTypeDef structure that contains
  76:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   *         the configuration information for the specified NVIC peripheral.
  77:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * @retval None
  78:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   */
  79:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct)
  80:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** {
  31              		.loc 1 80 0
  32              		.cfi_startproc
  33 0000 80B5     		push	{r7, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 84B0     		sub	sp, sp, #16
  38              		.cfi_def_cfa_offset 24
  39 0004 00AF     		add	r7, sp, #0
  40              		.cfi_def_cfa_register 7
  41 0006 7860     		str	r0, [r7, #4]
  81:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   uint32_t tmppriority = 0x00;
  42              		.loc 1 81 0
  43 0008 0023     		mov	r3, #0
  44 000a FB60     		str	r3, [r7, #12]
  82:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   
  83:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   /* Check the parameters */
  84:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
  45              		.loc 1 84 0
  46 000c 7B68     		ldr	r3, [r7, #4]
  47 000e 9B78     		ldrb	r3, [r3, #2]
  48 0010 002B     		cmp	r3, #0
  49 0012 08D0     		beq	.L2
  50              		.loc 1 84 0 is_stmt 0 discriminator 1
  51 0014 7B68     		ldr	r3, [r7, #4]
  52 0016 9B78     		ldrb	r3, [r3, #2]
  53 0018 012B     		cmp	r3, #1
  54 001a 04D0     		beq	.L2
  55 001c 2D4B     		ldr	r3, .L6
  56 001e 181C     		mov	r0, r3
  57 0020 5421     		mov	r1, #84
  58 0022 FFF7FEFF 		bl	assert_failed
  59              	.L2:
  85:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   assert_param(IS_NVIC_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPriority));  
  60              		.loc 1 85 0 is_stmt 1
  61 0026 7B68     		ldr	r3, [r7, #4]
  62 0028 5B78     		ldrb	r3, [r3, #1]
  63 002a 032B     		cmp	r3, #3
  64 002c 04D9     		bls	.L3
  65              		.loc 1 85 0 is_stmt 0 discriminator 1
  66 002e 294B     		ldr	r3, .L6
  67 0030 181C     		mov	r0, r3
  68 0032 5521     		mov	r1, #85
  69 0034 FFF7FEFF 		bl	assert_failed
  70              	.L3:
  86:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****     
  87:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
  71              		.loc 1 87 0 is_stmt 1
  72 0038 7B68     		ldr	r3, [r7, #4]
  73 003a 9B78     		ldrb	r3, [r3, #2]
  74 003c 002B     		cmp	r3, #0
  75 003e 3CD0     		beq	.L4
  88:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   {
  89:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****     /* Compute the Corresponding IRQ Priority --------------------------------*/    
  90:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****     tmppriority = NVIC->IP[NVIC_InitStruct->NVIC_IRQChannel >> 0x02];
  76              		.loc 1 90 0
  77 0040 254B     		ldr	r3, .L6+4
  78 0042 7A68     		ldr	r2, [r7, #4]
  79 0044 1278     		ldrb	r2, [r2]
  80 0046 9208     		lsr	r2, r2, #2
  81 0048 D2B2     		uxtb	r2, r2
  82 004a C032     		add	r2, r2, #192
  83 004c 9200     		lsl	r2, r2, #2
  84 004e D358     		ldr	r3, [r2, r3]
  85 0050 FB60     		str	r3, [r7, #12]
  91:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****     tmppriority &= (uint32_t)(~(((uint32_t)0xFF) << ((NVIC_InitStruct->NVIC_IRQChannel & 0x03) * 8)
  86              		.loc 1 91 0
  87 0052 7B68     		ldr	r3, [r7, #4]
  88 0054 1B78     		ldrb	r3, [r3]
  89 0056 1A1C     		mov	r2, r3
  90 0058 0323     		mov	r3, #3
  91 005a 1340     		and	r3, r2
  92 005c DB00     		lsl	r3, r3, #3
  93 005e FF22     		mov	r2, #255
  94 0060 101C     		mov	r0, r2
  95 0062 9840     		lsl	r0, r0, r3
  96 0064 031C     		mov	r3, r0
  97 0066 DA43     		mvn	r2, r3
  98 0068 FB68     		ldr	r3, [r7, #12]
  99 006a 1340     		and	r3, r2
 100 006c FB60     		str	r3, [r7, #12]
  92:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****     tmppriority |= (uint32_t)((((uint32_t)NVIC_InitStruct->NVIC_IRQChannelPriority << 6) & 0xFF) <<
 101              		.loc 1 92 0
 102 006e 7B68     		ldr	r3, [r7, #4]
 103 0070 5B78     		ldrb	r3, [r3, #1]
 104 0072 9A01     		lsl	r2, r3, #6
 105 0074 FF23     		mov	r3, #255
 106 0076 1A40     		and	r2, r3
 107 0078 7B68     		ldr	r3, [r7, #4]
 108 007a 1B78     		ldrb	r3, [r3]
 109 007c 191C     		mov	r1, r3
 110 007e 0323     		mov	r3, #3
 111 0080 0B40     		and	r3, r1
 112 0082 DB00     		lsl	r3, r3, #3
 113 0084 111C     		mov	r1, r2
 114 0086 9940     		lsl	r1, r1, r3
 115 0088 0B1C     		mov	r3, r1
 116 008a FA68     		ldr	r2, [r7, #12]
 117 008c 1343     		orr	r3, r2
 118 008e FB60     		str	r3, [r7, #12]
  93:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****     
  94:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****     NVIC->IP[NVIC_InitStruct->NVIC_IRQChannel >> 0x02] = tmppriority;
 119              		.loc 1 94 0
 120 0090 114B     		ldr	r3, .L6+4
 121 0092 7A68     		ldr	r2, [r7, #4]
 122 0094 1278     		ldrb	r2, [r2]
 123 0096 9208     		lsr	r2, r2, #2
 124 0098 D2B2     		uxtb	r2, r2
 125 009a C032     		add	r2, r2, #192
 126 009c 9200     		lsl	r2, r2, #2
 127 009e F968     		ldr	r1, [r7, #12]
 128 00a0 D150     		str	r1, [r2, r3]
  95:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****     
  96:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****     /* Enable the Selected IRQ Channels --------------------------------------*/
  97:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****     NVIC->ISER[0] = (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 129              		.loc 1 97 0
 130 00a2 0D4B     		ldr	r3, .L6+4
 131 00a4 7A68     		ldr	r2, [r7, #4]
 132 00a6 1278     		ldrb	r2, [r2]
 133 00a8 111C     		mov	r1, r2
 134 00aa 1F22     		mov	r2, #31
 135 00ac 0A40     		and	r2, r1
 136 00ae 0121     		mov	r1, #1
 137 00b0 081C     		mov	r0, r1
 138 00b2 9040     		lsl	r0, r0, r2
 139 00b4 021C     		mov	r2, r0
 140 00b6 1A60     		str	r2, [r3]
 141 00b8 09E0     		b	.L1
 142              	.L4:
  98:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   }
  99:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   else
 100:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   {
 101:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****     /* Disable the Selected IRQ Channels -------------------------------------*/
 102:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****     NVIC->ICER[0] = (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 143              		.loc 1 102 0
 144 00ba 074A     		ldr	r2, .L6+4
 145 00bc 7B68     		ldr	r3, [r7, #4]
 146 00be 1B78     		ldrb	r3, [r3]
 147 00c0 191C     		mov	r1, r3
 148 00c2 1F23     		mov	r3, #31
 149 00c4 0B40     		and	r3, r1
 150 00c6 0121     		mov	r1, #1
 151 00c8 9940     		lsl	r1, r1, r3
 152 00ca 8023     		mov	r3, #128
 153 00cc D150     		str	r1, [r2, r3]
 154              	.L1:
 103:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   }
 104:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** }
 155              		.loc 1 104 0
 156 00ce BD46     		mov	sp, r7
 157 00d0 04B0     		add	sp, sp, #16
 158              		@ sp needed
 159 00d2 80BD     		pop	{r7, pc}
 160              	.L7:
 161              		.align	2
 162              	.L6:
 163 00d4 00000000 		.word	.LC0
 164 00d8 00E100E0 		.word	-536813312
 165              		.cfi_endproc
 166              	.LFE32:
 168              		.section	.text.NVIC_SystemLPConfig,"ax",%progbits
 169              		.align	2
 170              		.global	NVIC_SystemLPConfig
 171              		.code	16
 172              		.thumb_func
 174              	NVIC_SystemLPConfig:
 175              	.LFB33:
 105:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** 
 106:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** /**
 107:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * @brief  Selects the condition for the system to enter low power mode.
 108:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * @param  LowPowerMode: Specifies the new mode for the system to enter low power mode.
 109:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   *   This parameter can be one of the following values:
 110:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   *     @arg NVIC_LP_SEVONPEND: Low Power SEV on Pend.
 111:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   *     @arg NVIC_LP_SLEEPDEEP: Low Power DEEPSLEEP request.
 112:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   *     @arg NVIC_LP_SLEEPONEXIT: Low Power Sleep on Exit.
 113:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * @param  NewState: new state of LP condition. 
 114:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   *         This parameter can be: ENABLE or DISABLE.
 115:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * @retval None
 116:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   */
 117:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** void NVIC_SystemLPConfig(uint8_t LowPowerMode, FunctionalState NewState)
 118:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** {
 176              		.loc 1 118 0
 177              		.cfi_startproc
 178 0000 80B5     		push	{r7, lr}
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 7, -8
 181              		.cfi_offset 14, -4
 182 0002 82B0     		sub	sp, sp, #8
 183              		.cfi_def_cfa_offset 16
 184 0004 00AF     		add	r7, sp, #0
 185              		.cfi_def_cfa_register 7
 186 0006 0A1C     		mov	r2, r1
 187 0008 FB1D     		add	r3, r7, #7
 188 000a 011C     		add	r1, r0, #0
 189 000c 1970     		strb	r1, [r3]
 190 000e BB1D     		add	r3, r7, #6
 191 0010 1A70     		strb	r2, [r3]
 119:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   /* Check the parameters */
 120:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   assert_param(IS_NVIC_LP(LowPowerMode));
 192              		.loc 1 120 0
 193 0012 FB1D     		add	r3, r7, #7
 194 0014 1B78     		ldrb	r3, [r3]
 195 0016 102B     		cmp	r3, #16
 196 0018 0CD0     		beq	.L9
 197              		.loc 1 120 0 is_stmt 0 discriminator 1
 198 001a FB1D     		add	r3, r7, #7
 199 001c 1B78     		ldrb	r3, [r3]
 200 001e 042B     		cmp	r3, #4
 201 0020 08D0     		beq	.L9
 202 0022 FB1D     		add	r3, r7, #7
 203 0024 1B78     		ldrb	r3, [r3]
 204 0026 022B     		cmp	r3, #2
 205 0028 04D0     		beq	.L9
 206 002a 144B     		ldr	r3, .L13
 207 002c 181C     		mov	r0, r3
 208 002e 7821     		mov	r1, #120
 209 0030 FFF7FEFF 		bl	assert_failed
 210              	.L9:
 121:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   
 122:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));  
 211              		.loc 1 122 0 is_stmt 1
 212 0034 BB1D     		add	r3, r7, #6
 213 0036 1B78     		ldrb	r3, [r3]
 214 0038 002B     		cmp	r3, #0
 215 003a 08D0     		beq	.L10
 216              		.loc 1 122 0 is_stmt 0 discriminator 1
 217 003c BB1D     		add	r3, r7, #6
 218 003e 1B78     		ldrb	r3, [r3]
 219 0040 012B     		cmp	r3, #1
 220 0042 04D0     		beq	.L10
 221 0044 0D4B     		ldr	r3, .L13
 222 0046 181C     		mov	r0, r3
 223 0048 7A21     		mov	r1, #122
 224 004a FFF7FEFF 		bl	assert_failed
 225              	.L10:
 123:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   
 124:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   if (NewState != DISABLE)
 226              		.loc 1 124 0 is_stmt 1
 227 004e BB1D     		add	r3, r7, #6
 228 0050 1B78     		ldrb	r3, [r3]
 229 0052 002B     		cmp	r3, #0
 230 0054 07D0     		beq	.L11
 125:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   {
 126:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****     SCB->SCR |= LowPowerMode;
 231              		.loc 1 126 0
 232 0056 0A4B     		ldr	r3, .L13+4
 233 0058 094A     		ldr	r2, .L13+4
 234 005a 1169     		ldr	r1, [r2, #16]
 235 005c FA1D     		add	r2, r7, #7
 236 005e 1278     		ldrb	r2, [r2]
 237 0060 0A43     		orr	r2, r1
 238 0062 1A61     		str	r2, [r3, #16]
 239 0064 07E0     		b	.L8
 240              	.L11:
 127:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   }
 128:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   else
 129:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   {
 130:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****     SCB->SCR &= (uint32_t)(~(uint32_t)LowPowerMode);
 241              		.loc 1 130 0
 242 0066 064B     		ldr	r3, .L13+4
 243 0068 054A     		ldr	r2, .L13+4
 244 006a 1269     		ldr	r2, [r2, #16]
 245 006c F91D     		add	r1, r7, #7
 246 006e 0978     		ldrb	r1, [r1]
 247 0070 C943     		mvn	r1, r1
 248 0072 0A40     		and	r2, r1
 249 0074 1A61     		str	r2, [r3, #16]
 250              	.L8:
 131:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   }
 132:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** }
 251              		.loc 1 132 0
 252 0076 BD46     		mov	sp, r7
 253 0078 02B0     		add	sp, sp, #8
 254              		@ sp needed
 255 007a 80BD     		pop	{r7, pc}
 256              	.L14:
 257              		.align	2
 258              	.L13:
 259 007c 00000000 		.word	.LC0
 260 0080 00ED00E0 		.word	-536810240
 261              		.cfi_endproc
 262              	.LFE33:
 264              		.section	.text.SysTick_CLKSourceConfig,"ax",%progbits
 265              		.align	2
 266              		.global	SysTick_CLKSourceConfig
 267              		.code	16
 268              		.thumb_func
 270              	SysTick_CLKSourceConfig:
 271              	.LFB34:
 133:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** 
 134:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** /**
 135:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * @brief  Configures the SysTick clock source.
 136:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * @param  SysTick_CLKSource: specifies the SysTick clock source.
 137:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   *   This parameter can be one of the following values:
 138:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   *     @arg SysTick_CLKSource_HCLK_Div8: AHB clock divided by 8 selected as SysTick clock source.
 139:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   *     @arg SysTick_CLKSource_HCLK: AHB clock selected as SysTick clock source.
 140:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   * @retval None
 141:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   */
 142:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** void SysTick_CLKSourceConfig(uint32_t SysTick_CLKSource)
 143:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** {
 272              		.loc 1 143 0
 273              		.cfi_startproc
 274 0000 80B5     		push	{r7, lr}
 275              		.cfi_def_cfa_offset 8
 276              		.cfi_offset 7, -8
 277              		.cfi_offset 14, -4
 278 0002 82B0     		sub	sp, sp, #8
 279              		.cfi_def_cfa_offset 16
 280 0004 00AF     		add	r7, sp, #0
 281              		.cfi_def_cfa_register 7
 282 0006 7860     		str	r0, [r7, #4]
 144:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   /* Check the parameters */
 145:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(SysTick_CLKSource));
 283              		.loc 1 145 0
 284 0008 7B68     		ldr	r3, [r7, #4]
 285 000a 042B     		cmp	r3, #4
 286 000c 07D0     		beq	.L16
 287              		.loc 1 145 0 is_stmt 0 discriminator 1
 288 000e 7B68     		ldr	r3, [r7, #4]
 289 0010 0533     		add	r3, r3, #5
 290 0012 04D0     		beq	.L16
 291 0014 0B4B     		ldr	r3, .L19
 292 0016 181C     		mov	r0, r3
 293 0018 9121     		mov	r1, #145
 294 001a FFF7FEFF 		bl	assert_failed
 295              	.L16:
 146:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   
 147:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   if (SysTick_CLKSource == SysTick_CLKSource_HCLK)
 296              		.loc 1 147 0 is_stmt 1
 297 001e 7B68     		ldr	r3, [r7, #4]
 298 0020 042B     		cmp	r3, #4
 299 0022 06D1     		bne	.L17
 148:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   {
 149:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****     SysTick->CTRL |= SysTick_CLKSource_HCLK;
 300              		.loc 1 149 0
 301 0024 084B     		ldr	r3, .L19+4
 302 0026 084A     		ldr	r2, .L19+4
 303 0028 1268     		ldr	r2, [r2]
 304 002a 0421     		mov	r1, #4
 305 002c 0A43     		orr	r2, r1
 306 002e 1A60     		str	r2, [r3]
 307 0030 05E0     		b	.L15
 308              	.L17:
 150:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   }
 151:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   else
 152:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   {
 153:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****     SysTick->CTRL &= SysTick_CLKSource_HCLK_Div8;
 309              		.loc 1 153 0
 310 0032 054B     		ldr	r3, .L19+4
 311 0034 044A     		ldr	r2, .L19+4
 312 0036 1268     		ldr	r2, [r2]
 313 0038 0421     		mov	r1, #4
 314 003a 8A43     		bic	r2, r1
 315 003c 1A60     		str	r2, [r3]
 316              	.L15:
 154:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c ****   }
 155:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_misc.c **** }
 317              		.loc 1 155 0
 318 003e BD46     		mov	sp, r7
 319 0040 02B0     		add	sp, sp, #8
 320              		@ sp needed
 321 0042 80BD     		pop	{r7, pc}
 322              	.L20:
 323              		.align	2
 324              	.L19:
 325 0044 00000000 		.word	.LC0
 326 0048 10E000E0 		.word	-536813552
 327              		.cfi_endproc
 328              	.LFE34:
 330              		.text
 331              	.Letext0:
 332              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/20140609/arm-none-eabi/include/machine/_default_types
 333              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20140609/arm-none-eabi/include/stdint.h"
 334              		.file 4 "../../ext-src/CMSIS/Include/core_cm0.h"
 335              		.file 5 "../../ext-src/CMSIS/ST/STM32F0xx/Include/stm32f0xx.h"
 336              		.file 6 "../../ext-src/STM32F0xx_StdPeriph_Driver/inc/stm32f0xx_misc.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_misc.c
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccoMElj8.s:18     .rodata:0000000000000000 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccoMElj8.s:23     .text.NVIC_Init:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccoMElj8.s:28     .text.NVIC_Init:0000000000000000 NVIC_Init
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccoMElj8.s:163    .text.NVIC_Init:00000000000000d4 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccoMElj8.s:169    .text.NVIC_SystemLPConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccoMElj8.s:174    .text.NVIC_SystemLPConfig:0000000000000000 NVIC_SystemLPConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccoMElj8.s:259    .text.NVIC_SystemLPConfig:000000000000007c $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccoMElj8.s:265    .text.SysTick_CLKSourceConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccoMElj8.s:270    .text.SysTick_CLKSourceConfig:0000000000000000 SysTick_CLKSourceConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccoMElj8.s:325    .text.SysTick_CLKSourceConfig:0000000000000044 $d
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.0.9252205565be9cbc11fa49e4ee70d556
                           .group:0000000000000000 wm4.stm32f0xx.h.54.664bd2bdbb20859ae6a5c66c16d4ee5a
                           .group:0000000000000000 wm4.core_cm0.h.32.41c1bd92799bc17b3c8424dd5c622427
                           .group:0000000000000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:0000000000000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:0000000000000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:0000000000000000 wm4.core_cm0.h.130.eea61816b4c7004601b0935484a214ea
                           .group:0000000000000000 wm4.stm32f0xx.h.226.38dd78fa77e64690c744af5bf4bffc7b
                           .group:0000000000000000 wm4.stm32f0xx_cec.h.80.d17e4ea90700c26010f339885be92ac0
                           .group:0000000000000000 wm4.stm32f0xx_crc.h.31.48fbd36307d848f32978567b16118557
                           .group:0000000000000000 wm4.stm32f0xx_comp.h.31.a640b8c7673f3e181cfd826dce70b6e2
                           .group:0000000000000000 wm4.stm32f0xx_dac.h.31.3e178ad0888f70df8fbc4c999d855b3e
                           .group:0000000000000000 wm4.stm32f0xx_dbgmcu.h.31.282da985c6ed8dd33417cf074ecfdf63
                           .group:0000000000000000 wm4.stm32f0xx_dma.h.31.68def2497939cb34c3f292e0c507724a
                           .group:0000000000000000 wm4.stm32f0xx_exti.h.31.81a00331ef3e014ed4dafe9e9baacca3
                           .group:0000000000000000 wm4.stm32f0xx_flash.h.31.60d92ed32439cfb92572ec2678e2be21
                           .group:0000000000000000 wm4.stm32f0xx_gpio.h.31.df5c3a39b21131ade11d30b7e1580be6
                           .group:0000000000000000 wm4.stm32f0xx_syscfg.h.31.f98c72ea26c47fccafefd977b75786d3
                           .group:0000000000000000 wm4.stm32f0xx_i2c.h.31.83969866ec38bbcc1bff9238f01a1954
                           .group:0000000000000000 wm4.stm32f0xx_iwdg.h.31.bb16f7e18e54df66bf9bd0e2b29bdc93
                           .group:0000000000000000 wm4.stm32f0xx_pwr.h.31.5b469253a65db741700e0b45f396c99d
                           .group:0000000000000000 wm4.stm32f0xx_rcc.h.31.bc2f5dd9e2f518d727a1e0ce497a42e6
                           .group:0000000000000000 wm4.stm32f0xx_rtc.h.31.bc9d631913a743746cf54f04d4efbf7b
                           .group:0000000000000000 wm4.stm32f0xx_spi.h.31.5b4d0d36c03feb5b081143cdba79744d
                           .group:0000000000000000 wm4.stm32f0xx_tim.h.31.21b4d7229c685868595d751757b51e1b
                           .group:0000000000000000 wm4.stm32f0xx_usart.h.31.8abae79a1c4f266d08faf5996370b48f
                           .group:0000000000000000 wm4.stm32f0xx_wwdg.h.31.0cf1a9b3d89d147c688025fdd33d9c49
                           .group:0000000000000000 wm4.stm32f0xx_misc.h.31.d5c08c37e69b8a852dbb75e9252454c6

UNDEFINED SYMBOLS
assert_failed
