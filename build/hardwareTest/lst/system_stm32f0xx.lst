   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"system_stm32f0xx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	SystemCoreClock
  18              		.section	.data.SystemCoreClock,"aw",%progbits
  19              		.align	2
  22              	SystemCoreClock:
  23 0000 006CDC02 		.word	48000000
  24              		.global	AHBPrescTable
  25              		.section	.data.AHBPrescTable,"aw",%progbits
  26              		.align	2
  29              	AHBPrescTable:
  30 0000 00       		.byte	0
  31 0001 00       		.byte	0
  32 0002 00       		.byte	0
  33 0003 00       		.byte	0
  34 0004 00       		.byte	0
  35 0005 00       		.byte	0
  36 0006 00       		.byte	0
  37 0007 00       		.byte	0
  38 0008 01       		.byte	1
  39 0009 02       		.byte	2
  40 000a 03       		.byte	3
  41 000b 04       		.byte	4
  42 000c 06       		.byte	6
  43 000d 07       		.byte	7
  44 000e 08       		.byte	8
  45 000f 09       		.byte	9
  46              		.section	.text.SystemInit,"ax",%progbits
  47              		.align	2
  48              		.global	SystemInit
  49              		.code	16
  50              		.thumb_func
  52              	SystemInit:
  53              	.LFB32:
  54              		.file 1 "../../src/driver/system_stm32f0xx.c"
   1:../../src/driver/system_stm32f0xx.c **** /**
   2:../../src/driver/system_stm32f0xx.c ****   ******************************************************************************
   3:../../src/driver/system_stm32f0xx.c ****   * @file    system_stm32f0xx.c
   4:../../src/driver/system_stm32f0xx.c ****   * @author  MCD Application Team
   5:../../src/driver/system_stm32f0xx.c ****   * @version V1.0.0
   6:../../src/driver/system_stm32f0xx.c ****   * @date    23-March-2012
   7:../../src/driver/system_stm32f0xx.c ****   * @brief   CMSIS Cortex-M0 Device Peripheral Access Layer System Source File.
   8:../../src/driver/system_stm32f0xx.c ****   *          This file contains the system clock configuration for STM32F0xx devices,
   9:../../src/driver/system_stm32f0xx.c ****   *          and is generated by the clock configuration tool  
  10:../../src/driver/system_stm32f0xx.c ****   *          STM32F0xx_Clock_Configuration_V1.0.0.xls
  11:../../src/driver/system_stm32f0xx.c ****   *
  12:../../src/driver/system_stm32f0xx.c ****   * 1.  This file provides two functions and one global variable to be called from 
  13:../../src/driver/system_stm32f0xx.c ****   *     user application:
  14:../../src/driver/system_stm32f0xx.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  15:../../src/driver/system_stm32f0xx.c ****   *                      and Divider factors, AHB/APBx prescalers and Flash settings),
  16:../../src/driver/system_stm32f0xx.c ****   *                      depending on the configuration made in the clock xls tool.
  17:../../src/driver/system_stm32f0xx.c ****   *                      This function is called at startup just after reset and 
  18:../../src/driver/system_stm32f0xx.c ****   *                      before branch to main program. This call is made inside
  19:../../src/driver/system_stm32f0xx.c ****   *                      the "startup_stm32f0xx.s" file.
  20:../../src/driver/system_stm32f0xx.c ****   *
  21:../../src/driver/system_stm32f0xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  22:../../src/driver/system_stm32f0xx.c ****   *                                  by the user application to setup the SysTick 
  23:../../src/driver/system_stm32f0xx.c ****   *                                  timer or configure other parameters.
  24:../../src/driver/system_stm32f0xx.c ****   *
  25:../../src/driver/system_stm32f0xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  26:../../src/driver/system_stm32f0xx.c ****   *                                 be called whenever the core clock is changed
  27:../../src/driver/system_stm32f0xx.c ****   *                                 during program execution.
  28:../../src/driver/system_stm32f0xx.c ****   *
  29:../../src/driver/system_stm32f0xx.c ****   * 2. After each device reset the HSI (8 MHz Range) is used as system clock source.
  30:../../src/driver/system_stm32f0xx.c ****   *    Then SystemInit() function is called, in "startup_stm32f0xx.s" file, to
  31:../../src/driver/system_stm32f0xx.c ****   *    configure the system clock before to branch to main program.
  32:../../src/driver/system_stm32f0xx.c ****   *
  33:../../src/driver/system_stm32f0xx.c ****   * 3. If the system clock source selected by user fails to startup, the SystemInit()
  34:../../src/driver/system_stm32f0xx.c ****   *    function will do nothing and HSI still used as system clock source. User can 
  35:../../src/driver/system_stm32f0xx.c ****   *    add some code to deal with this issue inside the SetSysClock() function.
  36:../../src/driver/system_stm32f0xx.c ****   *
  37:../../src/driver/system_stm32f0xx.c ****   * 4. The default value of HSE crystal is set to 8MHz, refer to "HSE_VALUE" define
  38:../../src/driver/system_stm32f0xx.c ****   *    in "stm32f0xx.h" file. When HSE is used as system clock source, directly or
  39:../../src/driver/system_stm32f0xx.c ****   *    through PLL, and you are using different crystal you have to adapt the HSE
  40:../../src/driver/system_stm32f0xx.c ****   *    value to your own configuration.
  41:../../src/driver/system_stm32f0xx.c ****   *
  42:../../src/driver/system_stm32f0xx.c ****   * 5. This file configures the system clock as follows:
  43:../../src/driver/system_stm32f0xx.c ****   *=============================================================================
  44:../../src/driver/system_stm32f0xx.c ****   *                         System Clock Configuration
  45:../../src/driver/system_stm32f0xx.c ****   *=============================================================================
  46:../../src/driver/system_stm32f0xx.c ****   *        System Clock source          | PLL(HSE)
  47:../../src/driver/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  48:../../src/driver/system_stm32f0xx.c ****   *        SYSCLK                       | 48000000 Hz
  49:../../src/driver/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  50:../../src/driver/system_stm32f0xx.c ****   *        HCLK                         | 48000000 Hz
  51:../../src/driver/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  52:../../src/driver/system_stm32f0xx.c ****   *        AHB Prescaler                | 1
  53:../../src/driver/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  54:../../src/driver/system_stm32f0xx.c ****   *        APB1 Prescaler               | 1
  55:../../src/driver/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  56:../../src/driver/system_stm32f0xx.c ****   *        APB2 Prescaler               | 1
  57:../../src/driver/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  58:../../src/driver/system_stm32f0xx.c ****   *        HSE Frequency                | 8000000 Hz
  59:../../src/driver/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  60:../../src/driver/system_stm32f0xx.c ****   *        PLL MUL                      | 6
  61:../../src/driver/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  62:../../src/driver/system_stm32f0xx.c ****   *        VDD                          | 3.3 V
  63:../../src/driver/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  64:../../src/driver/system_stm32f0xx.c ****   *        Flash Latency                | 1 WS
  65:../../src/driver/system_stm32f0xx.c ****   *-----------------------------------------------------------------------------
  66:../../src/driver/system_stm32f0xx.c ****   *=============================================================================
  67:../../src/driver/system_stm32f0xx.c ****   ******************************************************************************
  68:../../src/driver/system_stm32f0xx.c ****   * @attention
  69:../../src/driver/system_stm32f0xx.c ****   *
  70:../../src/driver/system_stm32f0xx.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  71:../../src/driver/system_stm32f0xx.c ****   *
  72:../../src/driver/system_stm32f0xx.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  73:../../src/driver/system_stm32f0xx.c ****   * You may not use this file except in compliance with the License.
  74:../../src/driver/system_stm32f0xx.c ****   * You may obtain a copy of the License at:
  75:../../src/driver/system_stm32f0xx.c ****   *
  76:../../src/driver/system_stm32f0xx.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  77:../../src/driver/system_stm32f0xx.c ****   *
  78:../../src/driver/system_stm32f0xx.c ****   * Unless required by applicable law or agreed to in writing, software 
  79:../../src/driver/system_stm32f0xx.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  80:../../src/driver/system_stm32f0xx.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  81:../../src/driver/system_stm32f0xx.c ****   * See the License for the specific language governing permissions and
  82:../../src/driver/system_stm32f0xx.c ****   * limitations under the License.
  83:../../src/driver/system_stm32f0xx.c ****   *
  84:../../src/driver/system_stm32f0xx.c ****   ******************************************************************************
  85:../../src/driver/system_stm32f0xx.c ****   */
  86:../../src/driver/system_stm32f0xx.c **** 
  87:../../src/driver/system_stm32f0xx.c **** /** @addtogroup CMSIS
  88:../../src/driver/system_stm32f0xx.c ****   * @{
  89:../../src/driver/system_stm32f0xx.c ****   */
  90:../../src/driver/system_stm32f0xx.c **** 
  91:../../src/driver/system_stm32f0xx.c **** /** @addtogroup stm32f0xx_system
  92:../../src/driver/system_stm32f0xx.c ****   * @{
  93:../../src/driver/system_stm32f0xx.c ****   */  
  94:../../src/driver/system_stm32f0xx.c ****   
  95:../../src/driver/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Includes
  96:../../src/driver/system_stm32f0xx.c ****   * @{
  97:../../src/driver/system_stm32f0xx.c ****   */
  98:../../src/driver/system_stm32f0xx.c **** 
  99:../../src/driver/system_stm32f0xx.c **** #include "stm32f0xx.h"
 100:../../src/driver/system_stm32f0xx.c **** 
 101:../../src/driver/system_stm32f0xx.c **** /**
 102:../../src/driver/system_stm32f0xx.c ****   * @}
 103:../../src/driver/system_stm32f0xx.c ****   */
 104:../../src/driver/system_stm32f0xx.c **** 
 105:../../src/driver/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_TypesDefinitions
 106:../../src/driver/system_stm32f0xx.c ****   * @{
 107:../../src/driver/system_stm32f0xx.c ****   */
 108:../../src/driver/system_stm32f0xx.c **** 
 109:../../src/driver/system_stm32f0xx.c **** /**
 110:../../src/driver/system_stm32f0xx.c ****   * @}
 111:../../src/driver/system_stm32f0xx.c ****   */
 112:../../src/driver/system_stm32f0xx.c **** 
 113:../../src/driver/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Defines
 114:../../src/driver/system_stm32f0xx.c ****   * @{
 115:../../src/driver/system_stm32f0xx.c ****   */
 116:../../src/driver/system_stm32f0xx.c **** /**
 117:../../src/driver/system_stm32f0xx.c ****   * @}
 118:../../src/driver/system_stm32f0xx.c ****   */
 119:../../src/driver/system_stm32f0xx.c **** 
 120:../../src/driver/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Macros
 121:../../src/driver/system_stm32f0xx.c ****   * @{
 122:../../src/driver/system_stm32f0xx.c ****   */
 123:../../src/driver/system_stm32f0xx.c **** 
 124:../../src/driver/system_stm32f0xx.c **** /**
 125:../../src/driver/system_stm32f0xx.c ****   * @}
 126:../../src/driver/system_stm32f0xx.c ****   */
 127:../../src/driver/system_stm32f0xx.c **** 
 128:../../src/driver/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Variables
 129:../../src/driver/system_stm32f0xx.c ****   * @{
 130:../../src/driver/system_stm32f0xx.c ****   */
 131:../../src/driver/system_stm32f0xx.c **** uint32_t SystemCoreClock    = 48000000;
 132:../../src/driver/system_stm32f0xx.c **** __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 133:../../src/driver/system_stm32f0xx.c **** 
 134:../../src/driver/system_stm32f0xx.c **** /**
 135:../../src/driver/system_stm32f0xx.c ****   * @}
 136:../../src/driver/system_stm32f0xx.c ****   */
 137:../../src/driver/system_stm32f0xx.c **** 
 138:../../src/driver/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_FunctionPrototypes
 139:../../src/driver/system_stm32f0xx.c ****   * @{
 140:../../src/driver/system_stm32f0xx.c ****   */
 141:../../src/driver/system_stm32f0xx.c **** 
 142:../../src/driver/system_stm32f0xx.c **** static void SetSysClock(void);
 143:../../src/driver/system_stm32f0xx.c **** 
 144:../../src/driver/system_stm32f0xx.c **** /**
 145:../../src/driver/system_stm32f0xx.c ****   * @}
 146:../../src/driver/system_stm32f0xx.c ****   */
 147:../../src/driver/system_stm32f0xx.c **** 
 148:../../src/driver/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Functions
 149:../../src/driver/system_stm32f0xx.c ****   * @{
 150:../../src/driver/system_stm32f0xx.c ****   */
 151:../../src/driver/system_stm32f0xx.c **** 
 152:../../src/driver/system_stm32f0xx.c **** /**
 153:../../src/driver/system_stm32f0xx.c ****   * @brief  Setup the microcontroller system.
 154:../../src/driver/system_stm32f0xx.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 155:../../src/driver/system_stm32f0xx.c ****   *         SystemCoreClock variable.
 156:../../src/driver/system_stm32f0xx.c ****   * @param  None
 157:../../src/driver/system_stm32f0xx.c ****   * @retval None
 158:../../src/driver/system_stm32f0xx.c ****   */
 159:../../src/driver/system_stm32f0xx.c **** void SystemInit (void)
 160:../../src/driver/system_stm32f0xx.c **** {    
  55              		.loc 1 160 0
  56              		.cfi_startproc
  57 0000 80B5     		push	{r7, lr}
  58              		.cfi_def_cfa_offset 8
  59              		.cfi_offset 7, -8
  60              		.cfi_offset 14, -4
  61 0002 00AF     		add	r7, sp, #0
  62              		.cfi_def_cfa_register 7
 161:../../src/driver/system_stm32f0xx.c ****   /* Set HSION bit */
 162:../../src/driver/system_stm32f0xx.c ****   RCC->CR |= (uint32_t)0x00000001;
  63              		.loc 1 162 0
  64 0004 1B4B     		ldr	r3, .L2
  65 0006 1B4A     		ldr	r2, .L2
  66 0008 1268     		ldr	r2, [r2]
  67 000a 0121     		mov	r1, #1
  68 000c 0A43     		orr	r2, r1
  69 000e 1A60     		str	r2, [r3]
 163:../../src/driver/system_stm32f0xx.c **** 
 164:../../src/driver/system_stm32f0xx.c ****   /* Reset SW[1:0], HPRE[3:0], PPRE[2:0], ADCPRE and MCOSEL[2:0] bits */
 165:../../src/driver/system_stm32f0xx.c ****   RCC->CFGR &= (uint32_t)0xF8FFB80C;
  70              		.loc 1 165 0
  71 0010 184B     		ldr	r3, .L2
  72 0012 184A     		ldr	r2, .L2
  73 0014 5168     		ldr	r1, [r2, #4]
  74 0016 184A     		ldr	r2, .L2+4
  75 0018 0A40     		and	r2, r1
  76 001a 5A60     		str	r2, [r3, #4]
 166:../../src/driver/system_stm32f0xx.c ****   
 167:../../src/driver/system_stm32f0xx.c ****   /* Reset HSEON, CSSON and PLLON bits */
 168:../../src/driver/system_stm32f0xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  77              		.loc 1 168 0
  78 001c 154B     		ldr	r3, .L2
  79 001e 154A     		ldr	r2, .L2
  80 0020 1168     		ldr	r1, [r2]
  81 0022 164A     		ldr	r2, .L2+8
  82 0024 0A40     		and	r2, r1
  83 0026 1A60     		str	r2, [r3]
 169:../../src/driver/system_stm32f0xx.c **** 
 170:../../src/driver/system_stm32f0xx.c ****   /* Reset HSEBYP bit */
 171:../../src/driver/system_stm32f0xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  84              		.loc 1 171 0
  85 0028 124B     		ldr	r3, .L2
  86 002a 124A     		ldr	r2, .L2
  87 002c 1168     		ldr	r1, [r2]
  88 002e 144A     		ldr	r2, .L2+12
  89 0030 0A40     		and	r2, r1
  90 0032 1A60     		str	r2, [r3]
 172:../../src/driver/system_stm32f0xx.c **** 
 173:../../src/driver/system_stm32f0xx.c ****   /* Reset PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
 174:../../src/driver/system_stm32f0xx.c ****   RCC->CFGR &= (uint32_t)0xFFC0FFFF;
  91              		.loc 1 174 0
  92 0034 0F4B     		ldr	r3, .L2
  93 0036 0F4A     		ldr	r2, .L2
  94 0038 5168     		ldr	r1, [r2, #4]
  95 003a 124A     		ldr	r2, .L2+16
  96 003c 0A40     		and	r2, r1
  97 003e 5A60     		str	r2, [r3, #4]
 175:../../src/driver/system_stm32f0xx.c **** 
 176:../../src/driver/system_stm32f0xx.c ****   /* Reset PREDIV1[3:0] bits */
 177:../../src/driver/system_stm32f0xx.c ****   RCC->CFGR2 &= (uint32_t)0xFFFFFFF0;
  98              		.loc 1 177 0
  99 0040 0C4B     		ldr	r3, .L2
 100 0042 0C4A     		ldr	r2, .L2
 101 0044 D26A     		ldr	r2, [r2, #44]
 102 0046 0F21     		mov	r1, #15
 103 0048 8A43     		bic	r2, r1
 104 004a DA62     		str	r2, [r3, #44]
 178:../../src/driver/system_stm32f0xx.c **** 
 179:../../src/driver/system_stm32f0xx.c ****   /* Reset USARTSW[1:0], I2CSW, CECSW and ADCSW bits */
 180:../../src/driver/system_stm32f0xx.c ****   RCC->CFGR3 &= (uint32_t)0xFFFFFEAC;
 105              		.loc 1 180 0
 106 004c 094B     		ldr	r3, .L2
 107 004e 094A     		ldr	r2, .L2
 108 0050 116B     		ldr	r1, [r2, #48]
 109 0052 0D4A     		ldr	r2, .L2+20
 110 0054 0A40     		and	r2, r1
 111 0056 1A63     		str	r2, [r3, #48]
 181:../../src/driver/system_stm32f0xx.c **** 
 182:../../src/driver/system_stm32f0xx.c ****   /* Reset HSI14 bit */
 183:../../src/driver/system_stm32f0xx.c ****   RCC->CR2 &= (uint32_t)0xFFFFFFFE;
 112              		.loc 1 183 0
 113 0058 064B     		ldr	r3, .L2
 114 005a 064A     		ldr	r2, .L2
 115 005c 526B     		ldr	r2, [r2, #52]
 116 005e 0121     		mov	r1, #1
 117 0060 8A43     		bic	r2, r1
 118 0062 5A63     		str	r2, [r3, #52]
 184:../../src/driver/system_stm32f0xx.c **** 
 185:../../src/driver/system_stm32f0xx.c ****   /* Disable all interrupts */
 186:../../src/driver/system_stm32f0xx.c ****   RCC->CIR = 0x00000000;
 119              		.loc 1 186 0
 120 0064 034B     		ldr	r3, .L2
 121 0066 0022     		mov	r2, #0
 122 0068 9A60     		str	r2, [r3, #8]
 187:../../src/driver/system_stm32f0xx.c **** 
 188:../../src/driver/system_stm32f0xx.c ****   /* Configure the System clock frequency, AHB/APBx prescalers and Flash settings */
 189:../../src/driver/system_stm32f0xx.c ****   SetSysClock();
 123              		.loc 1 189 0
 124 006a FFF7FEFF 		bl	SetSysClock
 190:../../src/driver/system_stm32f0xx.c **** }
 125              		.loc 1 190 0
 126 006e BD46     		mov	sp, r7
 127              		@ sp needed
 128 0070 80BD     		pop	{r7, pc}
 129              	.L3:
 130 0072 C046     		.align	2
 131              	.L2:
 132 0074 00100240 		.word	1073876992
 133 0078 0CB8FFF8 		.word	-117458932
 134 007c FFFFF6FE 		.word	-17367041
 135 0080 FFFFFBFF 		.word	-262145
 136 0084 FFFFC0FF 		.word	-4128769
 137 0088 ACFEFFFF 		.word	-340
 138              		.cfi_endproc
 139              	.LFE32:
 141              		.global	__aeabi_uidiv
 142              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 143              		.align	2
 144              		.global	SystemCoreClockUpdate
 145              		.code	16
 146              		.thumb_func
 148              	SystemCoreClockUpdate:
 149              	.LFB33:
 191:../../src/driver/system_stm32f0xx.c **** 
 192:../../src/driver/system_stm32f0xx.c **** /**
 193:../../src/driver/system_stm32f0xx.c ****   * @brief  Update SystemCoreClock according to Clock Register Values
 194:../../src/driver/system_stm32f0xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 195:../../src/driver/system_stm32f0xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 196:../../src/driver/system_stm32f0xx.c ****   *         other parameters.
 197:../../src/driver/system_stm32f0xx.c ****   *
 198:../../src/driver/system_stm32f0xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 199:../../src/driver/system_stm32f0xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 200:../../src/driver/system_stm32f0xx.c ****   *         based on this variable will be incorrect.         
 201:../../src/driver/system_stm32f0xx.c ****   *
 202:../../src/driver/system_stm32f0xx.c ****   * @note   - The system frequency computed by this function is not the real 
 203:../../src/driver/system_stm32f0xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 204:../../src/driver/system_stm32f0xx.c ****   *           constant and the selected clock source:
 205:../../src/driver/system_stm32f0xx.c ****   *
 206:../../src/driver/system_stm32f0xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 207:../../src/driver/system_stm32f0xx.c ****   *                                              
 208:../../src/driver/system_stm32f0xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 209:../../src/driver/system_stm32f0xx.c ****   *                          
 210:../../src/driver/system_stm32f0xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**)
 211:../../src/driver/system_stm32f0xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 212:../../src/driver/system_stm32f0xx.c ****   *
 213:../../src/driver/system_stm32f0xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f0xx.h file (default value
 214:../../src/driver/system_stm32f0xx.c ****   *             8 MHz) but the real value may vary depending on the variations
 215:../../src/driver/system_stm32f0xx.c ****   *             in voltage and temperature.
 216:../../src/driver/system_stm32f0xx.c ****   *
 217:../../src/driver/system_stm32f0xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f0xx.h file (default value
 218:../../src/driver/system_stm32f0xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 219:../../src/driver/system_stm32f0xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 220:../../src/driver/system_stm32f0xx.c ****   *              have wrong result.
 221:../../src/driver/system_stm32f0xx.c ****   *
 222:../../src/driver/system_stm32f0xx.c ****   *         - The result of this function could be not correct when using fractional
 223:../../src/driver/system_stm32f0xx.c ****   *           value for HSE crystal.
 224:../../src/driver/system_stm32f0xx.c ****   * @param  None
 225:../../src/driver/system_stm32f0xx.c ****   * @retval None
 226:../../src/driver/system_stm32f0xx.c ****   */
 227:../../src/driver/system_stm32f0xx.c **** void SystemCoreClockUpdate (void)
 228:../../src/driver/system_stm32f0xx.c **** {
 150              		.loc 1 228 0
 151              		.cfi_startproc
 152 0000 80B5     		push	{r7, lr}
 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 7, -8
 155              		.cfi_offset 14, -4
 156 0002 84B0     		sub	sp, sp, #16
 157              		.cfi_def_cfa_offset 24
 158 0004 00AF     		add	r7, sp, #0
 159              		.cfi_def_cfa_register 7
 229:../../src/driver/system_stm32f0xx.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, prediv1factor = 0;
 160              		.loc 1 229 0
 161 0006 0023     		mov	r3, #0
 162 0008 FB60     		str	r3, [r7, #12]
 163 000a 0023     		mov	r3, #0
 164 000c BB60     		str	r3, [r7, #8]
 165 000e 0023     		mov	r3, #0
 166 0010 7B60     		str	r3, [r7, #4]
 167 0012 0023     		mov	r3, #0
 168 0014 3B60     		str	r3, [r7]
 230:../../src/driver/system_stm32f0xx.c **** 
 231:../../src/driver/system_stm32f0xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 232:../../src/driver/system_stm32f0xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 169              		.loc 1 232 0
 170 0016 294B     		ldr	r3, .L13
 171 0018 5A68     		ldr	r2, [r3, #4]
 172 001a 0C23     		mov	r3, #12
 173 001c 1340     		and	r3, r2
 174 001e FB60     		str	r3, [r7, #12]
 233:../../src/driver/system_stm32f0xx.c ****   
 234:../../src/driver/system_stm32f0xx.c ****   switch (tmp)
 175              		.loc 1 234 0
 176 0020 FB68     		ldr	r3, [r7, #12]
 177 0022 042B     		cmp	r3, #4
 178 0024 07D0     		beq	.L6
 179 0026 082B     		cmp	r3, #8
 180 0028 09D0     		beq	.L7
 181 002a 002B     		cmp	r3, #0
 182 002c 30D1     		bne	.L12
 235:../../src/driver/system_stm32f0xx.c ****   {
 236:../../src/driver/system_stm32f0xx.c ****     case 0x00:  /* HSI used as system clock */
 237:../../src/driver/system_stm32f0xx.c ****       SystemCoreClock = HSI_VALUE;
 183              		.loc 1 237 0
 184 002e 244B     		ldr	r3, .L13+4
 185 0030 244A     		ldr	r2, .L13+8
 186 0032 1A60     		str	r2, [r3]
 238:../../src/driver/system_stm32f0xx.c ****       break;
 187              		.loc 1 238 0
 188 0034 30E0     		b	.L9
 189              	.L6:
 239:../../src/driver/system_stm32f0xx.c ****     case 0x04:  /* HSE used as system clock */
 240:../../src/driver/system_stm32f0xx.c ****       SystemCoreClock = HSE_VALUE;
 190              		.loc 1 240 0
 191 0036 224B     		ldr	r3, .L13+4
 192 0038 224A     		ldr	r2, .L13+8
 193 003a 1A60     		str	r2, [r3]
 241:../../src/driver/system_stm32f0xx.c ****       break;
 194              		.loc 1 241 0
 195 003c 2CE0     		b	.L9
 196              	.L7:
 242:../../src/driver/system_stm32f0xx.c ****     case 0x08:  /* PLL used as system clock */
 243:../../src/driver/system_stm32f0xx.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 244:../../src/driver/system_stm32f0xx.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 197              		.loc 1 244 0
 198 003e 1F4B     		ldr	r3, .L13
 199 0040 5A68     		ldr	r2, [r3, #4]
 200 0042 F023     		mov	r3, #240
 201 0044 9B03     		lsl	r3, r3, #14
 202 0046 1340     		and	r3, r2
 203 0048 BB60     		str	r3, [r7, #8]
 245:../../src/driver/system_stm32f0xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 204              		.loc 1 245 0
 205 004a 1C4B     		ldr	r3, .L13
 206 004c 5A68     		ldr	r2, [r3, #4]
 207 004e 8023     		mov	r3, #128
 208 0050 5B02     		lsl	r3, r3, #9
 209 0052 1340     		and	r3, r2
 210 0054 7B60     		str	r3, [r7, #4]
 246:../../src/driver/system_stm32f0xx.c ****       pllmull = ( pllmull >> 18) + 2;
 211              		.loc 1 246 0
 212 0056 BB68     		ldr	r3, [r7, #8]
 213 0058 9B0C     		lsr	r3, r3, #18
 214 005a 0233     		add	r3, r3, #2
 215 005c BB60     		str	r3, [r7, #8]
 247:../../src/driver/system_stm32f0xx.c ****       
 248:../../src/driver/system_stm32f0xx.c ****       if (pllsource == 0x00)
 216              		.loc 1 248 0
 217 005e 7B68     		ldr	r3, [r7, #4]
 218 0060 002B     		cmp	r3, #0
 219 0062 05D1     		bne	.L10
 249:../../src/driver/system_stm32f0xx.c ****       {
 250:../../src/driver/system_stm32f0xx.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 251:../../src/driver/system_stm32f0xx.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 220              		.loc 1 251 0
 221 0064 BB68     		ldr	r3, [r7, #8]
 222 0066 184A     		ldr	r2, .L13+12
 223 0068 5A43     		mul	r2, r3
 224 006a 154B     		ldr	r3, .L13+4
 225 006c 1A60     		str	r2, [r3]
 252:../../src/driver/system_stm32f0xx.c ****       }
 253:../../src/driver/system_stm32f0xx.c ****       else
 254:../../src/driver/system_stm32f0xx.c ****       {
 255:../../src/driver/system_stm32f0xx.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 256:../../src/driver/system_stm32f0xx.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 257:../../src/driver/system_stm32f0xx.c ****         SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 258:../../src/driver/system_stm32f0xx.c ****       }      
 259:../../src/driver/system_stm32f0xx.c ****       break;
 226              		.loc 1 259 0
 227 006e 13E0     		b	.L9
 228              	.L10:
 255:../../src/driver/system_stm32f0xx.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 229              		.loc 1 255 0
 230 0070 124B     		ldr	r3, .L13
 231 0072 DA6A     		ldr	r2, [r3, #44]
 232 0074 0F23     		mov	r3, #15
 233 0076 1340     		and	r3, r2
 234 0078 0133     		add	r3, r3, #1
 235 007a 3B60     		str	r3, [r7]
 257:../../src/driver/system_stm32f0xx.c ****         SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 236              		.loc 1 257 0
 237 007c 1148     		ldr	r0, .L13+8
 238 007e 3968     		ldr	r1, [r7]
 239 0080 FFF7FEFF 		bl	__aeabi_uidiv
 240 0084 031C     		mov	r3, r0
 241 0086 BA68     		ldr	r2, [r7, #8]
 242 0088 5A43     		mul	r2, r3
 243 008a 0D4B     		ldr	r3, .L13+4
 244 008c 1A60     		str	r2, [r3]
 245              		.loc 1 259 0
 246 008e 03E0     		b	.L9
 247              	.L12:
 260:../../src/driver/system_stm32f0xx.c ****     default: /* HSI used as system clock */
 261:../../src/driver/system_stm32f0xx.c ****       SystemCoreClock = HSI_VALUE;
 248              		.loc 1 261 0
 249 0090 0B4B     		ldr	r3, .L13+4
 250 0092 0C4A     		ldr	r2, .L13+8
 251 0094 1A60     		str	r2, [r3]
 262:../../src/driver/system_stm32f0xx.c ****       break;
 252              		.loc 1 262 0
 253 0096 C046     		mov	r8, r8
 254              	.L9:
 263:../../src/driver/system_stm32f0xx.c ****   }
 264:../../src/driver/system_stm32f0xx.c ****   /* Compute HCLK clock frequency ----------------*/
 265:../../src/driver/system_stm32f0xx.c ****   /* Get HCLK prescaler */
 266:../../src/driver/system_stm32f0xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 255              		.loc 1 266 0
 256 0098 084B     		ldr	r3, .L13
 257 009a 5A68     		ldr	r2, [r3, #4]
 258 009c F023     		mov	r3, #240
 259 009e 1340     		and	r3, r2
 260 00a0 1B09     		lsr	r3, r3, #4
 261 00a2 0A4A     		ldr	r2, .L13+16
 262 00a4 D35C     		ldrb	r3, [r2, r3]
 263 00a6 DBB2     		uxtb	r3, r3
 264 00a8 FB60     		str	r3, [r7, #12]
 267:../../src/driver/system_stm32f0xx.c ****   /* HCLK clock frequency */
 268:../../src/driver/system_stm32f0xx.c ****   SystemCoreClock >>= tmp;  
 265              		.loc 1 268 0
 266 00aa 054B     		ldr	r3, .L13+4
 267 00ac 1A68     		ldr	r2, [r3]
 268 00ae FB68     		ldr	r3, [r7, #12]
 269 00b0 DA40     		lsr	r2, r2, r3
 270 00b2 034B     		ldr	r3, .L13+4
 271 00b4 1A60     		str	r2, [r3]
 269:../../src/driver/system_stm32f0xx.c **** }
 272              		.loc 1 269 0
 273 00b6 BD46     		mov	sp, r7
 274 00b8 04B0     		add	sp, sp, #16
 275              		@ sp needed
 276 00ba 80BD     		pop	{r7, pc}
 277              	.L14:
 278              		.align	2
 279              	.L13:
 280 00bc 00100240 		.word	1073876992
 281 00c0 00000000 		.word	SystemCoreClock
 282 00c4 00127A00 		.word	8000000
 283 00c8 00093D00 		.word	4000000
 284 00cc 00000000 		.word	AHBPrescTable
 285              		.cfi_endproc
 286              	.LFE33:
 288              		.section	.text.SetSysClock,"ax",%progbits
 289              		.align	2
 290              		.code	16
 291              		.thumb_func
 293              	SetSysClock:
 294              	.LFB34:
 270:../../src/driver/system_stm32f0xx.c **** 
 271:../../src/driver/system_stm32f0xx.c **** /**
 272:../../src/driver/system_stm32f0xx.c ****   * @brief  Configures the System clock frequency, AHB/APBx prescalers and Flash
 273:../../src/driver/system_stm32f0xx.c ****   *         settings.
 274:../../src/driver/system_stm32f0xx.c ****   * @note   This function should be called only once the RCC clock configuration
 275:../../src/driver/system_stm32f0xx.c ****   *         is reset to the default reset state (done in SystemInit() function).
 276:../../src/driver/system_stm32f0xx.c ****   * @param  None
 277:../../src/driver/system_stm32f0xx.c ****   * @retval None
 278:../../src/driver/system_stm32f0xx.c ****   */
 279:../../src/driver/system_stm32f0xx.c **** static void SetSysClock(void)
 280:../../src/driver/system_stm32f0xx.c **** {
 295              		.loc 1 280 0
 296              		.cfi_startproc
 297 0000 80B5     		push	{r7, lr}
 298              		.cfi_def_cfa_offset 8
 299              		.cfi_offset 7, -8
 300              		.cfi_offset 14, -4
 301 0002 82B0     		sub	sp, sp, #8
 302              		.cfi_def_cfa_offset 16
 303 0004 00AF     		add	r7, sp, #0
 304              		.cfi_def_cfa_register 7
 281:../../src/driver/system_stm32f0xx.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 305              		.loc 1 281 0
 306 0006 0023     		mov	r3, #0
 307 0008 7B60     		str	r3, [r7, #4]
 308 000a 0023     		mov	r3, #0
 309 000c 3B60     		str	r3, [r7]
 282:../../src/driver/system_stm32f0xx.c ****   
 283:../../src/driver/system_stm32f0xx.c ****   /* SYSCLK, HCLK, PCLK configuration ----------------------------------------*/
 284:../../src/driver/system_stm32f0xx.c ****   /* Enable HSE */    
 285:../../src/driver/system_stm32f0xx.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 310              		.loc 1 285 0
 311 000e 314B     		ldr	r3, .L23
 312 0010 304A     		ldr	r2, .L23
 313 0012 1268     		ldr	r2, [r2]
 314 0014 8021     		mov	r1, #128
 315 0016 4902     		lsl	r1, r1, #9
 316 0018 0A43     		orr	r2, r1
 317 001a 1A60     		str	r2, [r3]
 318              	.L17:
 286:../../src/driver/system_stm32f0xx.c ****  
 287:../../src/driver/system_stm32f0xx.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 288:../../src/driver/system_stm32f0xx.c ****   do
 289:../../src/driver/system_stm32f0xx.c ****   {
 290:../../src/driver/system_stm32f0xx.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 319              		.loc 1 290 0 discriminator 1
 320 001c 2D4B     		ldr	r3, .L23
 321 001e 1A68     		ldr	r2, [r3]
 322 0020 8023     		mov	r3, #128
 323 0022 9B02     		lsl	r3, r3, #10
 324 0024 1340     		and	r3, r2
 325 0026 3B60     		str	r3, [r7]
 291:../../src/driver/system_stm32f0xx.c ****     StartUpCounter++;  
 326              		.loc 1 291 0 discriminator 1
 327 0028 7B68     		ldr	r3, [r7, #4]
 328 002a 0133     		add	r3, r3, #1
 329 002c 7B60     		str	r3, [r7, #4]
 292:../../src/driver/system_stm32f0xx.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 330              		.loc 1 292 0 discriminator 1
 331 002e 3B68     		ldr	r3, [r7]
 332 0030 002B     		cmp	r3, #0
 333 0032 04D1     		bne	.L16
 334 0034 7A68     		ldr	r2, [r7, #4]
 335 0036 A023     		mov	r3, #160
 336 0038 DB00     		lsl	r3, r3, #3
 337 003a 9A42     		cmp	r2, r3
 338 003c EED1     		bne	.L17
 339              	.L16:
 293:../../src/driver/system_stm32f0xx.c **** 
 294:../../src/driver/system_stm32f0xx.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 340              		.loc 1 294 0
 341 003e 254B     		ldr	r3, .L23
 342 0040 1A68     		ldr	r2, [r3]
 343 0042 8023     		mov	r3, #128
 344 0044 9B02     		lsl	r3, r3, #10
 345 0046 1340     		and	r3, r2
 346 0048 02D0     		beq	.L18
 295:../../src/driver/system_stm32f0xx.c ****   {
 296:../../src/driver/system_stm32f0xx.c ****     HSEStatus = (uint32_t)0x01;
 347              		.loc 1 296 0
 348 004a 0123     		mov	r3, #1
 349 004c 3B60     		str	r3, [r7]
 350 004e 01E0     		b	.L19
 351              	.L18:
 297:../../src/driver/system_stm32f0xx.c ****   }
 298:../../src/driver/system_stm32f0xx.c ****   else
 299:../../src/driver/system_stm32f0xx.c ****   {
 300:../../src/driver/system_stm32f0xx.c ****     HSEStatus = (uint32_t)0x00;
 352              		.loc 1 300 0
 353 0050 0023     		mov	r3, #0
 354 0052 3B60     		str	r3, [r7]
 355              	.L19:
 301:../../src/driver/system_stm32f0xx.c ****   }  
 302:../../src/driver/system_stm32f0xx.c **** 
 303:../../src/driver/system_stm32f0xx.c ****   if (HSEStatus == (uint32_t)0x01)
 356              		.loc 1 303 0
 357 0054 3B68     		ldr	r3, [r7]
 358 0056 012B     		cmp	r3, #1
 359 0058 38D1     		bne	.L15
 304:../../src/driver/system_stm32f0xx.c ****   {
 305:../../src/driver/system_stm32f0xx.c ****     /* Enable Prefetch Buffer and set Flash Latency */
 306:../../src/driver/system_stm32f0xx.c ****     FLASH->ACR = FLASH_ACR_PRFTBE | FLASH_ACR_LATENCY;
 360              		.loc 1 306 0
 361 005a 1F4B     		ldr	r3, .L23+4
 362 005c 1122     		mov	r2, #17
 363 005e 1A60     		str	r2, [r3]
 307:../../src/driver/system_stm32f0xx.c ****  
 308:../../src/driver/system_stm32f0xx.c ****     /* HCLK = SYSCLK */
 309:../../src/driver/system_stm32f0xx.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 364              		.loc 1 309 0
 365 0060 1C4B     		ldr	r3, .L23
 366 0062 1C4A     		ldr	r2, .L23
 367 0064 5268     		ldr	r2, [r2, #4]
 368 0066 5A60     		str	r2, [r3, #4]
 310:../../src/driver/system_stm32f0xx.c ****       
 311:../../src/driver/system_stm32f0xx.c ****     /* PCLK = HCLK */
 312:../../src/driver/system_stm32f0xx.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE_DIV1;
 369              		.loc 1 312 0
 370 0068 1A4B     		ldr	r3, .L23
 371 006a 1A4A     		ldr	r2, .L23
 372 006c 5268     		ldr	r2, [r2, #4]
 373 006e 5A60     		str	r2, [r3, #4]
 313:../../src/driver/system_stm32f0xx.c **** 
 314:../../src/driver/system_stm32f0xx.c ****     /* PLL configuration = HSE * 6 = 48 MHz */
 315:../../src/driver/system_stm32f0xx.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 374              		.loc 1 315 0
 375 0070 184B     		ldr	r3, .L23
 376 0072 184A     		ldr	r2, .L23
 377 0074 5168     		ldr	r1, [r2, #4]
 378 0076 194A     		ldr	r2, .L23+8
 379 0078 0A40     		and	r2, r1
 380 007a 5A60     		str	r2, [r3, #4]
 316:../../src/driver/system_stm32f0xx.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_PREDIV1 | RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLMULL6
 381              		.loc 1 316 0
 382 007c 154B     		ldr	r3, .L23
 383 007e 154A     		ldr	r2, .L23
 384 0080 5268     		ldr	r2, [r2, #4]
 385 0082 8821     		mov	r1, #136
 386 0084 4903     		lsl	r1, r1, #13
 387 0086 0A43     		orr	r2, r1
 388 0088 5A60     		str	r2, [r3, #4]
 317:../../src/driver/system_stm32f0xx.c ****             
 318:../../src/driver/system_stm32f0xx.c ****     /* Enable PLL */
 319:../../src/driver/system_stm32f0xx.c ****     RCC->CR |= RCC_CR_PLLON;
 389              		.loc 1 319 0
 390 008a 124B     		ldr	r3, .L23
 391 008c 114A     		ldr	r2, .L23
 392 008e 1268     		ldr	r2, [r2]
 393 0090 8021     		mov	r1, #128
 394 0092 4904     		lsl	r1, r1, #17
 395 0094 0A43     		orr	r2, r1
 396 0096 1A60     		str	r2, [r3]
 320:../../src/driver/system_stm32f0xx.c **** 
 321:../../src/driver/system_stm32f0xx.c ****     /* Wait till PLL is ready */
 322:../../src/driver/system_stm32f0xx.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 397              		.loc 1 322 0
 398 0098 C046     		mov	r8, r8
 399              	.L21:
 400              		.loc 1 322 0 is_stmt 0 discriminator 1
 401 009a 0E4B     		ldr	r3, .L23
 402 009c 1A68     		ldr	r2, [r3]
 403 009e 8023     		mov	r3, #128
 404 00a0 9B04     		lsl	r3, r3, #18
 405 00a2 1340     		and	r3, r2
 406 00a4 F9D0     		beq	.L21
 323:../../src/driver/system_stm32f0xx.c ****     {
 324:../../src/driver/system_stm32f0xx.c ****     }
 325:../../src/driver/system_stm32f0xx.c **** 
 326:../../src/driver/system_stm32f0xx.c ****     /* Select PLL as system clock source */
 327:../../src/driver/system_stm32f0xx.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 407              		.loc 1 327 0 is_stmt 1
 408 00a6 0B4B     		ldr	r3, .L23
 409 00a8 0A4A     		ldr	r2, .L23
 410 00aa 5268     		ldr	r2, [r2, #4]
 411 00ac 0321     		mov	r1, #3
 412 00ae 8A43     		bic	r2, r1
 413 00b0 5A60     		str	r2, [r3, #4]
 328:../../src/driver/system_stm32f0xx.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 414              		.loc 1 328 0
 415 00b2 084B     		ldr	r3, .L23
 416 00b4 074A     		ldr	r2, .L23
 417 00b6 5268     		ldr	r2, [r2, #4]
 418 00b8 0221     		mov	r1, #2
 419 00ba 0A43     		orr	r2, r1
 420 00bc 5A60     		str	r2, [r3, #4]
 329:../../src/driver/system_stm32f0xx.c **** 
 330:../../src/driver/system_stm32f0xx.c ****     /* Wait till PLL is used as system clock source */
 331:../../src/driver/system_stm32f0xx.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)RCC_CFGR_SWS_PLL)
 421              		.loc 1 331 0
 422 00be C046     		mov	r8, r8
 423              	.L22:
 424              		.loc 1 331 0 is_stmt 0 discriminator 1
 425 00c0 044B     		ldr	r3, .L23
 426 00c2 5A68     		ldr	r2, [r3, #4]
 427 00c4 0C23     		mov	r3, #12
 428 00c6 1340     		and	r3, r2
 429 00c8 082B     		cmp	r3, #8
 430 00ca F9D1     		bne	.L22
 431              	.L15:
 332:../../src/driver/system_stm32f0xx.c ****     {
 333:../../src/driver/system_stm32f0xx.c ****     }
 334:../../src/driver/system_stm32f0xx.c ****   }
 335:../../src/driver/system_stm32f0xx.c ****   else
 336:../../src/driver/system_stm32f0xx.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 337:../../src/driver/system_stm32f0xx.c ****          configuration. User can add here some code to deal with this error */
 338:../../src/driver/system_stm32f0xx.c ****   }  
 339:../../src/driver/system_stm32f0xx.c **** }
 432              		.loc 1 339 0 is_stmt 1
 433 00cc BD46     		mov	sp, r7
 434 00ce 02B0     		add	sp, sp, #8
 435              		@ sp needed
 436 00d0 80BD     		pop	{r7, pc}
 437              	.L24:
 438 00d2 C046     		.align	2
 439              	.L23:
 440 00d4 00100240 		.word	1073876992
 441 00d8 00200240 		.word	1073881088
 442 00dc FFFFC0FF 		.word	-4128769
 443              		.cfi_endproc
 444              	.LFE34:
 446              		.text
 447              	.Letext0:
 448              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/20140609/arm-none-eabi/include/machine/_default_types
 449              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20140609/arm-none-eabi/include/stdint.h"
 450              		.file 4 "../../ext-src/CMSIS/ST/STM32F0xx/Include/stm32f0xx.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32f0xx.c
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//cc1mCpSM.s:22     .data.SystemCoreClock:0000000000000000 SystemCoreClock
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//cc1mCpSM.s:19     .data.SystemCoreClock:0000000000000000 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//cc1mCpSM.s:29     .data.AHBPrescTable:0000000000000000 AHBPrescTable
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//cc1mCpSM.s:26     .data.AHBPrescTable:0000000000000000 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//cc1mCpSM.s:47     .text.SystemInit:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//cc1mCpSM.s:52     .text.SystemInit:0000000000000000 SystemInit
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//cc1mCpSM.s:293    .text.SetSysClock:0000000000000000 SetSysClock
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//cc1mCpSM.s:132    .text.SystemInit:0000000000000074 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//cc1mCpSM.s:143    .text.SystemCoreClockUpdate:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//cc1mCpSM.s:148    .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//cc1mCpSM.s:280    .text.SystemCoreClockUpdate:00000000000000bc $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//cc1mCpSM.s:289    .text.SetSysClock:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//cc1mCpSM.s:440    .text.SetSysClock:00000000000000d4 $d
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.0.9252205565be9cbc11fa49e4ee70d556
                           .group:0000000000000000 wm4.stm32f0xx.h.54.664bd2bdbb20859ae6a5c66c16d4ee5a
                           .group:0000000000000000 wm4.core_cm0.h.32.41c1bd92799bc17b3c8424dd5c622427
                           .group:0000000000000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:0000000000000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:0000000000000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:0000000000000000 wm4.core_cm0.h.130.eea61816b4c7004601b0935484a214ea
                           .group:0000000000000000 wm4.stm32f0xx.h.226.38dd78fa77e64690c744af5bf4bffc7b
                           .group:0000000000000000 wm4.stm32f0xx_cec.h.80.d17e4ea90700c26010f339885be92ac0
                           .group:0000000000000000 wm4.stm32f0xx_crc.h.31.48fbd36307d848f32978567b16118557
                           .group:0000000000000000 wm4.stm32f0xx_comp.h.31.a640b8c7673f3e181cfd826dce70b6e2
                           .group:0000000000000000 wm4.stm32f0xx_dac.h.31.3e178ad0888f70df8fbc4c999d855b3e
                           .group:0000000000000000 wm4.stm32f0xx_dbgmcu.h.31.282da985c6ed8dd33417cf074ecfdf63
                           .group:0000000000000000 wm4.stm32f0xx_dma.h.31.68def2497939cb34c3f292e0c507724a
                           .group:0000000000000000 wm4.stm32f0xx_exti.h.31.81a00331ef3e014ed4dafe9e9baacca3
                           .group:0000000000000000 wm4.stm32f0xx_flash.h.31.60d92ed32439cfb92572ec2678e2be21
                           .group:0000000000000000 wm4.stm32f0xx_gpio.h.31.df5c3a39b21131ade11d30b7e1580be6
                           .group:0000000000000000 wm4.stm32f0xx_syscfg.h.31.f98c72ea26c47fccafefd977b75786d3
                           .group:0000000000000000 wm4.stm32f0xx_i2c.h.31.83969866ec38bbcc1bff9238f01a1954
                           .group:0000000000000000 wm4.stm32f0xx_iwdg.h.31.bb16f7e18e54df66bf9bd0e2b29bdc93
                           .group:0000000000000000 wm4.stm32f0xx_pwr.h.31.5b469253a65db741700e0b45f396c99d
                           .group:0000000000000000 wm4.stm32f0xx_rcc.h.31.bc2f5dd9e2f518d727a1e0ce497a42e6
                           .group:0000000000000000 wm4.stm32f0xx_rtc.h.31.bc9d631913a743746cf54f04d4efbf7b
                           .group:0000000000000000 wm4.stm32f0xx_spi.h.31.5b4d0d36c03feb5b081143cdba79744d
                           .group:0000000000000000 wm4.stm32f0xx_tim.h.31.21b4d7229c685868595d751757b51e1b
                           .group:0000000000000000 wm4.stm32f0xx_usart.h.31.8abae79a1c4f266d08faf5996370b48f
                           .group:0000000000000000 wm4.stm32f0xx_wwdg.h.31.0cf1a9b3d89d147c688025fdd33d9c49
                           .group:0000000000000000 wm4.stm32f0xx_misc.h.31.d5c08c37e69b8a852dbb75e9252454c6

UNDEFINED SYMBOLS
__aeabi_uidiv
