   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"stm32f0xx_tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata
  18              		.align	2
  19              	.LC0:
  20 0000 2E2E2F2E 		.ascii	"../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f"
  20      2E2F6578 
  20      742D7372 
  20      632F5354 
  20      4D333246 
  21 0033 3078785F 		.ascii	"0xx_tim.c\000"
  21      74696D2E 
  21      6300
  22 003d 000000   		.section	.text.TIM_DeInit,"ax",%progbits
  23              		.align	2
  24              		.global	TIM_DeInit
  25              		.code	16
  26              		.thumb_func
  28              	TIM_DeInit:
  29              	.LFB32:
  30              		.file 1 "../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c"
   1:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
   2:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   ******************************************************************************
   3:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @file    stm32f0xx_tim.c
   4:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @author  MCD Application Team
   5:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @version V1.0.0
   6:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @date    23-March-2012
   7:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *          functionalities of the TIM peripheral:
   9:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *            + TimeBase management
  10:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *            + Output Compare management
  11:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *            + Input Capture management
  12:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *            + Interrupts, DMA and flags management
  13:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *            + Clocks management
  14:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *            + Synchronization management
  15:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *            + Specific interface management
  16:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *            + Specific remapping management      
  17:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *              
  18:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *  @verbatim
  19:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
  20:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  ===============================================================================
  21:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                     ##### How to use this driver #####
  22:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  ===============================================================================
  23:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     [..] This driver provides functions to configure and program the TIM 
  24:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          of all STM32F0xx devices These functions are split in 8 groups: 
  25:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) TIM TimeBase management: this group includes all needed functions 
  26:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              to configure the TM Timebase unit:
  27:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Set/Get Prescaler.
  28:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Set/Get Autoreload.
  29:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Counter modes configuration.
  30:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Set Clock division.
  31:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Select the One Pulse mode.
  32:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Update Request Configuration.
  33:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Update Disable Configuration.
  34:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Auto-Preload Configuration.
  35:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Enable/Disable the counter.
  36:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
  37:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) TIM Output Compare management: this group includes all needed 
  38:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              functions to configure the Capture/Compare unit used in Output 
  39:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              compare mode: 
  40:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Configure each channel, independently, in Output Compare mode.
  41:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Select the output compare modes.
  42:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Select the Polarities of each channel.
  43:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Set/Get the Capture/Compare register values.
  44:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Select the Output Compare Fast mode. 
  45:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Select the Output Compare Forced mode.  
  46:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Output Compare-Preload Configuration. 
  47:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Clear Output Compare Reference.
  48:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Select the OCREF Clear signal.
  49:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Enable/Disable the Capture/Compare Channels.    
  50:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
  51:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) TIM Input Capture management: this group includes all needed 
  52:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              functions to configure the Capture/Compare unit used in 
  53:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              Input Capture mode:
  54:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Configure each channel in input capture mode.
  55:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Configure Channel1/2 in PWM Input mode.
  56:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Set the Input Capture Prescaler.
  57:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Get the Capture/Compare values.  
  58:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              
  59:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****         (#) Advanced-control timers (TIM1) specific features
  60:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****             (++) Configures the Break input, dead time, Lock level, the OSSI,
  61:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                  the OSSR State and the AOE(automatic output enable)
  62:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****             (++) Enable/Disable the TIM peripheral Main Outputs
  63:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****             (++) Select the Commutation event
  64:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****             (++) Set/Reset the Capture Compare Preload Control bit     
  65:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
  66:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) TIM interrupts, DMA and flags management.
  67:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Enable/Disable interrupt sources.
  68:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Get flags status.
  69:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Clear flags/ Pending bits.
  70:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Enable/Disable DMA requests. 
  71:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Configure DMA burst mode.
  72:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Select CaptureCompare DMA request.  
  73:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
  74:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) TIM clocks management: this group includes all needed functions 
  75:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              to configure the clock controller unit:
  76:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Select internal/External clock.
  77:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Select the external clock mode: ETR(Mode1/Mode2), TIx or ITRx.
  78:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
  79:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) TIM synchronization management: this group includes all needed. 
  80:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              functions to configure the Synchronization unit:
  81:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Select Input Trigger.  
  82:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Select Output Trigger.  
  83:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Select Master Slave Mode. 
  84:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) ETR Configuration when used as external trigger.   
  85:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
  86:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) TIM specific interface management, this group includes all 
  87:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              needed functions to use the specific TIM interface:
  88:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Encoder Interface Configuration.
  89:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Select Hall Sensor.   
  90:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
  91:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) TIM specific remapping management includes the Remapping 
  92:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              configuration of specific timers
  93:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
  94:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** @endverbatim
  95:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *    
  96:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   ******************************************************************************
  97:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @attention
  98:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *
  99:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
 100:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *
 101:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
 102:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * You may not use this file except in compliance with the License.
 103:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * You may obtain a copy of the License at:
 104:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *
 105:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
 106:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *
 107:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * Unless required by applicable law or agreed to in writing, software 
 108:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
 109:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 110:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * See the License for the specific language governing permissions and
 111:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * limitations under the License.
 112:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *
 113:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   ******************************************************************************
 114:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 115:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 116:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /* Includes ------------------------------------------------------------------*/
 117:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** #include "stm32f0xx_tim.h"
 118:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** #include "stm32f0xx_rcc.h"
 119:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 120:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /** @addtogroup STM32F0xx_StdPeriph_Driver
 121:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @{
 122:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 123:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 124:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /** @defgroup TIM 
 125:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief TIM driver modules
 126:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @{
 127:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 128:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 129:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /* Private typedef -----------------------------------------------------------*/
 130:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /* Private define ------------------------------------------------------------*/
 131:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 132:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /* ---------------------- TIM registers bit mask ------------------------ */
 133:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** #define SMCR_ETR_MASK               ((uint16_t)0x00FF) 
 134:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** #define CCMR_OFFSET                 ((uint16_t)0x0018)
 135:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** #define CCER_CCE_SET                ((uint16_t)0x0001)
 136:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** #define CCER_CCNE_SET               ((uint16_t)0x0004) 
 137:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 138:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /* Private macro -------------------------------------------------------------*/
 139:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /* Private variables ---------------------------------------------------------*/
 140:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /* Private function prototypes -----------------------------------------------*/
 141:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 142:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 143:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                        uint16_t TIM_ICFilter);
 144:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 145:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                        uint16_t TIM_ICFilter);
 146:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 147:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                        uint16_t TIM_ICFilter);
 148:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 149:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                        uint16_t TIM_ICFilter);
 150:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /* Private functions ---------------------------------------------------------*/
 151:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 152:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /** @defgroup TIM_Private_Functions
 153:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @{
 154:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 155:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 156:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /** @defgroup TIM_Group1 TimeBase management functions
 157:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  *  @brief   TimeBase management functions 
 158:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  *
 159:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** @verbatim
 160:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  ===============================================================================
 161:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                  ##### TimeBase management functions #####
 162:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  ===============================================================================
 163:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 164:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****         *** TIM Driver: how to use it in Timing(Time base) Mode ***
 165:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  ===============================================================================
 166:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     [..] To use the Timer in Timing(Time base) mode, the following steps are 
 167:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          mandatory:
 168:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) Enable TIM clock using 
 169:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function.
 170:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) Fill the TIM_TimeBaseInitStruct with the desired parameters.
 171:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) Call TIM_TimeBaseInit(TIMx, &TIM_TimeBaseInitStruct) to configure 
 172:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              the Time Base unit with the corresponding configuration.
 173:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) Enable the NVIC if you need to generate the update interrupt. 
 174:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) Enable the corresponding interrupt using the function 
 175:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              TIM_ITConfig(TIMx, TIM_IT_Update). 
 176:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 177:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     [..]
 178:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****         (@) All other functions can be used seperatly to modify, if needed,
 179:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****             a specific feature of the Timer. 
 180:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 181:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** @endverbatim
 182:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @{
 183:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 184:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 185:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
 186:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Deinitializes the TIMx peripheral registers to their default reset values.
 187:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 6, 14, 15, 16 and 17 to select the TIM peripheral.
 188:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
 189:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   
 190:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 191:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_DeInit(TIM_TypeDef* TIMx)
 192:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
  31              		.loc 1 192 0
  32              		.cfi_startproc
  33 0000 80B5     		push	{r7, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              		.cfi_def_cfa_register 7
  41 0006 7860     		str	r0, [r7, #4]
 193:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
 194:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
  42              		.loc 1 194 0
  43 0008 7A68     		ldr	r2, [r7, #4]
  44 000a 524B     		ldr	r3, .L11
  45 000c 9A42     		cmp	r2, r3
  46 000e 21D0     		beq	.L2
  47              		.loc 1 194 0 is_stmt 0 discriminator 1
  48 0010 7A68     		ldr	r2, [r7, #4]
  49 0012 8023     		mov	r3, #128
  50 0014 DB05     		lsl	r3, r3, #23
  51 0016 9A42     		cmp	r2, r3
  52 0018 1CD0     		beq	.L2
  53 001a 7A68     		ldr	r2, [r7, #4]
  54 001c 4E4B     		ldr	r3, .L11+4
  55 001e 9A42     		cmp	r2, r3
  56 0020 18D0     		beq	.L2
  57 0022 7A68     		ldr	r2, [r7, #4]
  58 0024 4D4B     		ldr	r3, .L11+8
  59 0026 9A42     		cmp	r2, r3
  60 0028 14D0     		beq	.L2
  61 002a 7A68     		ldr	r2, [r7, #4]
  62 002c 4C4B     		ldr	r3, .L11+12
  63 002e 9A42     		cmp	r2, r3
  64 0030 10D0     		beq	.L2
  65 0032 7A68     		ldr	r2, [r7, #4]
  66 0034 4B4B     		ldr	r3, .L11+16
  67 0036 9A42     		cmp	r2, r3
  68 0038 0CD0     		beq	.L2
  69 003a 7A68     		ldr	r2, [r7, #4]
  70 003c 4A4B     		ldr	r3, .L11+20
  71 003e 9A42     		cmp	r2, r3
  72 0040 08D0     		beq	.L2
  73 0042 7A68     		ldr	r2, [r7, #4]
  74 0044 494B     		ldr	r3, .L11+24
  75 0046 9A42     		cmp	r2, r3
  76 0048 04D0     		beq	.L2
  77 004a 494B     		ldr	r3, .L11+28
  78 004c 181C     		mov	r0, r3
  79 004e C221     		mov	r1, #194
  80 0050 FFF7FEFF 		bl	assert_failed
  81              	.L2:
 195:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 196:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   if (TIMx == TIM1)
  82              		.loc 1 196 0 is_stmt 1
  83 0054 7A68     		ldr	r2, [r7, #4]
  84 0056 3F4B     		ldr	r3, .L11
  85 0058 9A42     		cmp	r2, r3
  86 005a 0CD1     		bne	.L3
 197:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
 198:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, ENABLE);
  87              		.loc 1 198 0
  88 005c 8023     		mov	r3, #128
  89 005e 1B01     		lsl	r3, r3, #4
  90 0060 181C     		mov	r0, r3
  91 0062 0121     		mov	r1, #1
  92 0064 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 199:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
  93              		.loc 1 199 0
  94 0068 8023     		mov	r3, #128
  95 006a 1B01     		lsl	r3, r3, #4
  96 006c 181C     		mov	r0, r3
  97 006e 0021     		mov	r1, #0
  98 0070 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  99 0074 6AE0     		b	.L1
 100              	.L3:
 200:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }     
 201:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   else if (TIMx == TIM2)
 101              		.loc 1 201 0
 102 0076 7A68     		ldr	r2, [r7, #4]
 103 0078 8023     		mov	r3, #128
 104 007a DB05     		lsl	r3, r3, #23
 105 007c 9A42     		cmp	r2, r3
 106 007e 08D1     		bne	.L5
 202:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
 203:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, ENABLE);
 107              		.loc 1 203 0
 108 0080 0120     		mov	r0, #1
 109 0082 0121     		mov	r1, #1
 110 0084 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 204:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
 111              		.loc 1 204 0
 112 0088 0120     		mov	r0, #1
 113 008a 0021     		mov	r1, #0
 114 008c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 115 0090 5CE0     		b	.L1
 116              	.L5:
 205:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
 206:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   else if (TIMx == TIM3)
 117              		.loc 1 206 0
 118 0092 7A68     		ldr	r2, [r7, #4]
 119 0094 304B     		ldr	r3, .L11+4
 120 0096 9A42     		cmp	r2, r3
 121 0098 08D1     		bne	.L6
 207:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
 208:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, ENABLE);
 122              		.loc 1 208 0
 123 009a 0220     		mov	r0, #2
 124 009c 0121     		mov	r1, #1
 125 009e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 209:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
 126              		.loc 1 209 0
 127 00a2 0220     		mov	r0, #2
 128 00a4 0021     		mov	r1, #0
 129 00a6 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 130 00aa 4FE0     		b	.L1
 131              	.L6:
 210:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
 211:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   else if (TIMx == TIM6)
 132              		.loc 1 211 0
 133 00ac 7A68     		ldr	r2, [r7, #4]
 134 00ae 2B4B     		ldr	r3, .L11+8
 135 00b0 9A42     		cmp	r2, r3
 136 00b2 08D1     		bne	.L7
 212:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
 213:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, ENABLE);
 137              		.loc 1 213 0
 138 00b4 1020     		mov	r0, #16
 139 00b6 0121     		mov	r1, #1
 140 00b8 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 214:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 141              		.loc 1 214 0
 142 00bc 1020     		mov	r0, #16
 143 00be 0021     		mov	r1, #0
 144 00c0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 145 00c4 42E0     		b	.L1
 146              	.L7:
 215:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   } 
 216:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   else if (TIMx == TIM14) 
 147              		.loc 1 216 0
 148 00c6 7A68     		ldr	r2, [r7, #4]
 149 00c8 254B     		ldr	r3, .L11+12
 150 00ca 9A42     		cmp	r2, r3
 151 00cc 0CD1     		bne	.L8
 217:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {       
 218:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, ENABLE);
 152              		.loc 1 218 0
 153 00ce 8023     		mov	r3, #128
 154 00d0 5B00     		lsl	r3, r3, #1
 155 00d2 181C     		mov	r0, r3
 156 00d4 0121     		mov	r1, #1
 157 00d6 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 219:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE);  
 158              		.loc 1 219 0
 159 00da 8023     		mov	r3, #128
 160 00dc 5B00     		lsl	r3, r3, #1
 161 00de 181C     		mov	r0, r3
 162 00e0 0021     		mov	r1, #0
 163 00e2 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 164 00e6 31E0     		b	.L1
 165              	.L8:
 220:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }        
 221:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   else if (TIMx == TIM15)
 166              		.loc 1 221 0
 167 00e8 7A68     		ldr	r2, [r7, #4]
 168 00ea 1E4B     		ldr	r3, .L11+16
 169 00ec 9A42     		cmp	r2, r3
 170 00ee 0CD1     		bne	.L9
 222:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
 223:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM15, ENABLE);
 171              		.loc 1 223 0
 172 00f0 8023     		mov	r3, #128
 173 00f2 5B02     		lsl	r3, r3, #9
 174 00f4 181C     		mov	r0, r3
 175 00f6 0121     		mov	r1, #1
 176 00f8 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 224:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM15, DISABLE);
 177              		.loc 1 224 0
 178 00fc 8023     		mov	r3, #128
 179 00fe 5B02     		lsl	r3, r3, #9
 180 0100 181C     		mov	r0, r3
 181 0102 0021     		mov	r1, #0
 182 0104 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 183 0108 20E0     		b	.L1
 184              	.L9:
 225:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   } 
 226:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   else if (TIMx == TIM16)
 185              		.loc 1 226 0
 186 010a 7A68     		ldr	r2, [r7, #4]
 187 010c 164B     		ldr	r3, .L11+20
 188 010e 9A42     		cmp	r2, r3
 189 0110 0CD1     		bne	.L10
 227:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
 228:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM16, ENABLE);
 190              		.loc 1 228 0
 191 0112 8023     		mov	r3, #128
 192 0114 9B02     		lsl	r3, r3, #10
 193 0116 181C     		mov	r0, r3
 194 0118 0121     		mov	r1, #1
 195 011a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 229:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM16, DISABLE);
 196              		.loc 1 229 0
 197 011e 8023     		mov	r3, #128
 198 0120 9B02     		lsl	r3, r3, #10
 199 0122 181C     		mov	r0, r3
 200 0124 0021     		mov	r1, #0
 201 0126 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 202 012a 0FE0     		b	.L1
 203              	.L10:
 230:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   } 
 231:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   else
 232:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
 233:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     if (TIMx == TIM17)
 204              		.loc 1 233 0
 205 012c 7A68     		ldr	r2, [r7, #4]
 206 012e 0F4B     		ldr	r3, .L11+24
 207 0130 9A42     		cmp	r2, r3
 208 0132 0BD1     		bne	.L1
 234:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     {
 235:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM17, ENABLE);
 209              		.loc 1 235 0
 210 0134 8023     		mov	r3, #128
 211 0136 DB02     		lsl	r3, r3, #11
 212 0138 181C     		mov	r0, r3
 213 013a 0121     		mov	r1, #1
 214 013c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 236:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM17, DISABLE);
 215              		.loc 1 236 0
 216 0140 8023     		mov	r3, #128
 217 0142 DB02     		lsl	r3, r3, #11
 218 0144 181C     		mov	r0, r3
 219 0146 0021     		mov	r1, #0
 220 0148 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 221              	.L1:
 237:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     }  
 238:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
 239:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****      
 240:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 222              		.loc 1 240 0
 223 014c BD46     		mov	sp, r7
 224 014e 02B0     		add	sp, sp, #8
 225              		@ sp needed
 226 0150 80BD     		pop	{r7, pc}
 227              	.L12:
 228 0152 C046     		.align	2
 229              	.L11:
 230 0154 002C0140 		.word	1073818624
 231 0158 00040040 		.word	1073742848
 232 015c 00100040 		.word	1073745920
 233 0160 00200040 		.word	1073750016
 234 0164 00400140 		.word	1073823744
 235 0168 00440140 		.word	1073824768
 236 016c 00480140 		.word	1073825792
 237 0170 00000000 		.word	.LC0
 238              		.cfi_endproc
 239              	.LFE32:
 241              		.section	.text.TIM_TimeBaseInit,"ax",%progbits
 242              		.align	2
 243              		.global	TIM_TimeBaseInit
 244              		.code	16
 245              		.thumb_func
 247              	TIM_TimeBaseInit:
 248              	.LFB33:
 241:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 242:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
 243:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Initializes the TIMx Time Base Unit peripheral according to 
 244:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         the specified parameters in the TIM_TimeBaseInitStruct.
 245:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 6, 14, 15, 16 and 17 to select the TIM 
 246:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         peripheral.
 247:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_TimeBaseInitStruct: pointer to a TIM_TimeBaseInitTypeDef
 248:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         structure that contains the configuration information for
 249:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         the specified TIM peripheral.
 250:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
 251:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 252:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 253:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 249              		.loc 1 253 0
 250              		.cfi_startproc
 251 0000 80B5     		push	{r7, lr}
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 7, -8
 254              		.cfi_offset 14, -4
 255 0002 84B0     		sub	sp, sp, #16
 256              		.cfi_def_cfa_offset 24
 257 0004 00AF     		add	r7, sp, #0
 258              		.cfi_def_cfa_register 7
 259 0006 7860     		str	r0, [r7, #4]
 260 0008 3960     		str	r1, [r7]
 254:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpcr1 = 0;
 261              		.loc 1 254 0
 262 000a 3B1C     		mov	r3, r7
 263 000c 0E33     		add	r3, r3, #14
 264 000e 0022     		mov	r2, #0
 265 0010 1A80     		strh	r2, [r3]
 255:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 256:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
 257:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 266              		.loc 1 257 0
 267 0012 7A68     		ldr	r2, [r7, #4]
 268 0014 5C4B     		ldr	r3, .L22
 269 0016 9A42     		cmp	r2, r3
 270 0018 23D0     		beq	.L14
 271              		.loc 1 257 0 is_stmt 0 discriminator 1
 272 001a 7A68     		ldr	r2, [r7, #4]
 273 001c 8023     		mov	r3, #128
 274 001e DB05     		lsl	r3, r3, #23
 275 0020 9A42     		cmp	r2, r3
 276 0022 1ED0     		beq	.L14
 277 0024 7A68     		ldr	r2, [r7, #4]
 278 0026 594B     		ldr	r3, .L22+4
 279 0028 9A42     		cmp	r2, r3
 280 002a 1AD0     		beq	.L14
 281 002c 7A68     		ldr	r2, [r7, #4]
 282 002e 584B     		ldr	r3, .L22+8
 283 0030 9A42     		cmp	r2, r3
 284 0032 16D0     		beq	.L14
 285 0034 7A68     		ldr	r2, [r7, #4]
 286 0036 574B     		ldr	r3, .L22+12
 287 0038 9A42     		cmp	r2, r3
 288 003a 12D0     		beq	.L14
 289 003c 7A68     		ldr	r2, [r7, #4]
 290 003e 564B     		ldr	r3, .L22+16
 291 0040 9A42     		cmp	r2, r3
 292 0042 0ED0     		beq	.L14
 293 0044 7A68     		ldr	r2, [r7, #4]
 294 0046 554B     		ldr	r3, .L22+20
 295 0048 9A42     		cmp	r2, r3
 296 004a 0AD0     		beq	.L14
 297 004c 7A68     		ldr	r2, [r7, #4]
 298 004e 544B     		ldr	r3, .L22+24
 299 0050 9A42     		cmp	r2, r3
 300 0052 06D0     		beq	.L14
 301 0054 534A     		ldr	r2, .L22+28
 302 0056 0223     		mov	r3, #2
 303 0058 FF33     		add	r3, r3, #255
 304 005a 101C     		mov	r0, r2
 305 005c 191C     		mov	r1, r3
 306 005e FFF7FEFF 		bl	assert_failed
 307              	.L14:
 258:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
 308              		.loc 1 258 0 is_stmt 1
 309 0062 3B68     		ldr	r3, [r7]
 310 0064 5B88     		ldrh	r3, [r3, #2]
 311 0066 002B     		cmp	r3, #0
 312 0068 16D0     		beq	.L15
 313              		.loc 1 258 0 is_stmt 0 discriminator 1
 314 006a 3B68     		ldr	r3, [r7]
 315 006c 5B88     		ldrh	r3, [r3, #2]
 316 006e 102B     		cmp	r3, #16
 317 0070 12D0     		beq	.L15
 318 0072 3B68     		ldr	r3, [r7]
 319 0074 5B88     		ldrh	r3, [r3, #2]
 320 0076 202B     		cmp	r3, #32
 321 0078 0ED0     		beq	.L15
 322 007a 3B68     		ldr	r3, [r7]
 323 007c 5B88     		ldrh	r3, [r3, #2]
 324 007e 402B     		cmp	r3, #64
 325 0080 0AD0     		beq	.L15
 326 0082 3B68     		ldr	r3, [r7]
 327 0084 5B88     		ldrh	r3, [r3, #2]
 328 0086 602B     		cmp	r3, #96
 329 0088 06D0     		beq	.L15
 330 008a 464A     		ldr	r2, .L22+28
 331 008c 8123     		mov	r3, #129
 332 008e 5B00     		lsl	r3, r3, #1
 333 0090 101C     		mov	r0, r2
 334 0092 191C     		mov	r1, r3
 335 0094 FFF7FEFF 		bl	assert_failed
 336              	.L15:
 259:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));
 337              		.loc 1 259 0 is_stmt 1
 338 0098 3B68     		ldr	r3, [r7]
 339 009a 1B89     		ldrh	r3, [r3, #8]
 340 009c 002B     		cmp	r3, #0
 341 009e 12D0     		beq	.L16
 342              		.loc 1 259 0 is_stmt 0 discriminator 1
 343 00a0 3B68     		ldr	r3, [r7]
 344 00a2 1A89     		ldrh	r2, [r3, #8]
 345 00a4 8023     		mov	r3, #128
 346 00a6 5B00     		lsl	r3, r3, #1
 347 00a8 9A42     		cmp	r2, r3
 348 00aa 0CD0     		beq	.L16
 349 00ac 3B68     		ldr	r3, [r7]
 350 00ae 1A89     		ldrh	r2, [r3, #8]
 351 00b0 8023     		mov	r3, #128
 352 00b2 9B00     		lsl	r3, r3, #2
 353 00b4 9A42     		cmp	r2, r3
 354 00b6 06D0     		beq	.L16
 355 00b8 3A4A     		ldr	r2, .L22+28
 356 00ba 0423     		mov	r3, #4
 357 00bc FF33     		add	r3, r3, #255
 358 00be 101C     		mov	r0, r2
 359 00c0 191C     		mov	r1, r3
 360 00c2 FFF7FEFF 		bl	assert_failed
 361              	.L16:
 260:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 261:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpcr1 = TIMx->CR1;  
 362              		.loc 1 261 0 is_stmt 1
 363 00c6 3B1C     		mov	r3, r7
 364 00c8 0E33     		add	r3, r3, #14
 365 00ca 7A68     		ldr	r2, [r7, #4]
 366 00cc 1288     		ldrh	r2, [r2]
 367 00ce 1A80     		strh	r2, [r3]
 262:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 263:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM2) || (TIMx == TIM3))
 368              		.loc 1 263 0
 369 00d0 7A68     		ldr	r2, [r7, #4]
 370 00d2 2D4B     		ldr	r3, .L22
 371 00d4 9A42     		cmp	r2, r3
 372 00d6 08D0     		beq	.L17
 373              		.loc 1 263 0 is_stmt 0 discriminator 1
 374 00d8 7A68     		ldr	r2, [r7, #4]
 375 00da 8023     		mov	r3, #128
 376 00dc DB05     		lsl	r3, r3, #23
 377 00de 9A42     		cmp	r2, r3
 378 00e0 03D0     		beq	.L17
 379 00e2 7A68     		ldr	r2, [r7, #4]
 380 00e4 294B     		ldr	r3, .L22+4
 381 00e6 9A42     		cmp	r2, r3
 382 00e8 10D1     		bne	.L18
 383              	.L17:
 264:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
 265:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Select the Counter Mode */
 266:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpcr1 &= (uint16_t)(~((uint16_t)(TIM_CR1_DIR | TIM_CR1_CMS)));
 384              		.loc 1 266 0 is_stmt 1
 385 00ea 3B1C     		mov	r3, r7
 386 00ec 0E33     		add	r3, r3, #14
 387 00ee 3A1C     		mov	r2, r7
 388 00f0 0E32     		add	r2, r2, #14
 389 00f2 1288     		ldrh	r2, [r2]
 390 00f4 7021     		mov	r1, #112
 391 00f6 8A43     		bic	r2, r1
 392 00f8 1A80     		strh	r2, [r3]
 267:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 393              		.loc 1 267 0
 394 00fa 3B68     		ldr	r3, [r7]
 395 00fc 5988     		ldrh	r1, [r3, #2]
 396 00fe 3B1C     		mov	r3, r7
 397 0100 0E33     		add	r3, r3, #14
 398 0102 3A1C     		mov	r2, r7
 399 0104 0E32     		add	r2, r2, #14
 400 0106 1288     		ldrh	r2, [r2]
 401 0108 0A43     		orr	r2, r1
 402 010a 1A80     		strh	r2, [r3]
 403              	.L18:
 268:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
 269:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  
 270:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   if(TIMx != TIM6)
 404              		.loc 1 270 0
 405 010c 7A68     		ldr	r2, [r7, #4]
 406 010e 204B     		ldr	r3, .L22+8
 407 0110 9A42     		cmp	r2, r3
 408 0112 10D0     		beq	.L19
 271:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
 272:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the clock division */
 273:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpcr1 &= (uint16_t)(~((uint16_t)TIM_CR1_CKD));
 409              		.loc 1 273 0
 410 0114 3B1C     		mov	r3, r7
 411 0116 0E33     		add	r3, r3, #14
 412 0118 3A1C     		mov	r2, r7
 413 011a 0E32     		add	r2, r2, #14
 414 011c 1188     		ldrh	r1, [r2]
 415 011e 224A     		ldr	r2, .L22+32
 416 0120 0A40     		and	r2, r1
 417 0122 1A80     		strh	r2, [r3]
 274:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 418              		.loc 1 274 0
 419 0124 3B68     		ldr	r3, [r7]
 420 0126 1989     		ldrh	r1, [r3, #8]
 421 0128 3B1C     		mov	r3, r7
 422 012a 0E33     		add	r3, r3, #14
 423 012c 3A1C     		mov	r2, r7
 424 012e 0E32     		add	r2, r2, #14
 425 0130 1288     		ldrh	r2, [r2]
 426 0132 0A43     		orr	r2, r1
 427 0134 1A80     		strh	r2, [r3]
 428              	.L19:
 275:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
 276:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 277:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CR1 = tmpcr1;
 429              		.loc 1 277 0
 430 0136 7B68     		ldr	r3, [r7, #4]
 431 0138 3A1C     		mov	r2, r7
 432 013a 0E32     		add	r2, r2, #14
 433 013c 1288     		ldrh	r2, [r2]
 434 013e 1A80     		strh	r2, [r3]
 278:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 279:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the Autoreload value */
 280:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
 435              		.loc 1 280 0
 436 0140 3B68     		ldr	r3, [r7]
 437 0142 5A68     		ldr	r2, [r3, #4]
 438 0144 7B68     		ldr	r3, [r7, #4]
 439 0146 DA62     		str	r2, [r3, #44]
 281:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  
 282:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the Prescaler value */
 283:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
 440              		.loc 1 283 0
 441 0148 3B68     		ldr	r3, [r7]
 442 014a 1A88     		ldrh	r2, [r3]
 443 014c 7B68     		ldr	r3, [r7, #4]
 444 014e 1A85     		strh	r2, [r3, #40]
 284:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     
 285:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   if ((TIMx == TIM1) || (TIMx == TIM15)|| (TIMx == TIM16) || (TIMx == TIM17))  
 445              		.loc 1 285 0
 446 0150 7A68     		ldr	r2, [r7, #4]
 447 0152 0D4B     		ldr	r3, .L22
 448 0154 9A42     		cmp	r2, r3
 449 0156 0BD0     		beq	.L20
 450              		.loc 1 285 0 is_stmt 0 discriminator 1
 451 0158 7A68     		ldr	r2, [r7, #4]
 452 015a 0F4B     		ldr	r3, .L22+16
 453 015c 9A42     		cmp	r2, r3
 454 015e 07D0     		beq	.L20
 455 0160 7A68     		ldr	r2, [r7, #4]
 456 0162 0E4B     		ldr	r3, .L22+20
 457 0164 9A42     		cmp	r2, r3
 458 0166 03D0     		beq	.L20
 459 0168 7A68     		ldr	r2, [r7, #4]
 460 016a 0D4B     		ldr	r3, .L22+24
 461 016c 9A42     		cmp	r2, r3
 462 016e 04D1     		bne	.L21
 463              	.L20:
 286:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
 287:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the Repetition Counter value */
 288:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
 464              		.loc 1 288 0 is_stmt 1
 465 0170 3B68     		ldr	r3, [r7]
 466 0172 9B7A     		ldrb	r3, [r3, #10]
 467 0174 1A1C     		mov	r2, r3
 468 0176 7B68     		ldr	r3, [r7, #4]
 469 0178 1A86     		strh	r2, [r3, #48]
 470              	.L21:
 289:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
 290:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 291:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Generate an update event to reload the Prescaler and the Repetition counter
 292:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****      values immediately */
 293:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode_Immediate;           
 471              		.loc 1 293 0
 472 017a 7B68     		ldr	r3, [r7, #4]
 473 017c 0122     		mov	r2, #1
 474 017e 9A82     		strh	r2, [r3, #20]
 294:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 475              		.loc 1 294 0
 476 0180 BD46     		mov	sp, r7
 477 0182 04B0     		add	sp, sp, #16
 478              		@ sp needed
 479 0184 80BD     		pop	{r7, pc}
 480              	.L23:
 481 0186 C046     		.align	2
 482              	.L22:
 483 0188 002C0140 		.word	1073818624
 484 018c 00040040 		.word	1073742848
 485 0190 00100040 		.word	1073745920
 486 0194 00200040 		.word	1073750016
 487 0198 00400140 		.word	1073823744
 488 019c 00440140 		.word	1073824768
 489 01a0 00480140 		.word	1073825792
 490 01a4 00000000 		.word	.LC0
 491 01a8 FFFCFFFF 		.word	-769
 492              		.cfi_endproc
 493              	.LFE33:
 495              		.section	.text.TIM_TimeBaseStructInit,"ax",%progbits
 496              		.align	2
 497              		.global	TIM_TimeBaseStructInit
 498              		.code	16
 499              		.thumb_func
 501              	TIM_TimeBaseStructInit:
 502              	.LFB34:
 295:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 296:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
 297:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Fills each TIM_TimeBaseInitStruct member with its default value.
 298:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_TimeBaseInitStruct : pointer to a TIM_TimeBaseInitTypeDef
 299:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         structure which will be initialized.
 300:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
 301:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 302:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_TimeBaseStructInit(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 303:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 503              		.loc 1 303 0
 504              		.cfi_startproc
 505 0000 80B5     		push	{r7, lr}
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 7, -8
 508              		.cfi_offset 14, -4
 509 0002 82B0     		sub	sp, sp, #8
 510              		.cfi_def_cfa_offset 16
 511 0004 00AF     		add	r7, sp, #0
 512              		.cfi_def_cfa_register 7
 513 0006 7860     		str	r0, [r7, #4]
 304:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the default configuration */
 305:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Period = 0xFFFFFFFF;
 514              		.loc 1 305 0
 515 0008 7B68     		ldr	r3, [r7, #4]
 516 000a 0122     		mov	r2, #1
 517 000c 5242     		neg	r2, r2
 518 000e 5A60     		str	r2, [r3, #4]
 306:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 519              		.loc 1 306 0
 520 0010 7B68     		ldr	r3, [r7, #4]
 521 0012 0022     		mov	r2, #0
 522 0014 1A80     		strh	r2, [r3]
 307:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 523              		.loc 1 307 0
 524 0016 7B68     		ldr	r3, [r7, #4]
 525 0018 0022     		mov	r2, #0
 526 001a 1A81     		strh	r2, [r3, #8]
 308:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 527              		.loc 1 308 0
 528 001c 7B68     		ldr	r3, [r7, #4]
 529 001e 0022     		mov	r2, #0
 530 0020 5A80     		strh	r2, [r3, #2]
 309:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 531              		.loc 1 309 0
 532 0022 7B68     		ldr	r3, [r7, #4]
 533 0024 0022     		mov	r2, #0
 534 0026 9A72     		strb	r2, [r3, #10]
 310:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 535              		.loc 1 310 0
 536 0028 BD46     		mov	sp, r7
 537 002a 02B0     		add	sp, sp, #8
 538              		@ sp needed
 539 002c 80BD     		pop	{r7, pc}
 540              		.cfi_endproc
 541              	.LFE34:
 543 002e C046     		.section	.text.TIM_PrescalerConfig,"ax",%progbits
 544              		.align	2
 545              		.global	TIM_PrescalerConfig
 546              		.code	16
 547              		.thumb_func
 549              	TIM_PrescalerConfig:
 550              	.LFB35:
 311:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 312:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
 313:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Configures the TIMx Prescaler.
 314:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 6, 14, 15, 16 and 17 to select the TIM peripheral.
 315:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  Prescaler: specifies the Prescaler Register value
 316:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_PSCReloadMode: specifies the TIM Prescaler Reload mode
 317:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
 318:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_PSCReloadMode_Update: The Prescaler is loaded at the update event.
 319:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_PSCReloadMode_Immediate: The Prescaler is loaded immediatly.
 320:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
 321:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 322:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_PrescalerConfig(TIM_TypeDef* TIMx, uint16_t Prescaler, uint16_t TIM_PSCReloadMode)
 323:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 551              		.loc 1 323 0
 552              		.cfi_startproc
 553 0000 80B5     		push	{r7, lr}
 554              		.cfi_def_cfa_offset 8
 555              		.cfi_offset 7, -8
 556              		.cfi_offset 14, -4
 557 0002 82B0     		sub	sp, sp, #8
 558              		.cfi_def_cfa_offset 16
 559 0004 00AF     		add	r7, sp, #0
 560              		.cfi_def_cfa_register 7
 561 0006 7860     		str	r0, [r7, #4]
 562 0008 BB1C     		add	r3, r7, #2
 563 000a 1980     		strh	r1, [r3]
 564 000c 3B1C     		mov	r3, r7
 565 000e 1A80     		strh	r2, [r3]
 324:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
 325:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 566              		.loc 1 325 0
 567 0010 7A68     		ldr	r2, [r7, #4]
 568 0012 204B     		ldr	r3, .L28
 569 0014 9A42     		cmp	r2, r3
 570 0016 23D0     		beq	.L26
 571              		.loc 1 325 0 is_stmt 0 discriminator 1
 572 0018 7A68     		ldr	r2, [r7, #4]
 573 001a 8023     		mov	r3, #128
 574 001c DB05     		lsl	r3, r3, #23
 575 001e 9A42     		cmp	r2, r3
 576 0020 1ED0     		beq	.L26
 577 0022 7A68     		ldr	r2, [r7, #4]
 578 0024 1C4B     		ldr	r3, .L28+4
 579 0026 9A42     		cmp	r2, r3
 580 0028 1AD0     		beq	.L26
 581 002a 7A68     		ldr	r2, [r7, #4]
 582 002c 1B4B     		ldr	r3, .L28+8
 583 002e 9A42     		cmp	r2, r3
 584 0030 16D0     		beq	.L26
 585 0032 7A68     		ldr	r2, [r7, #4]
 586 0034 1A4B     		ldr	r3, .L28+12
 587 0036 9A42     		cmp	r2, r3
 588 0038 12D0     		beq	.L26
 589 003a 7A68     		ldr	r2, [r7, #4]
 590 003c 194B     		ldr	r3, .L28+16
 591 003e 9A42     		cmp	r2, r3
 592 0040 0ED0     		beq	.L26
 593 0042 7A68     		ldr	r2, [r7, #4]
 594 0044 184B     		ldr	r3, .L28+20
 595 0046 9A42     		cmp	r2, r3
 596 0048 0AD0     		beq	.L26
 597 004a 7A68     		ldr	r2, [r7, #4]
 598 004c 174B     		ldr	r3, .L28+24
 599 004e 9A42     		cmp	r2, r3
 600 0050 06D0     		beq	.L26
 601 0052 174A     		ldr	r2, .L28+28
 602 0054 4623     		mov	r3, #70
 603 0056 FF33     		add	r3, r3, #255
 604 0058 101C     		mov	r0, r2
 605 005a 191C     		mov	r1, r3
 606 005c FFF7FEFF 		bl	assert_failed
 607              	.L26:
 326:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_PRESCALER_RELOAD(TIM_PSCReloadMode));
 608              		.loc 1 326 0 is_stmt 1
 609 0060 3B1C     		mov	r3, r7
 610 0062 1B88     		ldrh	r3, [r3]
 611 0064 002B     		cmp	r3, #0
 612 0066 0AD0     		beq	.L27
 613              		.loc 1 326 0 is_stmt 0 discriminator 1
 614 0068 3B1C     		mov	r3, r7
 615 006a 1B88     		ldrh	r3, [r3]
 616 006c 012B     		cmp	r3, #1
 617 006e 06D0     		beq	.L27
 618 0070 0F4A     		ldr	r2, .L28+28
 619 0072 A323     		mov	r3, #163
 620 0074 5B00     		lsl	r3, r3, #1
 621 0076 101C     		mov	r0, r2
 622 0078 191C     		mov	r1, r3
 623 007a FFF7FEFF 		bl	assert_failed
 624              	.L27:
 327:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 328:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the Prescaler value */
 329:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->PSC = Prescaler;
 625              		.loc 1 329 0 is_stmt 1
 626 007e 7B68     		ldr	r3, [r7, #4]
 627 0080 BA1C     		add	r2, r7, #2
 628 0082 1288     		ldrh	r2, [r2]
 629 0084 1A85     		strh	r2, [r3, #40]
 330:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set or reset the UG Bit */
 331:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode;
 630              		.loc 1 331 0
 631 0086 7B68     		ldr	r3, [r7, #4]
 632 0088 3A1C     		mov	r2, r7
 633 008a 1288     		ldrh	r2, [r2]
 634 008c 9A82     		strh	r2, [r3, #20]
 332:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 635              		.loc 1 332 0
 636 008e BD46     		mov	sp, r7
 637 0090 02B0     		add	sp, sp, #8
 638              		@ sp needed
 639 0092 80BD     		pop	{r7, pc}
 640              	.L29:
 641              		.align	2
 642              	.L28:
 643 0094 002C0140 		.word	1073818624
 644 0098 00040040 		.word	1073742848
 645 009c 00100040 		.word	1073745920
 646 00a0 00200040 		.word	1073750016
 647 00a4 00400140 		.word	1073823744
 648 00a8 00440140 		.word	1073824768
 649 00ac 00480140 		.word	1073825792
 650 00b0 00000000 		.word	.LC0
 651              		.cfi_endproc
 652              	.LFE35:
 654              		.section	.text.TIM_CounterModeConfig,"ax",%progbits
 655              		.align	2
 656              		.global	TIM_CounterModeConfig
 657              		.code	16
 658              		.thumb_func
 660              	TIM_CounterModeConfig:
 661              	.LFB36:
 333:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 334:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
 335:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Specifies the TIMx Counter Mode to be used.
 336:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, or 3 to select the TIM peripheral.
 337:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_CounterMode: specifies the Counter Mode to be used
 338:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
 339:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_CounterMode_Up: TIM Up Counting Mode
 340:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_CounterMode_Down: TIM Down Counting Mode
 341:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_CounterMode_CenterAligned1: TIM Center Aligned Mode1
 342:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_CounterMode_CenterAligned2: TIM Center Aligned Mode2
 343:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_CounterMode_CenterAligned3: TIM Center Aligned Mode3
 344:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
 345:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 346:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_CounterModeConfig(TIM_TypeDef* TIMx, uint16_t TIM_CounterMode)
 347:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 662              		.loc 1 347 0
 663              		.cfi_startproc
 664 0000 80B5     		push	{r7, lr}
 665              		.cfi_def_cfa_offset 8
 666              		.cfi_offset 7, -8
 667              		.cfi_offset 14, -4
 668 0002 84B0     		sub	sp, sp, #16
 669              		.cfi_def_cfa_offset 24
 670 0004 00AF     		add	r7, sp, #0
 671              		.cfi_def_cfa_register 7
 672 0006 7860     		str	r0, [r7, #4]
 673 0008 0A1C     		mov	r2, r1
 674 000a BB1C     		add	r3, r7, #2
 675 000c 1A80     		strh	r2, [r3]
 348:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpcr1 = 0;
 676              		.loc 1 348 0
 677 000e 3B1C     		mov	r3, r7
 678 0010 0E33     		add	r3, r3, #14
 679 0012 0022     		mov	r2, #0
 680 0014 1A80     		strh	r2, [r3]
 349:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 350:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
 351:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 681              		.loc 1 351 0
 682 0016 7A68     		ldr	r2, [r7, #4]
 683 0018 254B     		ldr	r3, .L33
 684 001a 9A42     		cmp	r2, r3
 685 001c 0FD0     		beq	.L31
 686              		.loc 1 351 0 is_stmt 0 discriminator 1
 687 001e 7A68     		ldr	r2, [r7, #4]
 688 0020 8023     		mov	r3, #128
 689 0022 DB05     		lsl	r3, r3, #23
 690 0024 9A42     		cmp	r2, r3
 691 0026 0AD0     		beq	.L31
 692 0028 7A68     		ldr	r2, [r7, #4]
 693 002a 224B     		ldr	r3, .L33+4
 694 002c 9A42     		cmp	r2, r3
 695 002e 06D0     		beq	.L31
 696 0030 214A     		ldr	r2, .L33+8
 697 0032 6023     		mov	r3, #96
 698 0034 FF33     		add	r3, r3, #255
 699 0036 101C     		mov	r0, r2
 700 0038 191C     		mov	r1, r3
 701 003a FFF7FEFF 		bl	assert_failed
 702              	.L31:
 352:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_CounterMode));
 703              		.loc 1 352 0 is_stmt 1
 704 003e BB1C     		add	r3, r7, #2
 705 0040 1B88     		ldrh	r3, [r3]
 706 0042 002B     		cmp	r3, #0
 707 0044 16D0     		beq	.L32
 708              		.loc 1 352 0 is_stmt 0 discriminator 1
 709 0046 BB1C     		add	r3, r7, #2
 710 0048 1B88     		ldrh	r3, [r3]
 711 004a 102B     		cmp	r3, #16
 712 004c 12D0     		beq	.L32
 713 004e BB1C     		add	r3, r7, #2
 714 0050 1B88     		ldrh	r3, [r3]
 715 0052 202B     		cmp	r3, #32
 716 0054 0ED0     		beq	.L32
 717 0056 BB1C     		add	r3, r7, #2
 718 0058 1B88     		ldrh	r3, [r3]
 719 005a 402B     		cmp	r3, #64
 720 005c 0AD0     		beq	.L32
 721 005e BB1C     		add	r3, r7, #2
 722 0060 1B88     		ldrh	r3, [r3]
 723 0062 602B     		cmp	r3, #96
 724 0064 06D0     		beq	.L32
 725 0066 144A     		ldr	r2, .L33+8
 726 0068 B023     		mov	r3, #176
 727 006a 5B00     		lsl	r3, r3, #1
 728 006c 101C     		mov	r0, r2
 729 006e 191C     		mov	r1, r3
 730 0070 FFF7FEFF 		bl	assert_failed
 731              	.L32:
 353:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 354:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpcr1 = TIMx->CR1;
 732              		.loc 1 354 0 is_stmt 1
 733 0074 3B1C     		mov	r3, r7
 734 0076 0E33     		add	r3, r3, #14
 735 0078 7A68     		ldr	r2, [r7, #4]
 736 007a 1288     		ldrh	r2, [r2]
 737 007c 1A80     		strh	r2, [r3]
 355:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the CMS and DIR Bits */
 356:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpcr1 &= (uint16_t)(~((uint16_t)(TIM_CR1_DIR | TIM_CR1_CMS)));
 738              		.loc 1 356 0
 739 007e 3B1C     		mov	r3, r7
 740 0080 0E33     		add	r3, r3, #14
 741 0082 3A1C     		mov	r2, r7
 742 0084 0E32     		add	r2, r2, #14
 743 0086 1288     		ldrh	r2, [r2]
 744 0088 7021     		mov	r1, #112
 745 008a 8A43     		bic	r2, r1
 746 008c 1A80     		strh	r2, [r3]
 357:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the Counter Mode */
 358:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpcr1 |= TIM_CounterMode;
 747              		.loc 1 358 0
 748 008e 3B1C     		mov	r3, r7
 749 0090 0E33     		add	r3, r3, #14
 750 0092 391C     		mov	r1, r7
 751 0094 0E31     		add	r1, r1, #14
 752 0096 BA1C     		add	r2, r7, #2
 753 0098 0988     		ldrh	r1, [r1]
 754 009a 1288     		ldrh	r2, [r2]
 755 009c 0A43     		orr	r2, r1
 756 009e 1A80     		strh	r2, [r3]
 359:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CR1 register */
 360:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CR1 = tmpcr1;
 757              		.loc 1 360 0
 758 00a0 7B68     		ldr	r3, [r7, #4]
 759 00a2 3A1C     		mov	r2, r7
 760 00a4 0E32     		add	r2, r2, #14
 761 00a6 1288     		ldrh	r2, [r2]
 762 00a8 1A80     		strh	r2, [r3]
 361:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 763              		.loc 1 361 0
 764 00aa BD46     		mov	sp, r7
 765 00ac 04B0     		add	sp, sp, #16
 766              		@ sp needed
 767 00ae 80BD     		pop	{r7, pc}
 768              	.L34:
 769              		.align	2
 770              	.L33:
 771 00b0 002C0140 		.word	1073818624
 772 00b4 00040040 		.word	1073742848
 773 00b8 00000000 		.word	.LC0
 774              		.cfi_endproc
 775              	.LFE36:
 777              		.section	.text.TIM_SetCounter,"ax",%progbits
 778              		.align	2
 779              		.global	TIM_SetCounter
 780              		.code	16
 781              		.thumb_func
 783              	TIM_SetCounter:
 784              	.LFB37:
 362:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 363:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
 364:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Sets the TIMx Counter Register value
 365:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 6, 14, 15, 16 and 17 to select the TIM 
 366:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *          peripheral.
 367:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  Counter: specifies the Counter register new value.
 368:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
 369:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 370:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_SetCounter(TIM_TypeDef* TIMx, uint32_t Counter)
 371:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 785              		.loc 1 371 0
 786              		.cfi_startproc
 787 0000 80B5     		push	{r7, lr}
 788              		.cfi_def_cfa_offset 8
 789              		.cfi_offset 7, -8
 790              		.cfi_offset 14, -4
 791 0002 82B0     		sub	sp, sp, #8
 792              		.cfi_def_cfa_offset 16
 793 0004 00AF     		add	r7, sp, #0
 794              		.cfi_def_cfa_register 7
 795 0006 7860     		str	r0, [r7, #4]
 796 0008 3960     		str	r1, [r7]
 372:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
 373:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****    assert_param(IS_TIM_ALL_PERIPH(TIMx));
 797              		.loc 1 373 0
 798 000a 7A68     		ldr	r2, [r7, #4]
 799 000c 164B     		ldr	r3, .L37
 800 000e 9A42     		cmp	r2, r3
 801 0010 23D0     		beq	.L36
 802              		.loc 1 373 0 is_stmt 0 discriminator 1
 803 0012 7A68     		ldr	r2, [r7, #4]
 804 0014 8023     		mov	r3, #128
 805 0016 DB05     		lsl	r3, r3, #23
 806 0018 9A42     		cmp	r2, r3
 807 001a 1ED0     		beq	.L36
 808 001c 7A68     		ldr	r2, [r7, #4]
 809 001e 134B     		ldr	r3, .L37+4
 810 0020 9A42     		cmp	r2, r3
 811 0022 1AD0     		beq	.L36
 812 0024 7A68     		ldr	r2, [r7, #4]
 813 0026 124B     		ldr	r3, .L37+8
 814 0028 9A42     		cmp	r2, r3
 815 002a 16D0     		beq	.L36
 816 002c 7A68     		ldr	r2, [r7, #4]
 817 002e 114B     		ldr	r3, .L37+12
 818 0030 9A42     		cmp	r2, r3
 819 0032 12D0     		beq	.L36
 820 0034 7A68     		ldr	r2, [r7, #4]
 821 0036 104B     		ldr	r3, .L37+16
 822 0038 9A42     		cmp	r2, r3
 823 003a 0ED0     		beq	.L36
 824 003c 7A68     		ldr	r2, [r7, #4]
 825 003e 0F4B     		ldr	r3, .L37+20
 826 0040 9A42     		cmp	r2, r3
 827 0042 0AD0     		beq	.L36
 828 0044 7A68     		ldr	r2, [r7, #4]
 829 0046 0E4B     		ldr	r3, .L37+24
 830 0048 9A42     		cmp	r2, r3
 831 004a 06D0     		beq	.L36
 832 004c 0D4A     		ldr	r2, .L37+28
 833 004e 7623     		mov	r3, #118
 834 0050 FF33     		add	r3, r3, #255
 835 0052 101C     		mov	r0, r2
 836 0054 191C     		mov	r1, r3
 837 0056 FFF7FEFF 		bl	assert_failed
 838              	.L36:
 374:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****    
 375:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the Counter Register value */
 376:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CNT = Counter;
 839              		.loc 1 376 0 is_stmt 1
 840 005a 7B68     		ldr	r3, [r7, #4]
 841 005c 3A68     		ldr	r2, [r7]
 842 005e 5A62     		str	r2, [r3, #36]
 377:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 843              		.loc 1 377 0
 844 0060 BD46     		mov	sp, r7
 845 0062 02B0     		add	sp, sp, #8
 846              		@ sp needed
 847 0064 80BD     		pop	{r7, pc}
 848              	.L38:
 849 0066 C046     		.align	2
 850              	.L37:
 851 0068 002C0140 		.word	1073818624
 852 006c 00040040 		.word	1073742848
 853 0070 00100040 		.word	1073745920
 854 0074 00200040 		.word	1073750016
 855 0078 00400140 		.word	1073823744
 856 007c 00440140 		.word	1073824768
 857 0080 00480140 		.word	1073825792
 858 0084 00000000 		.word	.LC0
 859              		.cfi_endproc
 860              	.LFE37:
 862              		.section	.text.TIM_SetAutoreload,"ax",%progbits
 863              		.align	2
 864              		.global	TIM_SetAutoreload
 865              		.code	16
 866              		.thumb_func
 868              	TIM_SetAutoreload:
 869              	.LFB38:
 378:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 379:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
 380:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Sets the TIMx Autoreload Register value
 381:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 6, 14, 15, 16 and 17 to select the TIM peripheral.
 382:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  Autoreload: specifies the Autoreload register new value.
 383:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
 384:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 385:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_SetAutoreload(TIM_TypeDef* TIMx, uint32_t Autoreload)
 386:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 870              		.loc 1 386 0
 871              		.cfi_startproc
 872 0000 80B5     		push	{r7, lr}
 873              		.cfi_def_cfa_offset 8
 874              		.cfi_offset 7, -8
 875              		.cfi_offset 14, -4
 876 0002 82B0     		sub	sp, sp, #8
 877              		.cfi_def_cfa_offset 16
 878 0004 00AF     		add	r7, sp, #0
 879              		.cfi_def_cfa_register 7
 880 0006 7860     		str	r0, [r7, #4]
 881 0008 3960     		str	r1, [r7]
 387:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
 388:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 882              		.loc 1 388 0
 883 000a 7A68     		ldr	r2, [r7, #4]
 884 000c 164B     		ldr	r3, .L41
 885 000e 9A42     		cmp	r2, r3
 886 0010 23D0     		beq	.L40
 887              		.loc 1 388 0 is_stmt 0 discriminator 1
 888 0012 7A68     		ldr	r2, [r7, #4]
 889 0014 8023     		mov	r3, #128
 890 0016 DB05     		lsl	r3, r3, #23
 891 0018 9A42     		cmp	r2, r3
 892 001a 1ED0     		beq	.L40
 893 001c 7A68     		ldr	r2, [r7, #4]
 894 001e 134B     		ldr	r3, .L41+4
 895 0020 9A42     		cmp	r2, r3
 896 0022 1AD0     		beq	.L40
 897 0024 7A68     		ldr	r2, [r7, #4]
 898 0026 124B     		ldr	r3, .L41+8
 899 0028 9A42     		cmp	r2, r3
 900 002a 16D0     		beq	.L40
 901 002c 7A68     		ldr	r2, [r7, #4]
 902 002e 114B     		ldr	r3, .L41+12
 903 0030 9A42     		cmp	r2, r3
 904 0032 12D0     		beq	.L40
 905 0034 7A68     		ldr	r2, [r7, #4]
 906 0036 104B     		ldr	r3, .L41+16
 907 0038 9A42     		cmp	r2, r3
 908 003a 0ED0     		beq	.L40
 909 003c 7A68     		ldr	r2, [r7, #4]
 910 003e 0F4B     		ldr	r3, .L41+20
 911 0040 9A42     		cmp	r2, r3
 912 0042 0AD0     		beq	.L40
 913 0044 7A68     		ldr	r2, [r7, #4]
 914 0046 0E4B     		ldr	r3, .L41+24
 915 0048 9A42     		cmp	r2, r3
 916 004a 06D0     		beq	.L40
 917 004c 0D4A     		ldr	r2, .L41+28
 918 004e C223     		mov	r3, #194
 919 0050 5B00     		lsl	r3, r3, #1
 920 0052 101C     		mov	r0, r2
 921 0054 191C     		mov	r1, r3
 922 0056 FFF7FEFF 		bl	assert_failed
 923              	.L40:
 389:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 390:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the Autoreload Register value */
 391:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->ARR = Autoreload;
 924              		.loc 1 391 0 is_stmt 1
 925 005a 7B68     		ldr	r3, [r7, #4]
 926 005c 3A68     		ldr	r2, [r7]
 927 005e DA62     		str	r2, [r3, #44]
 392:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 928              		.loc 1 392 0
 929 0060 BD46     		mov	sp, r7
 930 0062 02B0     		add	sp, sp, #8
 931              		@ sp needed
 932 0064 80BD     		pop	{r7, pc}
 933              	.L42:
 934 0066 C046     		.align	2
 935              	.L41:
 936 0068 002C0140 		.word	1073818624
 937 006c 00040040 		.word	1073742848
 938 0070 00100040 		.word	1073745920
 939 0074 00200040 		.word	1073750016
 940 0078 00400140 		.word	1073823744
 941 007c 00440140 		.word	1073824768
 942 0080 00480140 		.word	1073825792
 943 0084 00000000 		.word	.LC0
 944              		.cfi_endproc
 945              	.LFE38:
 947              		.section	.text.TIM_GetCounter,"ax",%progbits
 948              		.align	2
 949              		.global	TIM_GetCounter
 950              		.code	16
 951              		.thumb_func
 953              	TIM_GetCounter:
 954              	.LFB39:
 393:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 394:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
 395:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Gets the TIMx Counter value.
 396:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 6, 14, 15, 16 and 17 to select the TIM 
 397:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         peripheral.
 398:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval Counter Register value.
 399:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 400:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** uint32_t TIM_GetCounter(TIM_TypeDef* TIMx)
 401:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 955              		.loc 1 401 0
 956              		.cfi_startproc
 957 0000 80B5     		push	{r7, lr}
 958              		.cfi_def_cfa_offset 8
 959              		.cfi_offset 7, -8
 960              		.cfi_offset 14, -4
 961 0002 82B0     		sub	sp, sp, #8
 962              		.cfi_def_cfa_offset 16
 963 0004 00AF     		add	r7, sp, #0
 964              		.cfi_def_cfa_register 7
 965 0006 7860     		str	r0, [r7, #4]
 402:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
 403:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 966              		.loc 1 403 0
 967 0008 7A68     		ldr	r2, [r7, #4]
 968 000a 164B     		ldr	r3, .L46
 969 000c 9A42     		cmp	r2, r3
 970 000e 23D0     		beq	.L44
 971              		.loc 1 403 0 is_stmt 0 discriminator 1
 972 0010 7A68     		ldr	r2, [r7, #4]
 973 0012 8023     		mov	r3, #128
 974 0014 DB05     		lsl	r3, r3, #23
 975 0016 9A42     		cmp	r2, r3
 976 0018 1ED0     		beq	.L44
 977 001a 7A68     		ldr	r2, [r7, #4]
 978 001c 124B     		ldr	r3, .L46+4
 979 001e 9A42     		cmp	r2, r3
 980 0020 1AD0     		beq	.L44
 981 0022 7A68     		ldr	r2, [r7, #4]
 982 0024 114B     		ldr	r3, .L46+8
 983 0026 9A42     		cmp	r2, r3
 984 0028 16D0     		beq	.L44
 985 002a 7A68     		ldr	r2, [r7, #4]
 986 002c 104B     		ldr	r3, .L46+12
 987 002e 9A42     		cmp	r2, r3
 988 0030 12D0     		beq	.L44
 989 0032 7A68     		ldr	r2, [r7, #4]
 990 0034 0F4B     		ldr	r3, .L46+16
 991 0036 9A42     		cmp	r2, r3
 992 0038 0ED0     		beq	.L44
 993 003a 7A68     		ldr	r2, [r7, #4]
 994 003c 0E4B     		ldr	r3, .L46+20
 995 003e 9A42     		cmp	r2, r3
 996 0040 0AD0     		beq	.L44
 997 0042 7A68     		ldr	r2, [r7, #4]
 998 0044 0D4B     		ldr	r3, .L46+24
 999 0046 9A42     		cmp	r2, r3
 1000 0048 06D0     		beq	.L44
 1001 004a 0D4A     		ldr	r2, .L46+28
 1002 004c 9423     		mov	r3, #148
 1003 004e FF33     		add	r3, r3, #255
 1004 0050 101C     		mov	r0, r2
 1005 0052 191C     		mov	r1, r3
 1006 0054 FFF7FEFF 		bl	assert_failed
 1007              	.L44:
 404:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 405:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Get the Counter Register value */
 406:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   return TIMx->CNT;
 1008              		.loc 1 406 0 is_stmt 1
 1009 0058 7B68     		ldr	r3, [r7, #4]
 1010 005a 5B6A     		ldr	r3, [r3, #36]
 407:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 1011              		.loc 1 407 0
 1012 005c 181C     		mov	r0, r3
 1013 005e BD46     		mov	sp, r7
 1014 0060 02B0     		add	sp, sp, #8
 1015              		@ sp needed
 1016 0062 80BD     		pop	{r7, pc}
 1017              	.L47:
 1018              		.align	2
 1019              	.L46:
 1020 0064 002C0140 		.word	1073818624
 1021 0068 00040040 		.word	1073742848
 1022 006c 00100040 		.word	1073745920
 1023 0070 00200040 		.word	1073750016
 1024 0074 00400140 		.word	1073823744
 1025 0078 00440140 		.word	1073824768
 1026 007c 00480140 		.word	1073825792
 1027 0080 00000000 		.word	.LC0
 1028              		.cfi_endproc
 1029              	.LFE39:
 1031              		.section	.text.TIM_GetPrescaler,"ax",%progbits
 1032              		.align	2
 1033              		.global	TIM_GetPrescaler
 1034              		.code	16
 1035              		.thumb_func
 1037              	TIM_GetPrescaler:
 1038              	.LFB40:
 408:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 409:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
 410:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Gets the TIMx Prescaler value.
 411:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 6, 14, 15, 16 and 17 to select the TIM 
 412:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         peripheral.
 413:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval Prescaler Register value.
 414:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 415:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** uint16_t TIM_GetPrescaler(TIM_TypeDef* TIMx)
 416:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 1039              		.loc 1 416 0
 1040              		.cfi_startproc
 1041 0000 80B5     		push	{r7, lr}
 1042              		.cfi_def_cfa_offset 8
 1043              		.cfi_offset 7, -8
 1044              		.cfi_offset 14, -4
 1045 0002 82B0     		sub	sp, sp, #8
 1046              		.cfi_def_cfa_offset 16
 1047 0004 00AF     		add	r7, sp, #0
 1048              		.cfi_def_cfa_register 7
 1049 0006 7860     		str	r0, [r7, #4]
 417:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
 418:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 1050              		.loc 1 418 0
 1051 0008 7A68     		ldr	r2, [r7, #4]
 1052 000a 174B     		ldr	r3, .L51
 1053 000c 9A42     		cmp	r2, r3
 1054 000e 23D0     		beq	.L49
 1055              		.loc 1 418 0 is_stmt 0 discriminator 1
 1056 0010 7A68     		ldr	r2, [r7, #4]
 1057 0012 8023     		mov	r3, #128
 1058 0014 DB05     		lsl	r3, r3, #23
 1059 0016 9A42     		cmp	r2, r3
 1060 0018 1ED0     		beq	.L49
 1061 001a 7A68     		ldr	r2, [r7, #4]
 1062 001c 134B     		ldr	r3, .L51+4
 1063 001e 9A42     		cmp	r2, r3
 1064 0020 1AD0     		beq	.L49
 1065 0022 7A68     		ldr	r2, [r7, #4]
 1066 0024 124B     		ldr	r3, .L51+8
 1067 0026 9A42     		cmp	r2, r3
 1068 0028 16D0     		beq	.L49
 1069 002a 7A68     		ldr	r2, [r7, #4]
 1070 002c 114B     		ldr	r3, .L51+12
 1071 002e 9A42     		cmp	r2, r3
 1072 0030 12D0     		beq	.L49
 1073 0032 7A68     		ldr	r2, [r7, #4]
 1074 0034 104B     		ldr	r3, .L51+16
 1075 0036 9A42     		cmp	r2, r3
 1076 0038 0ED0     		beq	.L49
 1077 003a 7A68     		ldr	r2, [r7, #4]
 1078 003c 0F4B     		ldr	r3, .L51+20
 1079 003e 9A42     		cmp	r2, r3
 1080 0040 0AD0     		beq	.L49
 1081 0042 7A68     		ldr	r2, [r7, #4]
 1082 0044 0E4B     		ldr	r3, .L51+24
 1083 0046 9A42     		cmp	r2, r3
 1084 0048 06D0     		beq	.L49
 1085 004a 0E4A     		ldr	r2, .L51+28
 1086 004c D123     		mov	r3, #209
 1087 004e 5B00     		lsl	r3, r3, #1
 1088 0050 101C     		mov	r0, r2
 1089 0052 191C     		mov	r1, r3
 1090 0054 FFF7FEFF 		bl	assert_failed
 1091              	.L49:
 419:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 420:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Get the Prescaler Register value */
 421:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   return TIMx->PSC;
 1092              		.loc 1 421 0 is_stmt 1
 1093 0058 7B68     		ldr	r3, [r7, #4]
 1094 005a 1B8D     		ldrh	r3, [r3, #40]
 1095 005c 9BB2     		uxth	r3, r3
 422:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 1096              		.loc 1 422 0
 1097 005e 181C     		mov	r0, r3
 1098 0060 BD46     		mov	sp, r7
 1099 0062 02B0     		add	sp, sp, #8
 1100              		@ sp needed
 1101 0064 80BD     		pop	{r7, pc}
 1102              	.L52:
 1103 0066 C046     		.align	2
 1104              	.L51:
 1105 0068 002C0140 		.word	1073818624
 1106 006c 00040040 		.word	1073742848
 1107 0070 00100040 		.word	1073745920
 1108 0074 00200040 		.word	1073750016
 1109 0078 00400140 		.word	1073823744
 1110 007c 00440140 		.word	1073824768
 1111 0080 00480140 		.word	1073825792
 1112 0084 00000000 		.word	.LC0
 1113              		.cfi_endproc
 1114              	.LFE40:
 1116              		.section	.text.TIM_UpdateDisableConfig,"ax",%progbits
 1117              		.align	2
 1118              		.global	TIM_UpdateDisableConfig
 1119              		.code	16
 1120              		.thumb_func
 1122              	TIM_UpdateDisableConfig:
 1123              	.LFB41:
 423:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 424:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
 425:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Enables or Disables the TIMx Update event.
 426:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 6, 14, 15, 16 and 17 to select the TIM 
 427:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         peripheral.
 428:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  NewState: new state of the TIMx UDIS bit
 429:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
 430:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
 431:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 432:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_UpdateDisableConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 433:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 1124              		.loc 1 433 0
 1125              		.cfi_startproc
 1126 0000 80B5     		push	{r7, lr}
 1127              		.cfi_def_cfa_offset 8
 1128              		.cfi_offset 7, -8
 1129              		.cfi_offset 14, -4
 1130 0002 82B0     		sub	sp, sp, #8
 1131              		.cfi_def_cfa_offset 16
 1132 0004 00AF     		add	r7, sp, #0
 1133              		.cfi_def_cfa_register 7
 1134 0006 7860     		str	r0, [r7, #4]
 1135 0008 0A1C     		mov	r2, r1
 1136 000a FB1C     		add	r3, r7, #3
 1137 000c 1A70     		strb	r2, [r3]
 434:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
 435:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 1138              		.loc 1 435 0
 1139 000e 7A68     		ldr	r2, [r7, #4]
 1140 0010 264B     		ldr	r3, .L58
 1141 0012 9A42     		cmp	r2, r3
 1142 0014 23D0     		beq	.L54
 1143              		.loc 1 435 0 is_stmt 0 discriminator 1
 1144 0016 7A68     		ldr	r2, [r7, #4]
 1145 0018 8023     		mov	r3, #128
 1146 001a DB05     		lsl	r3, r3, #23
 1147 001c 9A42     		cmp	r2, r3
 1148 001e 1ED0     		beq	.L54
 1149 0020 7A68     		ldr	r2, [r7, #4]
 1150 0022 234B     		ldr	r3, .L58+4
 1151 0024 9A42     		cmp	r2, r3
 1152 0026 1AD0     		beq	.L54
 1153 0028 7A68     		ldr	r2, [r7, #4]
 1154 002a 224B     		ldr	r3, .L58+8
 1155 002c 9A42     		cmp	r2, r3
 1156 002e 16D0     		beq	.L54
 1157 0030 7A68     		ldr	r2, [r7, #4]
 1158 0032 214B     		ldr	r3, .L58+12
 1159 0034 9A42     		cmp	r2, r3
 1160 0036 12D0     		beq	.L54
 1161 0038 7A68     		ldr	r2, [r7, #4]
 1162 003a 204B     		ldr	r3, .L58+16
 1163 003c 9A42     		cmp	r2, r3
 1164 003e 0ED0     		beq	.L54
 1165 0040 7A68     		ldr	r2, [r7, #4]
 1166 0042 1F4B     		ldr	r3, .L58+20
 1167 0044 9A42     		cmp	r2, r3
 1168 0046 0AD0     		beq	.L54
 1169 0048 7A68     		ldr	r2, [r7, #4]
 1170 004a 1E4B     		ldr	r3, .L58+24
 1171 004c 9A42     		cmp	r2, r3
 1172 004e 06D0     		beq	.L54
 1173 0050 1D4A     		ldr	r2, .L58+28
 1174 0052 B423     		mov	r3, #180
 1175 0054 FF33     		add	r3, r3, #255
 1176 0056 101C     		mov	r0, r2
 1177 0058 191C     		mov	r1, r3
 1178 005a FFF7FEFF 		bl	assert_failed
 1179              	.L54:
 436:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1180              		.loc 1 436 0 is_stmt 1
 1181 005e FB1C     		add	r3, r7, #3
 1182 0060 1B78     		ldrb	r3, [r3]
 1183 0062 002B     		cmp	r3, #0
 1184 0064 0AD0     		beq	.L55
 1185              		.loc 1 436 0 is_stmt 0 discriminator 1
 1186 0066 FB1C     		add	r3, r7, #3
 1187 0068 1B78     		ldrb	r3, [r3]
 1188 006a 012B     		cmp	r3, #1
 1189 006c 06D0     		beq	.L55
 1190 006e 164A     		ldr	r2, .L58+28
 1191 0070 DA23     		mov	r3, #218
 1192 0072 5B00     		lsl	r3, r3, #1
 1193 0074 101C     		mov	r0, r2
 1194 0076 191C     		mov	r1, r3
 1195 0078 FFF7FEFF 		bl	assert_failed
 1196              	.L55:
 437:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 438:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   if (NewState != DISABLE)
 1197              		.loc 1 438 0 is_stmt 1
 1198 007c FB1C     		add	r3, r7, #3
 1199 007e 1B78     		ldrb	r3, [r3]
 1200 0080 002B     		cmp	r3, #0
 1201 0082 08D0     		beq	.L56
 439:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
 440:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the Update Disable Bit */
 441:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIMx->CR1 |= TIM_CR1_UDIS;
 1202              		.loc 1 441 0
 1203 0084 7B68     		ldr	r3, [r7, #4]
 1204 0086 1B88     		ldrh	r3, [r3]
 1205 0088 9BB2     		uxth	r3, r3
 1206 008a 0222     		mov	r2, #2
 1207 008c 1343     		orr	r3, r2
 1208 008e 9AB2     		uxth	r2, r3
 1209 0090 7B68     		ldr	r3, [r7, #4]
 1210 0092 1A80     		strh	r2, [r3]
 1211 0094 07E0     		b	.L53
 1212              	.L56:
 442:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
 443:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   else
 444:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
 445:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Reset the Update Disable Bit */
 446:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_UDIS);
 1213              		.loc 1 446 0
 1214 0096 7B68     		ldr	r3, [r7, #4]
 1215 0098 1B88     		ldrh	r3, [r3]
 1216 009a 9BB2     		uxth	r3, r3
 1217 009c 0222     		mov	r2, #2
 1218 009e 9343     		bic	r3, r2
 1219 00a0 9AB2     		uxth	r2, r3
 1220 00a2 7B68     		ldr	r3, [r7, #4]
 1221 00a4 1A80     		strh	r2, [r3]
 1222              	.L53:
 447:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
 448:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 1223              		.loc 1 448 0
 1224 00a6 BD46     		mov	sp, r7
 1225 00a8 02B0     		add	sp, sp, #8
 1226              		@ sp needed
 1227 00aa 80BD     		pop	{r7, pc}
 1228              	.L59:
 1229              		.align	2
 1230              	.L58:
 1231 00ac 002C0140 		.word	1073818624
 1232 00b0 00040040 		.word	1073742848
 1233 00b4 00100040 		.word	1073745920
 1234 00b8 00200040 		.word	1073750016
 1235 00bc 00400140 		.word	1073823744
 1236 00c0 00440140 		.word	1073824768
 1237 00c4 00480140 		.word	1073825792
 1238 00c8 00000000 		.word	.LC0
 1239              		.cfi_endproc
 1240              	.LFE41:
 1242              		.section	.text.TIM_UpdateRequestConfig,"ax",%progbits
 1243              		.align	2
 1244              		.global	TIM_UpdateRequestConfig
 1245              		.code	16
 1246              		.thumb_func
 1248              	TIM_UpdateRequestConfig:
 1249              	.LFB42:
 449:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 450:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
 451:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Configures the TIMx Update Request Interrupt source.
 452:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 6, 14, 15, 16 and 17 to select the TIM 
 453:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         peripheral.
 454:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_UpdateSource: specifies the Update source.
 455:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
 456:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_UpdateSource_Regular: Source of update is the counter overflow/underflow
 457:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                                        or the setting of UG bit, or an update generation
 458:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                                        through the slave mode controller.
 459:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_UpdateSource_Global: Source of update is counter overflow/underflow.
 460:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
 461:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 462:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_UpdateRequestConfig(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource)
 463:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 1250              		.loc 1 463 0
 1251              		.cfi_startproc
 1252 0000 80B5     		push	{r7, lr}
 1253              		.cfi_def_cfa_offset 8
 1254              		.cfi_offset 7, -8
 1255              		.cfi_offset 14, -4
 1256 0002 82B0     		sub	sp, sp, #8
 1257              		.cfi_def_cfa_offset 16
 1258 0004 00AF     		add	r7, sp, #0
 1259              		.cfi_def_cfa_register 7
 1260 0006 7860     		str	r0, [r7, #4]
 1261 0008 0A1C     		mov	r2, r1
 1262 000a BB1C     		add	r3, r7, #2
 1263 000c 1A80     		strh	r2, [r3]
 464:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
 465:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 1264              		.loc 1 465 0
 1265 000e 7A68     		ldr	r2, [r7, #4]
 1266 0010 264B     		ldr	r3, .L65
 1267 0012 9A42     		cmp	r2, r3
 1268 0014 23D0     		beq	.L61
 1269              		.loc 1 465 0 is_stmt 0 discriminator 1
 1270 0016 7A68     		ldr	r2, [r7, #4]
 1271 0018 8023     		mov	r3, #128
 1272 001a DB05     		lsl	r3, r3, #23
 1273 001c 9A42     		cmp	r2, r3
 1274 001e 1ED0     		beq	.L61
 1275 0020 7A68     		ldr	r2, [r7, #4]
 1276 0022 234B     		ldr	r3, .L65+4
 1277 0024 9A42     		cmp	r2, r3
 1278 0026 1AD0     		beq	.L61
 1279 0028 7A68     		ldr	r2, [r7, #4]
 1280 002a 224B     		ldr	r3, .L65+8
 1281 002c 9A42     		cmp	r2, r3
 1282 002e 16D0     		beq	.L61
 1283 0030 7A68     		ldr	r2, [r7, #4]
 1284 0032 214B     		ldr	r3, .L65+12
 1285 0034 9A42     		cmp	r2, r3
 1286 0036 12D0     		beq	.L61
 1287 0038 7A68     		ldr	r2, [r7, #4]
 1288 003a 204B     		ldr	r3, .L65+16
 1289 003c 9A42     		cmp	r2, r3
 1290 003e 0ED0     		beq	.L61
 1291 0040 7A68     		ldr	r2, [r7, #4]
 1292 0042 1F4B     		ldr	r3, .L65+20
 1293 0044 9A42     		cmp	r2, r3
 1294 0046 0AD0     		beq	.L61
 1295 0048 7A68     		ldr	r2, [r7, #4]
 1296 004a 1E4B     		ldr	r3, .L65+24
 1297 004c 9A42     		cmp	r2, r3
 1298 004e 06D0     		beq	.L61
 1299 0050 1D4A     		ldr	r2, .L65+28
 1300 0052 D223     		mov	r3, #210
 1301 0054 FF33     		add	r3, r3, #255
 1302 0056 101C     		mov	r0, r2
 1303 0058 191C     		mov	r1, r3
 1304 005a FFF7FEFF 		bl	assert_failed
 1305              	.L61:
 466:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_UPDATE_SOURCE(TIM_UpdateSource));
 1306              		.loc 1 466 0 is_stmt 1
 1307 005e BB1C     		add	r3, r7, #2
 1308 0060 1B88     		ldrh	r3, [r3]
 1309 0062 002B     		cmp	r3, #0
 1310 0064 0AD0     		beq	.L62
 1311              		.loc 1 466 0 is_stmt 0 discriminator 1
 1312 0066 BB1C     		add	r3, r7, #2
 1313 0068 1B88     		ldrh	r3, [r3]
 1314 006a 012B     		cmp	r3, #1
 1315 006c 06D0     		beq	.L62
 1316 006e 164A     		ldr	r2, .L65+28
 1317 0070 E923     		mov	r3, #233
 1318 0072 5B00     		lsl	r3, r3, #1
 1319 0074 101C     		mov	r0, r2
 1320 0076 191C     		mov	r1, r3
 1321 0078 FFF7FEFF 		bl	assert_failed
 1322              	.L62:
 467:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 468:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   if (TIM_UpdateSource != TIM_UpdateSource_Global)
 1323              		.loc 1 468 0 is_stmt 1
 1324 007c BB1C     		add	r3, r7, #2
 1325 007e 1B88     		ldrh	r3, [r3]
 1326 0080 002B     		cmp	r3, #0
 1327 0082 08D0     		beq	.L63
 469:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
 470:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the URS Bit */
 471:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIMx->CR1 |= TIM_CR1_URS;
 1328              		.loc 1 471 0
 1329 0084 7B68     		ldr	r3, [r7, #4]
 1330 0086 1B88     		ldrh	r3, [r3]
 1331 0088 9BB2     		uxth	r3, r3
 1332 008a 0422     		mov	r2, #4
 1333 008c 1343     		orr	r3, r2
 1334 008e 9AB2     		uxth	r2, r3
 1335 0090 7B68     		ldr	r3, [r7, #4]
 1336 0092 1A80     		strh	r2, [r3]
 1337 0094 07E0     		b	.L60
 1338              	.L63:
 472:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
 473:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   else
 474:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
 475:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Reset the URS Bit */
 476:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_URS);
 1339              		.loc 1 476 0
 1340 0096 7B68     		ldr	r3, [r7, #4]
 1341 0098 1B88     		ldrh	r3, [r3]
 1342 009a 9BB2     		uxth	r3, r3
 1343 009c 0422     		mov	r2, #4
 1344 009e 9343     		bic	r3, r2
 1345 00a0 9AB2     		uxth	r2, r3
 1346 00a2 7B68     		ldr	r3, [r7, #4]
 1347 00a4 1A80     		strh	r2, [r3]
 1348              	.L60:
 477:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
 478:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 1349              		.loc 1 478 0
 1350 00a6 BD46     		mov	sp, r7
 1351 00a8 02B0     		add	sp, sp, #8
 1352              		@ sp needed
 1353 00aa 80BD     		pop	{r7, pc}
 1354              	.L66:
 1355              		.align	2
 1356              	.L65:
 1357 00ac 002C0140 		.word	1073818624
 1358 00b0 00040040 		.word	1073742848
 1359 00b4 00100040 		.word	1073745920
 1360 00b8 00200040 		.word	1073750016
 1361 00bc 00400140 		.word	1073823744
 1362 00c0 00440140 		.word	1073824768
 1363 00c4 00480140 		.word	1073825792
 1364 00c8 00000000 		.word	.LC0
 1365              		.cfi_endproc
 1366              	.LFE42:
 1368              		.section	.text.TIM_ARRPreloadConfig,"ax",%progbits
 1369              		.align	2
 1370              		.global	TIM_ARRPreloadConfig
 1371              		.code	16
 1372              		.thumb_func
 1374              	TIM_ARRPreloadConfig:
 1375              	.LFB43:
 479:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 480:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
 481:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Enables or disables TIMx peripheral Preload register on ARR.
 482:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 6, 14, 15, 16 and 17 to select the TIM 
 483:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         peripheral.
 484:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral Preload register
 485:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
 486:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
 487:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 488:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_ARRPreloadConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 489:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 1376              		.loc 1 489 0
 1377              		.cfi_startproc
 1378 0000 80B5     		push	{r7, lr}
 1379              		.cfi_def_cfa_offset 8
 1380              		.cfi_offset 7, -8
 1381              		.cfi_offset 14, -4
 1382 0002 82B0     		sub	sp, sp, #8
 1383              		.cfi_def_cfa_offset 16
 1384 0004 00AF     		add	r7, sp, #0
 1385              		.cfi_def_cfa_register 7
 1386 0006 7860     		str	r0, [r7, #4]
 1387 0008 0A1C     		mov	r2, r1
 1388 000a FB1C     		add	r3, r7, #3
 1389 000c 1A70     		strb	r2, [r3]
 490:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
 491:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 1390              		.loc 1 491 0
 1391 000e 7A68     		ldr	r2, [r7, #4]
 1392 0010 264B     		ldr	r3, .L72
 1393 0012 9A42     		cmp	r2, r3
 1394 0014 23D0     		beq	.L68
 1395              		.loc 1 491 0 is_stmt 0 discriminator 1
 1396 0016 7A68     		ldr	r2, [r7, #4]
 1397 0018 8023     		mov	r3, #128
 1398 001a DB05     		lsl	r3, r3, #23
 1399 001c 9A42     		cmp	r2, r3
 1400 001e 1ED0     		beq	.L68
 1401 0020 7A68     		ldr	r2, [r7, #4]
 1402 0022 234B     		ldr	r3, .L72+4
 1403 0024 9A42     		cmp	r2, r3
 1404 0026 1AD0     		beq	.L68
 1405 0028 7A68     		ldr	r2, [r7, #4]
 1406 002a 224B     		ldr	r3, .L72+8
 1407 002c 9A42     		cmp	r2, r3
 1408 002e 16D0     		beq	.L68
 1409 0030 7A68     		ldr	r2, [r7, #4]
 1410 0032 214B     		ldr	r3, .L72+12
 1411 0034 9A42     		cmp	r2, r3
 1412 0036 12D0     		beq	.L68
 1413 0038 7A68     		ldr	r2, [r7, #4]
 1414 003a 204B     		ldr	r3, .L72+16
 1415 003c 9A42     		cmp	r2, r3
 1416 003e 0ED0     		beq	.L68
 1417 0040 7A68     		ldr	r2, [r7, #4]
 1418 0042 1F4B     		ldr	r3, .L72+20
 1419 0044 9A42     		cmp	r2, r3
 1420 0046 0AD0     		beq	.L68
 1421 0048 7A68     		ldr	r2, [r7, #4]
 1422 004a 1E4B     		ldr	r3, .L72+24
 1423 004c 9A42     		cmp	r2, r3
 1424 004e 06D0     		beq	.L68
 1425 0050 1D4A     		ldr	r2, .L72+28
 1426 0052 EC23     		mov	r3, #236
 1427 0054 FF33     		add	r3, r3, #255
 1428 0056 101C     		mov	r0, r2
 1429 0058 191C     		mov	r1, r3
 1430 005a FFF7FEFF 		bl	assert_failed
 1431              	.L68:
 492:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1432              		.loc 1 492 0 is_stmt 1
 1433 005e FB1C     		add	r3, r7, #3
 1434 0060 1B78     		ldrb	r3, [r3]
 1435 0062 002B     		cmp	r3, #0
 1436 0064 0AD0     		beq	.L69
 1437              		.loc 1 492 0 is_stmt 0 discriminator 1
 1438 0066 FB1C     		add	r3, r7, #3
 1439 0068 1B78     		ldrb	r3, [r3]
 1440 006a 012B     		cmp	r3, #1
 1441 006c 06D0     		beq	.L69
 1442 006e 164A     		ldr	r2, .L72+28
 1443 0070 F623     		mov	r3, #246
 1444 0072 5B00     		lsl	r3, r3, #1
 1445 0074 101C     		mov	r0, r2
 1446 0076 191C     		mov	r1, r3
 1447 0078 FFF7FEFF 		bl	assert_failed
 1448              	.L69:
 493:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 494:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   if (NewState != DISABLE)
 1449              		.loc 1 494 0 is_stmt 1
 1450 007c FB1C     		add	r3, r7, #3
 1451 007e 1B78     		ldrb	r3, [r3]
 1452 0080 002B     		cmp	r3, #0
 1453 0082 08D0     		beq	.L70
 495:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
 496:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the ARR Preload Bit */
 497:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIMx->CR1 |= TIM_CR1_ARPE;
 1454              		.loc 1 497 0
 1455 0084 7B68     		ldr	r3, [r7, #4]
 1456 0086 1B88     		ldrh	r3, [r3]
 1457 0088 9BB2     		uxth	r3, r3
 1458 008a 8022     		mov	r2, #128
 1459 008c 1343     		orr	r3, r2
 1460 008e 9AB2     		uxth	r2, r3
 1461 0090 7B68     		ldr	r3, [r7, #4]
 1462 0092 1A80     		strh	r2, [r3]
 1463 0094 07E0     		b	.L67
 1464              	.L70:
 498:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
 499:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   else
 500:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
 501:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Reset the ARR Preload Bit */
 502:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_ARPE);
 1465              		.loc 1 502 0
 1466 0096 7B68     		ldr	r3, [r7, #4]
 1467 0098 1B88     		ldrh	r3, [r3]
 1468 009a 9BB2     		uxth	r3, r3
 1469 009c 8022     		mov	r2, #128
 1470 009e 9343     		bic	r3, r2
 1471 00a0 9AB2     		uxth	r2, r3
 1472 00a2 7B68     		ldr	r3, [r7, #4]
 1473 00a4 1A80     		strh	r2, [r3]
 1474              	.L67:
 503:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
 504:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 1475              		.loc 1 504 0
 1476 00a6 BD46     		mov	sp, r7
 1477 00a8 02B0     		add	sp, sp, #8
 1478              		@ sp needed
 1479 00aa 80BD     		pop	{r7, pc}
 1480              	.L73:
 1481              		.align	2
 1482              	.L72:
 1483 00ac 002C0140 		.word	1073818624
 1484 00b0 00040040 		.word	1073742848
 1485 00b4 00100040 		.word	1073745920
 1486 00b8 00200040 		.word	1073750016
 1487 00bc 00400140 		.word	1073823744
 1488 00c0 00440140 		.word	1073824768
 1489 00c4 00480140 		.word	1073825792
 1490 00c8 00000000 		.word	.LC0
 1491              		.cfi_endproc
 1492              	.LFE43:
 1494              		.section	.text.TIM_SelectOnePulseMode,"ax",%progbits
 1495              		.align	2
 1496              		.global	TIM_SelectOnePulseMode
 1497              		.code	16
 1498              		.thumb_func
 1500              	TIM_SelectOnePulseMode:
 1501              	.LFB44:
 505:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 506:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
 507:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Selects the TIMx's One Pulse Mode.
 508:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 6, 14, 15, 16 and 17 to select the TIM 
 509:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         peripheral.
 510:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_OPMode: specifies the OPM Mode to be used.
 511:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
 512:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OPMode_Single
 513:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OPMode_Repetitive
 514:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
 515:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 516:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_SelectOnePulseMode(TIM_TypeDef* TIMx, uint16_t TIM_OPMode)
 517:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 1502              		.loc 1 517 0
 1503              		.cfi_startproc
 1504 0000 80B5     		push	{r7, lr}
 1505              		.cfi_def_cfa_offset 8
 1506              		.cfi_offset 7, -8
 1507              		.cfi_offset 14, -4
 1508 0002 82B0     		sub	sp, sp, #8
 1509              		.cfi_def_cfa_offset 16
 1510 0004 00AF     		add	r7, sp, #0
 1511              		.cfi_def_cfa_register 7
 1512 0006 7860     		str	r0, [r7, #4]
 1513 0008 0A1C     		mov	r2, r1
 1514 000a BB1C     		add	r3, r7, #2
 1515 000c 1A80     		strh	r2, [r3]
 518:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
 519:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 1516              		.loc 1 519 0
 1517 000e 7A68     		ldr	r2, [r7, #4]
 1518 0010 244B     		ldr	r3, .L77
 1519 0012 9A42     		cmp	r2, r3
 1520 0014 22D0     		beq	.L75
 1521              		.loc 1 519 0 is_stmt 0 discriminator 1
 1522 0016 7A68     		ldr	r2, [r7, #4]
 1523 0018 8023     		mov	r3, #128
 1524 001a DB05     		lsl	r3, r3, #23
 1525 001c 9A42     		cmp	r2, r3
 1526 001e 1DD0     		beq	.L75
 1527 0020 7A68     		ldr	r2, [r7, #4]
 1528 0022 214B     		ldr	r3, .L77+4
 1529 0024 9A42     		cmp	r2, r3
 1530 0026 19D0     		beq	.L75
 1531 0028 7A68     		ldr	r2, [r7, #4]
 1532 002a 204B     		ldr	r3, .L77+8
 1533 002c 9A42     		cmp	r2, r3
 1534 002e 15D0     		beq	.L75
 1535 0030 7A68     		ldr	r2, [r7, #4]
 1536 0032 1F4B     		ldr	r3, .L77+12
 1537 0034 9A42     		cmp	r2, r3
 1538 0036 11D0     		beq	.L75
 1539 0038 7A68     		ldr	r2, [r7, #4]
 1540 003a 1E4B     		ldr	r3, .L77+16
 1541 003c 9A42     		cmp	r2, r3
 1542 003e 0DD0     		beq	.L75
 1543 0040 7A68     		ldr	r2, [r7, #4]
 1544 0042 1D4B     		ldr	r3, .L77+20
 1545 0044 9A42     		cmp	r2, r3
 1546 0046 09D0     		beq	.L75
 1547 0048 7A68     		ldr	r2, [r7, #4]
 1548 004a 1C4B     		ldr	r3, .L77+24
 1549 004c 9A42     		cmp	r2, r3
 1550 004e 05D0     		beq	.L75
 1551 0050 1B4A     		ldr	r2, .L77+28
 1552 0052 1C4B     		ldr	r3, .L77+32
 1553 0054 101C     		mov	r0, r2
 1554 0056 191C     		mov	r1, r3
 1555 0058 FFF7FEFF 		bl	assert_failed
 1556              	.L75:
 520:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OPM_MODE(TIM_OPMode));
 1557              		.loc 1 520 0 is_stmt 1
 1558 005c BB1C     		add	r3, r7, #2
 1559 005e 1B88     		ldrh	r3, [r3]
 1560 0060 082B     		cmp	r3, #8
 1561 0062 0AD0     		beq	.L76
 1562              		.loc 1 520 0 is_stmt 0 discriminator 1
 1563 0064 BB1C     		add	r3, r7, #2
 1564 0066 1B88     		ldrh	r3, [r3]
 1565 0068 002B     		cmp	r3, #0
 1566 006a 06D0     		beq	.L76
 1567 006c 144A     		ldr	r2, .L77+28
 1568 006e 8223     		mov	r3, #130
 1569 0070 9B00     		lsl	r3, r3, #2
 1570 0072 101C     		mov	r0, r2
 1571 0074 191C     		mov	r1, r3
 1572 0076 FFF7FEFF 		bl	assert_failed
 1573              	.L76:
 521:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 522:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the OPM Bit */
 523:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_OPM);
 1574              		.loc 1 523 0 is_stmt 1
 1575 007a 7B68     		ldr	r3, [r7, #4]
 1576 007c 1B88     		ldrh	r3, [r3]
 1577 007e 9BB2     		uxth	r3, r3
 1578 0080 0822     		mov	r2, #8
 1579 0082 9343     		bic	r3, r2
 1580 0084 9AB2     		uxth	r2, r3
 1581 0086 7B68     		ldr	r3, [r7, #4]
 1582 0088 1A80     		strh	r2, [r3]
 524:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Configure the OPM Mode */
 525:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CR1 |= TIM_OPMode;
 1583              		.loc 1 525 0
 1584 008a 7B68     		ldr	r3, [r7, #4]
 1585 008c 1B88     		ldrh	r3, [r3]
 1586 008e 9AB2     		uxth	r2, r3
 1587 0090 BB1C     		add	r3, r7, #2
 1588 0092 1B88     		ldrh	r3, [r3]
 1589 0094 1343     		orr	r3, r2
 1590 0096 9AB2     		uxth	r2, r3
 1591 0098 7B68     		ldr	r3, [r7, #4]
 1592 009a 1A80     		strh	r2, [r3]
 526:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 1593              		.loc 1 526 0
 1594 009c BD46     		mov	sp, r7
 1595 009e 02B0     		add	sp, sp, #8
 1596              		@ sp needed
 1597 00a0 80BD     		pop	{r7, pc}
 1598              	.L78:
 1599 00a2 C046     		.align	2
 1600              	.L77:
 1601 00a4 002C0140 		.word	1073818624
 1602 00a8 00040040 		.word	1073742848
 1603 00ac 00100040 		.word	1073745920
 1604 00b0 00200040 		.word	1073750016
 1605 00b4 00400140 		.word	1073823744
 1606 00b8 00440140 		.word	1073824768
 1607 00bc 00480140 		.word	1073825792
 1608 00c0 00000000 		.word	.LC0
 1609 00c4 07020000 		.word	519
 1610              		.cfi_endproc
 1611              	.LFE44:
 1613              		.section	.text.TIM_SetClockDivision,"ax",%progbits
 1614              		.align	2
 1615              		.global	TIM_SetClockDivision
 1616              		.code	16
 1617              		.thumb_func
 1619              	TIM_SetClockDivision:
 1620              	.LFB45:
 527:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 528:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
 529:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Sets the TIMx Clock Division value.
 530:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 14, 15, 16 and 17 to select the TIM peripheral.
 531:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_CKD: specifies the clock division value.
 532:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following value:
 533:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_CKD_DIV1: TDTS = Tck_tim
 534:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_CKD_DIV2: TDTS = 2*Tck_tim
 535:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_CKD_DIV4: TDTS = 4*Tck_tim
 536:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
 537:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 538:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_SetClockDivision(TIM_TypeDef* TIMx, uint16_t TIM_CKD)
 539:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 1621              		.loc 1 539 0
 1622              		.cfi_startproc
 1623 0000 80B5     		push	{r7, lr}
 1624              		.cfi_def_cfa_offset 8
 1625              		.cfi_offset 7, -8
 1626              		.cfi_offset 14, -4
 1627 0002 82B0     		sub	sp, sp, #8
 1628              		.cfi_def_cfa_offset 16
 1629 0004 00AF     		add	r7, sp, #0
 1630              		.cfi_def_cfa_register 7
 1631 0006 7860     		str	r0, [r7, #4]
 1632 0008 0A1C     		mov	r2, r1
 1633 000a BB1C     		add	r3, r7, #2
 1634 000c 1A80     		strh	r2, [r3]
 540:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
 541:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
 1635              		.loc 1 541 0
 1636 000e 7A68     		ldr	r2, [r7, #4]
 1637 0010 254B     		ldr	r3, .L82
 1638 0012 9A42     		cmp	r2, r3
 1639 0014 1ED0     		beq	.L80
 1640              		.loc 1 541 0 is_stmt 0 discriminator 1
 1641 0016 7A68     		ldr	r2, [r7, #4]
 1642 0018 8023     		mov	r3, #128
 1643 001a DB05     		lsl	r3, r3, #23
 1644 001c 9A42     		cmp	r2, r3
 1645 001e 19D0     		beq	.L80
 1646 0020 7A68     		ldr	r2, [r7, #4]
 1647 0022 224B     		ldr	r3, .L82+4
 1648 0024 9A42     		cmp	r2, r3
 1649 0026 15D0     		beq	.L80
 1650 0028 7A68     		ldr	r2, [r7, #4]
 1651 002a 214B     		ldr	r3, .L82+8
 1652 002c 9A42     		cmp	r2, r3
 1653 002e 11D0     		beq	.L80
 1654 0030 7A68     		ldr	r2, [r7, #4]
 1655 0032 204B     		ldr	r3, .L82+12
 1656 0034 9A42     		cmp	r2, r3
 1657 0036 0DD0     		beq	.L80
 1658 0038 7A68     		ldr	r2, [r7, #4]
 1659 003a 1F4B     		ldr	r3, .L82+16
 1660 003c 9A42     		cmp	r2, r3
 1661 003e 09D0     		beq	.L80
 1662 0040 7A68     		ldr	r2, [r7, #4]
 1663 0042 1E4B     		ldr	r3, .L82+20
 1664 0044 9A42     		cmp	r2, r3
 1665 0046 05D0     		beq	.L80
 1666 0048 1D4A     		ldr	r2, .L82+24
 1667 004a 1E4B     		ldr	r3, .L82+28
 1668 004c 101C     		mov	r0, r2
 1669 004e 191C     		mov	r1, r3
 1670 0050 FFF7FEFF 		bl	assert_failed
 1671              	.L80:
 542:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_CKD));
 1672              		.loc 1 542 0 is_stmt 1
 1673 0054 BB1C     		add	r3, r7, #2
 1674 0056 1B88     		ldrh	r3, [r3]
 1675 0058 002B     		cmp	r3, #0
 1676 005a 11D0     		beq	.L81
 1677              		.loc 1 542 0 is_stmt 0 discriminator 1
 1678 005c BB1C     		add	r3, r7, #2
 1679 005e 1A88     		ldrh	r2, [r3]
 1680 0060 8023     		mov	r3, #128
 1681 0062 5B00     		lsl	r3, r3, #1
 1682 0064 9A42     		cmp	r2, r3
 1683 0066 0BD0     		beq	.L81
 1684 0068 BB1C     		add	r3, r7, #2
 1685 006a 1A88     		ldrh	r2, [r3]
 1686 006c 8023     		mov	r3, #128
 1687 006e 9B00     		lsl	r3, r3, #2
 1688 0070 9A42     		cmp	r2, r3
 1689 0072 05D0     		beq	.L81
 1690 0074 124A     		ldr	r2, .L82+24
 1691 0076 144B     		ldr	r3, .L82+32
 1692 0078 101C     		mov	r0, r2
 1693 007a 191C     		mov	r1, r3
 1694 007c FFF7FEFF 		bl	assert_failed
 1695              	.L81:
 543:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 544:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the CKD Bits */
 545:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_CKD);
 1696              		.loc 1 545 0 is_stmt 1
 1697 0080 7B68     		ldr	r3, [r7, #4]
 1698 0082 1B88     		ldrh	r3, [r3]
 1699 0084 9AB2     		uxth	r2, r3
 1700 0086 114B     		ldr	r3, .L82+36
 1701 0088 1340     		and	r3, r2
 1702 008a 9AB2     		uxth	r2, r3
 1703 008c 7B68     		ldr	r3, [r7, #4]
 1704 008e 1A80     		strh	r2, [r3]
 546:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the CKD value */
 547:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CR1 |= TIM_CKD;
 1705              		.loc 1 547 0
 1706 0090 7B68     		ldr	r3, [r7, #4]
 1707 0092 1B88     		ldrh	r3, [r3]
 1708 0094 9AB2     		uxth	r2, r3
 1709 0096 BB1C     		add	r3, r7, #2
 1710 0098 1B88     		ldrh	r3, [r3]
 1711 009a 1343     		orr	r3, r2
 1712 009c 9AB2     		uxth	r2, r3
 1713 009e 7B68     		ldr	r3, [r7, #4]
 1714 00a0 1A80     		strh	r2, [r3]
 548:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 1715              		.loc 1 548 0
 1716 00a2 BD46     		mov	sp, r7
 1717 00a4 02B0     		add	sp, sp, #8
 1718              		@ sp needed
 1719 00a6 80BD     		pop	{r7, pc}
 1720              	.L83:
 1721              		.align	2
 1722              	.L82:
 1723 00a8 002C0140 		.word	1073818624
 1724 00ac 00040040 		.word	1073742848
 1725 00b0 00200040 		.word	1073750016
 1726 00b4 00400140 		.word	1073823744
 1727 00b8 00440140 		.word	1073824768
 1728 00bc 00480140 		.word	1073825792
 1729 00c0 00000000 		.word	.LC0
 1730 00c4 1D020000 		.word	541
 1731 00c8 1E020000 		.word	542
 1732 00cc FFFCFFFF 		.word	-769
 1733              		.cfi_endproc
 1734              	.LFE45:
 1736              		.section	.text.TIM_Cmd,"ax",%progbits
 1737              		.align	2
 1738              		.global	TIM_Cmd
 1739              		.code	16
 1740              		.thumb_func
 1742              	TIM_Cmd:
 1743              	.LFB46:
 549:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 550:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
 551:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Enables or disables the specified TIM peripheral.
 552:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 6, 14, 15, 16 and 17to select the TIMx
 553:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         peripheral.
 554:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral.
 555:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         This parameter can be: ENABLE or DISABLE.
 556:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
 557:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 558:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_Cmd(TIM_TypeDef* TIMx, FunctionalState NewState)
 559:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 1744              		.loc 1 559 0
 1745              		.cfi_startproc
 1746 0000 80B5     		push	{r7, lr}
 1747              		.cfi_def_cfa_offset 8
 1748              		.cfi_offset 7, -8
 1749              		.cfi_offset 14, -4
 1750 0002 82B0     		sub	sp, sp, #8
 1751              		.cfi_def_cfa_offset 16
 1752 0004 00AF     		add	r7, sp, #0
 1753              		.cfi_def_cfa_register 7
 1754 0006 7860     		str	r0, [r7, #4]
 1755 0008 0A1C     		mov	r2, r1
 1756 000a FB1C     		add	r3, r7, #3
 1757 000c 1A70     		strb	r2, [r3]
 560:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
 561:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 1758              		.loc 1 561 0
 1759 000e 7A68     		ldr	r2, [r7, #4]
 1760 0010 254B     		ldr	r3, .L89
 1761 0012 9A42     		cmp	r2, r3
 1762 0014 22D0     		beq	.L85
 1763              		.loc 1 561 0 is_stmt 0 discriminator 1
 1764 0016 7A68     		ldr	r2, [r7, #4]
 1765 0018 8023     		mov	r3, #128
 1766 001a DB05     		lsl	r3, r3, #23
 1767 001c 9A42     		cmp	r2, r3
 1768 001e 1DD0     		beq	.L85
 1769 0020 7A68     		ldr	r2, [r7, #4]
 1770 0022 224B     		ldr	r3, .L89+4
 1771 0024 9A42     		cmp	r2, r3
 1772 0026 19D0     		beq	.L85
 1773 0028 7A68     		ldr	r2, [r7, #4]
 1774 002a 214B     		ldr	r3, .L89+8
 1775 002c 9A42     		cmp	r2, r3
 1776 002e 15D0     		beq	.L85
 1777 0030 7A68     		ldr	r2, [r7, #4]
 1778 0032 204B     		ldr	r3, .L89+12
 1779 0034 9A42     		cmp	r2, r3
 1780 0036 11D0     		beq	.L85
 1781 0038 7A68     		ldr	r2, [r7, #4]
 1782 003a 1F4B     		ldr	r3, .L89+16
 1783 003c 9A42     		cmp	r2, r3
 1784 003e 0DD0     		beq	.L85
 1785 0040 7A68     		ldr	r2, [r7, #4]
 1786 0042 1E4B     		ldr	r3, .L89+20
 1787 0044 9A42     		cmp	r2, r3
 1788 0046 09D0     		beq	.L85
 1789 0048 7A68     		ldr	r2, [r7, #4]
 1790 004a 1D4B     		ldr	r3, .L89+24
 1791 004c 9A42     		cmp	r2, r3
 1792 004e 05D0     		beq	.L85
 1793 0050 1C4A     		ldr	r2, .L89+28
 1794 0052 1D4B     		ldr	r3, .L89+32
 1795 0054 101C     		mov	r0, r2
 1796 0056 191C     		mov	r1, r3
 1797 0058 FFF7FEFF 		bl	assert_failed
 1798              	.L85:
 562:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1799              		.loc 1 562 0 is_stmt 1
 1800 005c FB1C     		add	r3, r7, #3
 1801 005e 1B78     		ldrb	r3, [r3]
 1802 0060 002B     		cmp	r3, #0
 1803 0062 09D0     		beq	.L86
 1804              		.loc 1 562 0 is_stmt 0 discriminator 1
 1805 0064 FB1C     		add	r3, r7, #3
 1806 0066 1B78     		ldrb	r3, [r3]
 1807 0068 012B     		cmp	r3, #1
 1808 006a 05D0     		beq	.L86
 1809 006c 154A     		ldr	r2, .L89+28
 1810 006e 174B     		ldr	r3, .L89+36
 1811 0070 101C     		mov	r0, r2
 1812 0072 191C     		mov	r1, r3
 1813 0074 FFF7FEFF 		bl	assert_failed
 1814              	.L86:
 563:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 564:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   if (NewState != DISABLE)
 1815              		.loc 1 564 0 is_stmt 1
 1816 0078 FB1C     		add	r3, r7, #3
 1817 007a 1B78     		ldrb	r3, [r3]
 1818 007c 002B     		cmp	r3, #0
 1819 007e 08D0     		beq	.L87
 565:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
 566:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Enable the TIM Counter */
 567:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIMx->CR1 |= TIM_CR1_CEN;
 1820              		.loc 1 567 0
 1821 0080 7B68     		ldr	r3, [r7, #4]
 1822 0082 1B88     		ldrh	r3, [r3]
 1823 0084 9BB2     		uxth	r3, r3
 1824 0086 0122     		mov	r2, #1
 1825 0088 1343     		orr	r3, r2
 1826 008a 9AB2     		uxth	r2, r3
 1827 008c 7B68     		ldr	r3, [r7, #4]
 1828 008e 1A80     		strh	r2, [r3]
 1829 0090 07E0     		b	.L84
 1830              	.L87:
 568:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
 569:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   else
 570:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
 571:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Disable the TIM Counter */
 572:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIMx->CR1 &= (uint16_t)(~((uint16_t)TIM_CR1_CEN));
 1831              		.loc 1 572 0
 1832 0092 7B68     		ldr	r3, [r7, #4]
 1833 0094 1B88     		ldrh	r3, [r3]
 1834 0096 9BB2     		uxth	r3, r3
 1835 0098 0122     		mov	r2, #1
 1836 009a 9343     		bic	r3, r2
 1837 009c 9AB2     		uxth	r2, r3
 1838 009e 7B68     		ldr	r3, [r7, #4]
 1839 00a0 1A80     		strh	r2, [r3]
 1840              	.L84:
 573:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
 574:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 1841              		.loc 1 574 0
 1842 00a2 BD46     		mov	sp, r7
 1843 00a4 02B0     		add	sp, sp, #8
 1844              		@ sp needed
 1845 00a6 80BD     		pop	{r7, pc}
 1846              	.L90:
 1847              		.align	2
 1848              	.L89:
 1849 00a8 002C0140 		.word	1073818624
 1850 00ac 00040040 		.word	1073742848
 1851 00b0 00100040 		.word	1073745920
 1852 00b4 00200040 		.word	1073750016
 1853 00b8 00400140 		.word	1073823744
 1854 00bc 00440140 		.word	1073824768
 1855 00c0 00480140 		.word	1073825792
 1856 00c4 00000000 		.word	.LC0
 1857 00c8 31020000 		.word	561
 1858 00cc 32020000 		.word	562
 1859              		.cfi_endproc
 1860              	.LFE46:
 1862              		.section	.text.TIM_BDTRConfig,"ax",%progbits
 1863              		.align	2
 1864              		.global	TIM_BDTRConfig
 1865              		.code	16
 1866              		.thumb_func
 1868              	TIM_BDTRConfig:
 1869              	.LFB47:
 575:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 576:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
 577:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @}
 578:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 579:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 580:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /** @defgroup TIM_Group2 Advanced-control timers (TIM1) specific features
 581:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  *  @brief   Advanced-control timers (TIM1) specific features
 582:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  *
 583:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** @verbatim   
 584:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  ===============================================================================
 585:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****       ##### Advanced-control timers (TIM1) specific features #####
 586:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  ===============================================================================  
 587:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 588:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****        ===================================================================      
 589:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****               *** TIM Driver: how to use the Break feature ***
 590:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****        =================================================================== 
 591:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****        [..] After configuring the Timer channel(s) in the appropriate Output Compare mode: 
 592:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                          
 593:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****            (#) Fill the TIM_BDTRInitStruct with the desired parameters for the Timer
 594:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                Break Polarity, dead time, Lock level, the OSSI/OSSR State and the 
 595:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                AOE(automatic output enable).
 596:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                
 597:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****            (#) Call TIM_BDTRConfig(TIMx, &TIM_BDTRInitStruct) to configure the Timer
 598:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****           
 599:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****            (#) Enable the Main Output using TIM_CtrlPWMOutputs(TIM1, ENABLE) 
 600:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****           
 601:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****            (#) Once the break even occurs, the Timer's output signals are put in reset
 602:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                state or in a known state (according to the configuration made in
 603:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                TIM_BDTRConfig() function).
 604:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 605:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** @endverbatim
 606:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @{
 607:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 608:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
 609:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Configures the: Break feature, dead time, Lock level, the OSSI,
 610:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   the OSSR State and the AOE(automatic output enable).
 611:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be  1, 15, 16 or 17 to select the TIM 
 612:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure that
 613:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   contains the BDTR Register configuration  information for the TIM peripheral.
 614:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
 615:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 616:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_BDTRConfig(TIM_TypeDef* TIMx, TIM_BDTRInitTypeDef *TIM_BDTRInitStruct)
 617:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 1870              		.loc 1 617 0
 1871              		.cfi_startproc
 1872 0000 80B5     		push	{r7, lr}
 1873              		.cfi_def_cfa_offset 8
 1874              		.cfi_offset 7, -8
 1875              		.cfi_offset 14, -4
 1876 0002 82B0     		sub	sp, sp, #8
 1877              		.cfi_def_cfa_offset 16
 1878 0004 00AF     		add	r7, sp, #0
 1879              		.cfi_def_cfa_register 7
 1880 0006 7860     		str	r0, [r7, #4]
 1881 0008 3960     		str	r1, [r7]
 618:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
 619:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
 1882              		.loc 1 619 0
 1883 000a 7A68     		ldr	r2, [r7, #4]
 1884 000c 514B     		ldr	r3, .L99
 1885 000e 9A42     		cmp	r2, r3
 1886 0010 11D0     		beq	.L92
 1887              		.loc 1 619 0 is_stmt 0 discriminator 1
 1888 0012 7A68     		ldr	r2, [r7, #4]
 1889 0014 504B     		ldr	r3, .L99+4
 1890 0016 9A42     		cmp	r2, r3
 1891 0018 0DD0     		beq	.L92
 1892 001a 7A68     		ldr	r2, [r7, #4]
 1893 001c 4F4B     		ldr	r3, .L99+8
 1894 001e 9A42     		cmp	r2, r3
 1895 0020 09D0     		beq	.L92
 1896 0022 7A68     		ldr	r2, [r7, #4]
 1897 0024 4E4B     		ldr	r3, .L99+12
 1898 0026 9A42     		cmp	r2, r3
 1899 0028 05D0     		beq	.L92
 1900 002a 4E4A     		ldr	r2, .L99+16
 1901 002c 4E4B     		ldr	r3, .L99+20
 1902 002e 101C     		mov	r0, r2
 1903 0030 191C     		mov	r1, r3
 1904 0032 FFF7FEFF 		bl	assert_failed
 1905              	.L92:
 620:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OSSR_STATE(TIM_BDTRInitStruct->TIM_OSSRState));
 1906              		.loc 1 620 0 is_stmt 1
 1907 0036 3B68     		ldr	r3, [r7]
 1908 0038 1A88     		ldrh	r2, [r3]
 1909 003a 8023     		mov	r3, #128
 1910 003c 1B01     		lsl	r3, r3, #4
 1911 003e 9A42     		cmp	r2, r3
 1912 0040 0AD0     		beq	.L93
 1913              		.loc 1 620 0 is_stmt 0 discriminator 1
 1914 0042 3B68     		ldr	r3, [r7]
 1915 0044 1B88     		ldrh	r3, [r3]
 1916 0046 002B     		cmp	r3, #0
 1917 0048 06D0     		beq	.L93
 1918 004a 464A     		ldr	r2, .L99+16
 1919 004c 9B23     		mov	r3, #155
 1920 004e 9B00     		lsl	r3, r3, #2
 1921 0050 101C     		mov	r0, r2
 1922 0052 191C     		mov	r1, r3
 1923 0054 FFF7FEFF 		bl	assert_failed
 1924              	.L93:
 621:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OSSI_STATE(TIM_BDTRInitStruct->TIM_OSSIState));
 1925              		.loc 1 621 0 is_stmt 1
 1926 0058 3B68     		ldr	r3, [r7]
 1927 005a 5A88     		ldrh	r2, [r3, #2]
 1928 005c 8023     		mov	r3, #128
 1929 005e DB00     		lsl	r3, r3, #3
 1930 0060 9A42     		cmp	r2, r3
 1931 0062 09D0     		beq	.L94
 1932              		.loc 1 621 0 is_stmt 0 discriminator 1
 1933 0064 3B68     		ldr	r3, [r7]
 1934 0066 5B88     		ldrh	r3, [r3, #2]
 1935 0068 002B     		cmp	r3, #0
 1936 006a 05D0     		beq	.L94
 1937 006c 3D4A     		ldr	r2, .L99+16
 1938 006e 3F4B     		ldr	r3, .L99+24
 1939 0070 101C     		mov	r0, r2
 1940 0072 191C     		mov	r1, r3
 1941 0074 FFF7FEFF 		bl	assert_failed
 1942              	.L94:
 622:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LOCK_LEVEL(TIM_BDTRInitStruct->TIM_LOCKLevel));
 1943              		.loc 1 622 0 is_stmt 1
 1944 0078 3B68     		ldr	r3, [r7]
 1945 007a 9B88     		ldrh	r3, [r3, #4]
 1946 007c 002B     		cmp	r3, #0
 1947 007e 17D0     		beq	.L95
 1948              		.loc 1 622 0 is_stmt 0 discriminator 1
 1949 0080 3B68     		ldr	r3, [r7]
 1950 0082 9A88     		ldrh	r2, [r3, #4]
 1951 0084 8023     		mov	r3, #128
 1952 0086 5B00     		lsl	r3, r3, #1
 1953 0088 9A42     		cmp	r2, r3
 1954 008a 11D0     		beq	.L95
 1955 008c 3B68     		ldr	r3, [r7]
 1956 008e 9A88     		ldrh	r2, [r3, #4]
 1957 0090 8023     		mov	r3, #128
 1958 0092 9B00     		lsl	r3, r3, #2
 1959 0094 9A42     		cmp	r2, r3
 1960 0096 0BD0     		beq	.L95
 1961 0098 3B68     		ldr	r3, [r7]
 1962 009a 9A88     		ldrh	r2, [r3, #4]
 1963 009c C023     		mov	r3, #192
 1964 009e 9B00     		lsl	r3, r3, #2
 1965 00a0 9A42     		cmp	r2, r3
 1966 00a2 05D0     		beq	.L95
 1967 00a4 2F4A     		ldr	r2, .L99+16
 1968 00a6 324B     		ldr	r3, .L99+28
 1969 00a8 101C     		mov	r0, r2
 1970 00aa 191C     		mov	r1, r3
 1971 00ac FFF7FEFF 		bl	assert_failed
 1972              	.L95:
 623:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_BREAK_STATE(TIM_BDTRInitStruct->TIM_Break));
 1973              		.loc 1 623 0 is_stmt 1
 1974 00b0 3B68     		ldr	r3, [r7]
 1975 00b2 1A89     		ldrh	r2, [r3, #8]
 1976 00b4 8023     		mov	r3, #128
 1977 00b6 5B01     		lsl	r3, r3, #5
 1978 00b8 9A42     		cmp	r2, r3
 1979 00ba 09D0     		beq	.L96
 1980              		.loc 1 623 0 is_stmt 0 discriminator 1
 1981 00bc 3B68     		ldr	r3, [r7]
 1982 00be 1B89     		ldrh	r3, [r3, #8]
 1983 00c0 002B     		cmp	r3, #0
 1984 00c2 05D0     		beq	.L96
 1985 00c4 274A     		ldr	r2, .L99+16
 1986 00c6 2B4B     		ldr	r3, .L99+32
 1987 00c8 101C     		mov	r0, r2
 1988 00ca 191C     		mov	r1, r3
 1989 00cc FFF7FEFF 		bl	assert_failed
 1990              	.L96:
 624:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_BREAK_POLARITY(TIM_BDTRInitStruct->TIM_BreakPolarity));
 1991              		.loc 1 624 0 is_stmt 1
 1992 00d0 3B68     		ldr	r3, [r7]
 1993 00d2 5B89     		ldrh	r3, [r3, #10]
 1994 00d4 002B     		cmp	r3, #0
 1995 00d6 0CD0     		beq	.L97
 1996              		.loc 1 624 0 is_stmt 0 discriminator 1
 1997 00d8 3B68     		ldr	r3, [r7]
 1998 00da 5A89     		ldrh	r2, [r3, #10]
 1999 00dc 8023     		mov	r3, #128
 2000 00de 9B01     		lsl	r3, r3, #6
 2001 00e0 9A42     		cmp	r2, r3
 2002 00e2 06D0     		beq	.L97
 2003 00e4 1F4A     		ldr	r2, .L99+16
 2004 00e6 9C23     		mov	r3, #156
 2005 00e8 9B00     		lsl	r3, r3, #2
 2006 00ea 101C     		mov	r0, r2
 2007 00ec 191C     		mov	r1, r3
 2008 00ee FFF7FEFF 		bl	assert_failed
 2009              	.L97:
 625:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(TIM_BDTRInitStruct->TIM_AutomaticOutput));
 2010              		.loc 1 625 0 is_stmt 1
 2011 00f2 3B68     		ldr	r3, [r7]
 2012 00f4 9A89     		ldrh	r2, [r3, #12]
 2013 00f6 8023     		mov	r3, #128
 2014 00f8 DB01     		lsl	r3, r3, #7
 2015 00fa 9A42     		cmp	r2, r3
 2016 00fc 09D0     		beq	.L98
 2017              		.loc 1 625 0 is_stmt 0 discriminator 1
 2018 00fe 3B68     		ldr	r3, [r7]
 2019 0100 9B89     		ldrh	r3, [r3, #12]
 2020 0102 002B     		cmp	r3, #0
 2021 0104 05D0     		beq	.L98
 2022 0106 174A     		ldr	r2, .L99+16
 2023 0108 1B4B     		ldr	r3, .L99+36
 2024 010a 101C     		mov	r0, r2
 2025 010c 191C     		mov	r1, r3
 2026 010e FFF7FEFF 		bl	assert_failed
 2027              	.L98:
 626:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the Lock level, the Break enable Bit and the Ploarity, the OSSR State,
 627:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****      the OSSI State, the dead time value and the Automatic Output Enable Bit */
 628:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 2028              		.loc 1 628 0 is_stmt 1
 2029 0112 3B68     		ldr	r3, [r7]
 2030 0114 1A88     		ldrh	r2, [r3]
 2031 0116 3B68     		ldr	r3, [r7]
 2032 0118 5B88     		ldrh	r3, [r3, #2]
 2033 011a 1343     		orr	r3, r2
 2034 011c 9AB2     		uxth	r2, r3
 629:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 2035              		.loc 1 629 0
 2036 011e 3B68     		ldr	r3, [r7]
 2037 0120 9B88     		ldrh	r3, [r3, #4]
 628:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 2038              		.loc 1 628 0
 2039 0122 1343     		orr	r3, r2
 2040 0124 9AB2     		uxth	r2, r3
 2041              		.loc 1 629 0
 2042 0126 3B68     		ldr	r3, [r7]
 2043 0128 DB88     		ldrh	r3, [r3, #6]
 628:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 2044              		.loc 1 628 0
 2045 012a 1343     		orr	r3, r2
 2046 012c 9AB2     		uxth	r2, r3
 630:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
 2047              		.loc 1 630 0
 2048 012e 3B68     		ldr	r3, [r7]
 2049 0130 1B89     		ldrh	r3, [r3, #8]
 628:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 2050              		.loc 1 628 0
 2051 0132 1343     		orr	r3, r2
 2052 0134 9AB2     		uxth	r2, r3
 2053              		.loc 1 630 0
 2054 0136 3B68     		ldr	r3, [r7]
 2055 0138 5B89     		ldrh	r3, [r3, #10]
 628:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 2056              		.loc 1 628 0
 2057 013a 1343     		orr	r3, r2
 2058 013c 9AB2     		uxth	r2, r3
 631:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              TIM_BDTRInitStruct->TIM_AutomaticOutput;
 2059              		.loc 1 631 0
 2060 013e 3B68     		ldr	r3, [r7]
 2061 0140 9B89     		ldrh	r3, [r3, #12]
 628:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 2062              		.loc 1 628 0
 2063 0142 1343     		orr	r3, r2
 2064 0144 99B2     		uxth	r1, r3
 2065 0146 7A68     		ldr	r2, [r7, #4]
 2066 0148 4423     		mov	r3, #68
 2067 014a D152     		strh	r1, [r2, r3]
 632:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 2068              		.loc 1 632 0
 2069 014c BD46     		mov	sp, r7
 2070 014e 02B0     		add	sp, sp, #8
 2071              		@ sp needed
 2072 0150 80BD     		pop	{r7, pc}
 2073              	.L100:
 2074 0152 C046     		.align	2
 2075              	.L99:
 2076 0154 002C0140 		.word	1073818624
 2077 0158 00400140 		.word	1073823744
 2078 015c 00440140 		.word	1073824768
 2079 0160 00480140 		.word	1073825792
 2080 0164 00000000 		.word	.LC0
 2081 0168 6B020000 		.word	619
 2082 016c 6D020000 		.word	621
 2083 0170 6E020000 		.word	622
 2084 0174 6F020000 		.word	623
 2085 0178 71020000 		.word	625
 2086              		.cfi_endproc
 2087              	.LFE47:
 2089              		.section	.text.TIM_BDTRStructInit,"ax",%progbits
 2090              		.align	2
 2091              		.global	TIM_BDTRStructInit
 2092              		.code	16
 2093              		.thumb_func
 2095              	TIM_BDTRStructInit:
 2096              	.LFB48:
 633:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 634:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
 635:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Fills each TIM_BDTRInitStruct member with its default value.
 636:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure which
 637:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   will be initialized.
 638:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
 639:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 640:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_BDTRStructInit(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct)
 641:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 2097              		.loc 1 641 0
 2098              		.cfi_startproc
 2099 0000 80B5     		push	{r7, lr}
 2100              		.cfi_def_cfa_offset 8
 2101              		.cfi_offset 7, -8
 2102              		.cfi_offset 14, -4
 2103 0002 82B0     		sub	sp, sp, #8
 2104              		.cfi_def_cfa_offset 16
 2105 0004 00AF     		add	r7, sp, #0
 2106              		.cfi_def_cfa_register 7
 2107 0006 7860     		str	r0, [r7, #4]
 642:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the default configuration */
 643:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSRState = TIM_OSSRState_Disable;
 2108              		.loc 1 643 0
 2109 0008 7B68     		ldr	r3, [r7, #4]
 2110 000a 0022     		mov	r2, #0
 2111 000c 1A80     		strh	r2, [r3]
 644:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
 2112              		.loc 1 644 0
 2113 000e 7B68     		ldr	r3, [r7, #4]
 2114 0010 0022     		mov	r2, #0
 2115 0012 5A80     		strh	r2, [r3, #2]
 645:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
 2116              		.loc 1 645 0
 2117 0014 7B68     		ldr	r3, [r7, #4]
 2118 0016 0022     		mov	r2, #0
 2119 0018 9A80     		strh	r2, [r3, #4]
 646:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
 2120              		.loc 1 646 0
 2121 001a 7B68     		ldr	r3, [r7, #4]
 2122 001c 0022     		mov	r2, #0
 2123 001e DA80     		strh	r2, [r3, #6]
 647:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
 2124              		.loc 1 647 0
 2125 0020 7B68     		ldr	r3, [r7, #4]
 2126 0022 0022     		mov	r2, #0
 2127 0024 1A81     		strh	r2, [r3, #8]
 648:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
 2128              		.loc 1 648 0
 2129 0026 7B68     		ldr	r3, [r7, #4]
 2130 0028 0022     		mov	r2, #0
 2131 002a 5A81     		strh	r2, [r3, #10]
 649:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
 2132              		.loc 1 649 0
 2133 002c 7B68     		ldr	r3, [r7, #4]
 2134 002e 0022     		mov	r2, #0
 2135 0030 9A81     		strh	r2, [r3, #12]
 650:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 2136              		.loc 1 650 0
 2137 0032 BD46     		mov	sp, r7
 2138 0034 02B0     		add	sp, sp, #8
 2139              		@ sp needed
 2140 0036 80BD     		pop	{r7, pc}
 2141              		.cfi_endproc
 2142              	.LFE48:
 2144              		.section	.text.TIM_CtrlPWMOutputs,"ax",%progbits
 2145              		.align	2
 2146              		.global	TIM_CtrlPWMOutputs
 2147              		.code	16
 2148              		.thumb_func
 2150              	TIM_CtrlPWMOutputs:
 2151              	.LFB49:
 651:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 652:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
 653:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Enables or disables the TIM peripheral Main Outputs.
 654:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 15, 16 or 17 to select the TIMx peripheral.
 655:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  NewState: new state of the TIM peripheral Main Outputs.
 656:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
 657:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
 658:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 659:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_CtrlPWMOutputs(TIM_TypeDef* TIMx, FunctionalState NewState)
 660:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 2152              		.loc 1 660 0
 2153              		.cfi_startproc
 2154 0000 80B5     		push	{r7, lr}
 2155              		.cfi_def_cfa_offset 8
 2156              		.cfi_offset 7, -8
 2157              		.cfi_offset 14, -4
 2158 0002 82B0     		sub	sp, sp, #8
 2159              		.cfi_def_cfa_offset 16
 2160 0004 00AF     		add	r7, sp, #0
 2161              		.cfi_def_cfa_register 7
 2162 0006 7860     		str	r0, [r7, #4]
 2163 0008 0A1C     		mov	r2, r1
 2164 000a FB1C     		add	r3, r7, #3
 2165 000c 1A70     		strb	r2, [r3]
 661:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
 662:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
 2166              		.loc 1 662 0
 2167 000e 7A68     		ldr	r2, [r7, #4]
 2168 0010 1F4B     		ldr	r3, .L107
 2169 0012 9A42     		cmp	r2, r3
 2170 0014 11D0     		beq	.L103
 2171              		.loc 1 662 0 is_stmt 0 discriminator 1
 2172 0016 7A68     		ldr	r2, [r7, #4]
 2173 0018 1E4B     		ldr	r3, .L107+4
 2174 001a 9A42     		cmp	r2, r3
 2175 001c 0DD0     		beq	.L103
 2176 001e 7A68     		ldr	r2, [r7, #4]
 2177 0020 1D4B     		ldr	r3, .L107+8
 2178 0022 9A42     		cmp	r2, r3
 2179 0024 09D0     		beq	.L103
 2180 0026 7A68     		ldr	r2, [r7, #4]
 2181 0028 1C4B     		ldr	r3, .L107+12
 2182 002a 9A42     		cmp	r2, r3
 2183 002c 05D0     		beq	.L103
 2184 002e 1C4A     		ldr	r2, .L107+16
 2185 0030 1C4B     		ldr	r3, .L107+20
 2186 0032 101C     		mov	r0, r2
 2187 0034 191C     		mov	r1, r3
 2188 0036 FFF7FEFF 		bl	assert_failed
 2189              	.L103:
 663:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2190              		.loc 1 663 0 is_stmt 1
 2191 003a FB1C     		add	r3, r7, #3
 2192 003c 1B78     		ldrb	r3, [r3]
 2193 003e 002B     		cmp	r3, #0
 2194 0040 09D0     		beq	.L104
 2195              		.loc 1 663 0 is_stmt 0 discriminator 1
 2196 0042 FB1C     		add	r3, r7, #3
 2197 0044 1B78     		ldrb	r3, [r3]
 2198 0046 012B     		cmp	r3, #1
 2199 0048 05D0     		beq	.L104
 2200 004a 154A     		ldr	r2, .L107+16
 2201 004c 164B     		ldr	r3, .L107+24
 2202 004e 101C     		mov	r0, r2
 2203 0050 191C     		mov	r1, r3
 2204 0052 FFF7FEFF 		bl	assert_failed
 2205              	.L104:
 664:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   if (NewState != DISABLE)
 2206              		.loc 1 664 0 is_stmt 1
 2207 0056 FB1C     		add	r3, r7, #3
 2208 0058 1B78     		ldrb	r3, [r3]
 2209 005a 002B     		cmp	r3, #0
 2210 005c 0AD0     		beq	.L105
 665:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
 666:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Enable the TIM Main Output */
 667:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIMx->BDTR |= TIM_BDTR_MOE;
 2211              		.loc 1 667 0
 2212 005e 7A68     		ldr	r2, [r7, #4]
 2213 0060 4423     		mov	r3, #68
 2214 0062 D35A     		ldrh	r3, [r2, r3]
 2215 0064 9BB2     		uxth	r3, r3
 2216 0066 114A     		ldr	r2, .L107+28
 2217 0068 1343     		orr	r3, r2
 2218 006a 99B2     		uxth	r1, r3
 2219 006c 7A68     		ldr	r2, [r7, #4]
 2220 006e 4423     		mov	r3, #68
 2221 0070 D152     		strh	r1, [r2, r3]
 2222 0072 09E0     		b	.L102
 2223              	.L105:
 668:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
 669:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   else
 670:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
 671:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Disable the TIM Main Output */
 672:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIMx->BDTR &= (uint16_t)(~((uint16_t)TIM_BDTR_MOE));
 2224              		.loc 1 672 0
 2225 0074 7A68     		ldr	r2, [r7, #4]
 2226 0076 4423     		mov	r3, #68
 2227 0078 D35A     		ldrh	r3, [r2, r3]
 2228 007a 9BB2     		uxth	r3, r3
 2229 007c 5B04     		lsl	r3, r3, #17
 2230 007e 5B0C     		lsr	r3, r3, #17
 2231 0080 99B2     		uxth	r1, r3
 2232 0082 7A68     		ldr	r2, [r7, #4]
 2233 0084 4423     		mov	r3, #68
 2234 0086 D152     		strh	r1, [r2, r3]
 2235              	.L102:
 673:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }  
 674:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 2236              		.loc 1 674 0
 2237 0088 BD46     		mov	sp, r7
 2238 008a 02B0     		add	sp, sp, #8
 2239              		@ sp needed
 2240 008c 80BD     		pop	{r7, pc}
 2241              	.L108:
 2242 008e C046     		.align	2
 2243              	.L107:
 2244 0090 002C0140 		.word	1073818624
 2245 0094 00400140 		.word	1073823744
 2246 0098 00440140 		.word	1073824768
 2247 009c 00480140 		.word	1073825792
 2248 00a0 00000000 		.word	.LC0
 2249 00a4 96020000 		.word	662
 2250 00a8 97020000 		.word	663
 2251 00ac 0080FFFF 		.word	-32768
 2252              		.cfi_endproc
 2253              	.LFE49:
 2255              		.section	.text.TIM_OC1Init,"ax",%progbits
 2256              		.align	2
 2257              		.global	TIM_OC1Init
 2258              		.code	16
 2259              		.thumb_func
 2261              	TIM_OC1Init:
 2262              	.LFB50:
 675:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 676:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
 677:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @}
 678:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 679:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 680:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /** @defgroup TIM_Group3 Output Compare management functions
 681:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  *  @brief    Output Compare management functions 
 682:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  *
 683:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** @verbatim
 684:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  ===============================================================================
 685:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                 ##### Output Compare management functions #####
 686:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  ===============================================================================
 687:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****         *** TIM Driver: how to use it in Output Compare Mode ***
 688:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  ===============================================================================
 689:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     [..] To use the Timer in Output Compare mode, the following steps are mandatory:
 690:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) Enable TIM clock using 
 691:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function.
 692:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) Configure the TIM pins by configuring the corresponding GPIO pins
 693:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) Configure the Time base unit as described in the first part of this 
 694:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              driver, if needed, else the Timer will run with the default 
 695:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              configuration:
 696:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Autoreload value = 0xFFFF.
 697:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Prescaler value = 0x0000.
 698:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Counter mode = Up counting.
 699:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Clock Division = TIM_CKD_DIV1.
 700:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) Fill the TIM_OCInitStruct with the desired parameters including:
 701:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) The TIM Output Compare mode: TIM_OCMode.
 702:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) TIM Output State: TIM_OutputState.
 703:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) TIM Pulse value: TIM_Pulse.
 704:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) TIM Output Compare Polarity : TIM_OCPolarity.
 705:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) Call TIM_OCxInit(TIMx, &TIM_OCInitStruct) to configure the desired 
 706:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              channel with the corresponding configuration.
 707:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 708:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     [..]
 709:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****         (@) All other functions can be used separately to modify, if needed,
 710:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****           a specific feature of the Timer.
 711:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****         (@) In case of PWM mode, this function is mandatory:
 712:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****             TIM_OCxPreloadConfig(TIMx, TIM_OCPreload_ENABLE).
 713:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****         (@) If the corresponding interrupt or DMA request are needed, the user should:
 714:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****             (#@) Enable the NVIC (or the DMA) to use the TIM interrupts (or DMA requests).
 715:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****             (#@) Enable the corresponding interrupt (or DMA request) using the function
 716:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                  TIM_ITConfig(TIMx, TIM_IT_CCx) (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx)).
 717:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 718:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** @endverbatim
 719:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @{
 720:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 721:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 722:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
 723:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Initializes the TIMx Channel1 according to the specified
 724:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         parameters in the TIM_OCInitStruct.
 725:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 14, 15, 16 and 17 to select the TIM peripheral.
 726:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure
 727:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         that contains the configuration information for the specified TIM 
 728:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         peripheral.
 729:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
 730:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 731:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 732:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 2263              		.loc 1 732 0
 2264              		.cfi_startproc
 2265 0000 80B5     		push	{r7, lr}
 2266              		.cfi_def_cfa_offset 8
 2267              		.cfi_offset 7, -8
 2268              		.cfi_offset 14, -4
 2269 0002 84B0     		sub	sp, sp, #16
 2270              		.cfi_def_cfa_offset 24
 2271 0004 00AF     		add	r7, sp, #0
 2272              		.cfi_def_cfa_register 7
 2273 0006 7860     		str	r0, [r7, #4]
 2274 0008 3960     		str	r1, [r7]
 733:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 2275              		.loc 1 733 0
 2276 000a 3B1C     		mov	r3, r7
 2277 000c 0A33     		add	r3, r3, #10
 2278 000e 0022     		mov	r2, #0
 2279 0010 1A80     		strh	r2, [r3]
 2280 0012 3B1C     		mov	r3, r7
 2281 0014 0E33     		add	r3, r3, #14
 2282 0016 0022     		mov	r2, #0
 2283 0018 1A80     		strh	r2, [r3]
 2284 001a 3B1C     		mov	r3, r7
 2285 001c 0C33     		add	r3, r3, #12
 2286 001e 0022     		mov	r2, #0
 2287 0020 1A80     		strh	r2, [r3]
 734:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****    
 735:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
 736:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
 2288              		.loc 1 736 0
 2289 0022 7A68     		ldr	r2, [r7, #4]
 2290 0024 A74B     		ldr	r3, .L120
 2291 0026 9A42     		cmp	r2, r3
 2292 0028 1FD0     		beq	.L110
 2293              		.loc 1 736 0 is_stmt 0 discriminator 1
 2294 002a 7A68     		ldr	r2, [r7, #4]
 2295 002c 8023     		mov	r3, #128
 2296 002e DB05     		lsl	r3, r3, #23
 2297 0030 9A42     		cmp	r2, r3
 2298 0032 1AD0     		beq	.L110
 2299 0034 7A68     		ldr	r2, [r7, #4]
 2300 0036 A44B     		ldr	r3, .L120+4
 2301 0038 9A42     		cmp	r2, r3
 2302 003a 16D0     		beq	.L110
 2303 003c 7A68     		ldr	r2, [r7, #4]
 2304 003e A34B     		ldr	r3, .L120+8
 2305 0040 9A42     		cmp	r2, r3
 2306 0042 12D0     		beq	.L110
 2307 0044 7A68     		ldr	r2, [r7, #4]
 2308 0046 A24B     		ldr	r3, .L120+12
 2309 0048 9A42     		cmp	r2, r3
 2310 004a 0ED0     		beq	.L110
 2311 004c 7A68     		ldr	r2, [r7, #4]
 2312 004e A14B     		ldr	r3, .L120+16
 2313 0050 9A42     		cmp	r2, r3
 2314 0052 0AD0     		beq	.L110
 2315 0054 7A68     		ldr	r2, [r7, #4]
 2316 0056 A04B     		ldr	r3, .L120+20
 2317 0058 9A42     		cmp	r2, r3
 2318 005a 06D0     		beq	.L110
 2319 005c 9F4A     		ldr	r2, .L120+24
 2320 005e B823     		mov	r3, #184
 2321 0060 9B00     		lsl	r3, r3, #2
 2322 0062 101C     		mov	r0, r2
 2323 0064 191C     		mov	r1, r3
 2324 0066 FFF7FEFF 		bl	assert_failed
 2325              	.L110:
 737:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 2326              		.loc 1 737 0 is_stmt 1
 2327 006a 3B68     		ldr	r3, [r7]
 2328 006c 1B88     		ldrh	r3, [r3]
 2329 006e 002B     		cmp	r3, #0
 2330 0070 19D0     		beq	.L111
 2331              		.loc 1 737 0 is_stmt 0 discriminator 1
 2332 0072 3B68     		ldr	r3, [r7]
 2333 0074 1B88     		ldrh	r3, [r3]
 2334 0076 102B     		cmp	r3, #16
 2335 0078 15D0     		beq	.L111
 2336 007a 3B68     		ldr	r3, [r7]
 2337 007c 1B88     		ldrh	r3, [r3]
 2338 007e 202B     		cmp	r3, #32
 2339 0080 11D0     		beq	.L111
 2340 0082 3B68     		ldr	r3, [r7]
 2341 0084 1B88     		ldrh	r3, [r3]
 2342 0086 302B     		cmp	r3, #48
 2343 0088 0DD0     		beq	.L111
 2344 008a 3B68     		ldr	r3, [r7]
 2345 008c 1B88     		ldrh	r3, [r3]
 2346 008e 602B     		cmp	r3, #96
 2347 0090 09D0     		beq	.L111
 2348 0092 3B68     		ldr	r3, [r7]
 2349 0094 1B88     		ldrh	r3, [r3]
 2350 0096 702B     		cmp	r3, #112
 2351 0098 05D0     		beq	.L111
 2352 009a 904A     		ldr	r2, .L120+24
 2353 009c 904B     		ldr	r3, .L120+28
 2354 009e 101C     		mov	r0, r2
 2355 00a0 191C     		mov	r1, r3
 2356 00a2 FFF7FEFF 		bl	assert_failed
 2357              	.L111:
 738:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 2358              		.loc 1 738 0 is_stmt 1
 2359 00a6 3B68     		ldr	r3, [r7]
 2360 00a8 5B88     		ldrh	r3, [r3, #2]
 2361 00aa 002B     		cmp	r3, #0
 2362 00ac 09D0     		beq	.L112
 2363              		.loc 1 738 0 is_stmt 0 discriminator 1
 2364 00ae 3B68     		ldr	r3, [r7]
 2365 00b0 5B88     		ldrh	r3, [r3, #2]
 2366 00b2 012B     		cmp	r3, #1
 2367 00b4 05D0     		beq	.L112
 2368 00b6 894A     		ldr	r2, .L120+24
 2369 00b8 8A4B     		ldr	r3, .L120+32
 2370 00ba 101C     		mov	r0, r2
 2371 00bc 191C     		mov	r1, r3
 2372 00be FFF7FEFF 		bl	assert_failed
 2373              	.L112:
 739:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 2374              		.loc 1 739 0 is_stmt 1
 2375 00c2 3B68     		ldr	r3, [r7]
 2376 00c4 9B89     		ldrh	r3, [r3, #12]
 2377 00c6 002B     		cmp	r3, #0
 2378 00c8 09D0     		beq	.L113
 2379              		.loc 1 739 0 is_stmt 0 discriminator 1
 2380 00ca 3B68     		ldr	r3, [r7]
 2381 00cc 9B89     		ldrh	r3, [r3, #12]
 2382 00ce 022B     		cmp	r3, #2
 2383 00d0 05D0     		beq	.L113
 2384 00d2 824A     		ldr	r2, .L120+24
 2385 00d4 844B     		ldr	r3, .L120+36
 2386 00d6 101C     		mov	r0, r2
 2387 00d8 191C     		mov	r1, r3
 2388 00da FFF7FEFF 		bl	assert_failed
 2389              	.L113:
 740:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  /* Disable the Channel 1: Reset the CC1E Bit */
 741:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCER &= (uint16_t)(~(uint16_t)TIM_CCER_CC1E);
 2390              		.loc 1 741 0 is_stmt 1
 2391 00de 7B68     		ldr	r3, [r7, #4]
 2392 00e0 1B8C     		ldrh	r3, [r3, #32]
 2393 00e2 9BB2     		uxth	r3, r3
 2394 00e4 0122     		mov	r2, #1
 2395 00e6 9343     		bic	r3, r2
 2396 00e8 9AB2     		uxth	r2, r3
 2397 00ea 7B68     		ldr	r3, [r7, #4]
 2398 00ec 1A84     		strh	r2, [r3, #32]
 742:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Get the TIMx CCER register value */
 743:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer = TIMx->CCER;
 2399              		.loc 1 743 0
 2400 00ee 3B1C     		mov	r3, r7
 2401 00f0 0E33     		add	r3, r3, #14
 2402 00f2 7A68     		ldr	r2, [r7, #4]
 2403 00f4 128C     		ldrh	r2, [r2, #32]
 2404 00f6 1A80     		strh	r2, [r3]
 744:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Get the TIMx CR2 register value */
 745:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 2405              		.loc 1 745 0
 2406 00f8 3B1C     		mov	r3, r7
 2407 00fa 0C33     		add	r3, r3, #12
 2408 00fc 7A68     		ldr	r2, [r7, #4]
 2409 00fe 9288     		ldrh	r2, [r2, #4]
 2410 0100 1A80     		strh	r2, [r3]
 746:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 747:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 748:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 2411              		.loc 1 748 0
 2412 0102 3B1C     		mov	r3, r7
 2413 0104 0A33     		add	r3, r3, #10
 2414 0106 7A68     		ldr	r2, [r7, #4]
 2415 0108 128B     		ldrh	r2, [r2, #24]
 2416 010a 1A80     		strh	r2, [r3]
 749:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     
 750:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the Output Compare Mode Bits */
 751:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_OC1M));
 2417              		.loc 1 751 0
 2418 010c 3B1C     		mov	r3, r7
 2419 010e 0A33     		add	r3, r3, #10
 2420 0110 3A1C     		mov	r2, r7
 2421 0112 0A32     		add	r2, r2, #10
 2422 0114 1288     		ldrh	r2, [r2]
 2423 0116 7021     		mov	r1, #112
 2424 0118 8A43     		bic	r2, r1
 2425 011a 1A80     		strh	r2, [r3]
 752:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_CC1S));
 2426              		.loc 1 752 0
 2427 011c 3B1C     		mov	r3, r7
 2428 011e 0A33     		add	r3, r3, #10
 2429 0120 3A1C     		mov	r2, r7
 2430 0122 0A32     		add	r2, r2, #10
 2431 0124 1288     		ldrh	r2, [r2]
 2432 0126 0321     		mov	r1, #3
 2433 0128 8A43     		bic	r2, r1
 2434 012a 1A80     		strh	r2, [r3]
 753:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 754:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Select the Output Compare Mode */
 755:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 2435              		.loc 1 755 0
 2436 012c 3B68     		ldr	r3, [r7]
 2437 012e 1988     		ldrh	r1, [r3]
 2438 0130 3B1C     		mov	r3, r7
 2439 0132 0A33     		add	r3, r3, #10
 2440 0134 3A1C     		mov	r2, r7
 2441 0136 0A32     		add	r2, r2, #10
 2442 0138 1288     		ldrh	r2, [r2]
 2443 013a 0A43     		orr	r2, r1
 2444 013c 1A80     		strh	r2, [r3]
 756:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 757:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the Output Polarity level */
 758:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC1P));
 2445              		.loc 1 758 0
 2446 013e 3B1C     		mov	r3, r7
 2447 0140 0E33     		add	r3, r3, #14
 2448 0142 3A1C     		mov	r2, r7
 2449 0144 0E32     		add	r2, r2, #14
 2450 0146 1288     		ldrh	r2, [r2]
 2451 0148 0221     		mov	r1, #2
 2452 014a 8A43     		bic	r2, r1
 2453 014c 1A80     		strh	r2, [r3]
 759:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the Output Compare Polarity */
 760:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
 2454              		.loc 1 760 0
 2455 014e 3B68     		ldr	r3, [r7]
 2456 0150 9989     		ldrh	r1, [r3, #12]
 2457 0152 3B1C     		mov	r3, r7
 2458 0154 0E33     		add	r3, r3, #14
 2459 0156 3A1C     		mov	r2, r7
 2460 0158 0E32     		add	r2, r2, #14
 2461 015a 1288     		ldrh	r2, [r2]
 2462 015c 0A43     		orr	r2, r1
 2463 015e 1A80     		strh	r2, [r3]
 761:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 762:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the Output State */
 763:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OutputState;
 2464              		.loc 1 763 0
 2465 0160 3B68     		ldr	r3, [r7]
 2466 0162 5988     		ldrh	r1, [r3, #2]
 2467 0164 3B1C     		mov	r3, r7
 2468 0166 0E33     		add	r3, r3, #14
 2469 0168 3A1C     		mov	r2, r7
 2470 016a 0E32     		add	r2, r2, #14
 2471 016c 1288     		ldrh	r2, [r2]
 2472 016e 0A43     		orr	r2, r1
 2473 0170 1A80     		strh	r2, [r3]
 764:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     
 765:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM15) || (TIMx == TIM16) || (TIMx == TIM17))
 2474              		.loc 1 765 0
 2475 0172 7A68     		ldr	r2, [r7, #4]
 2476 0174 534B     		ldr	r3, .L120
 2477 0176 9A42     		cmp	r2, r3
 2478 0178 0CD0     		beq	.L114
 2479              		.loc 1 765 0 is_stmt 0 discriminator 1
 2480 017a 7A68     		ldr	r2, [r7, #4]
 2481 017c 544B     		ldr	r3, .L120+12
 2482 017e 9A42     		cmp	r2, r3
 2483 0180 08D0     		beq	.L114
 2484 0182 7A68     		ldr	r2, [r7, #4]
 2485 0184 534B     		ldr	r3, .L120+16
 2486 0186 9A42     		cmp	r2, r3
 2487 0188 04D0     		beq	.L114
 2488 018a 7A68     		ldr	r2, [r7, #4]
 2489 018c 524B     		ldr	r3, .L120+20
 2490 018e 9A42     		cmp	r2, r3
 2491 0190 00D0     		beq	.LCB2298
 2492 0192 80E0     		b	.L115	@long jump
 2493              	.LCB2298:
 2494              	.L114:
 766:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
 767:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 2495              		.loc 1 767 0 is_stmt 1
 2496 0194 3B68     		ldr	r3, [r7]
 2497 0196 9B88     		ldrh	r3, [r3, #4]
 2498 0198 002B     		cmp	r3, #0
 2499 019a 09D0     		beq	.L116
 2500              		.loc 1 767 0 is_stmt 0 discriminator 1
 2501 019c 3B68     		ldr	r3, [r7]
 2502 019e 9B88     		ldrh	r3, [r3, #4]
 2503 01a0 042B     		cmp	r3, #4
 2504 01a2 05D0     		beq	.L116
 2505 01a4 4D4A     		ldr	r2, .L120+24
 2506 01a6 514B     		ldr	r3, .L120+40
 2507 01a8 101C     		mov	r0, r2
 2508 01aa 191C     		mov	r1, r3
 2509 01ac FFF7FEFF 		bl	assert_failed
 2510              	.L116:
 768:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 2511              		.loc 1 768 0 is_stmt 1
 2512 01b0 3B68     		ldr	r3, [r7]
 2513 01b2 DB89     		ldrh	r3, [r3, #14]
 2514 01b4 002B     		cmp	r3, #0
 2515 01b6 0AD0     		beq	.L117
 2516              		.loc 1 768 0 is_stmt 0 discriminator 1
 2517 01b8 3B68     		ldr	r3, [r7]
 2518 01ba DB89     		ldrh	r3, [r3, #14]
 2519 01bc 082B     		cmp	r3, #8
 2520 01be 06D0     		beq	.L117
 2521 01c0 464A     		ldr	r2, .L120+24
 2522 01c2 C023     		mov	r3, #192
 2523 01c4 9B00     		lsl	r3, r3, #2
 2524 01c6 101C     		mov	r0, r2
 2525 01c8 191C     		mov	r1, r3
 2526 01ca FFF7FEFF 		bl	assert_failed
 2527              	.L117:
 769:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 2528              		.loc 1 769 0 is_stmt 1
 2529 01ce 3B68     		ldr	r3, [r7]
 2530 01d0 5A8A     		ldrh	r2, [r3, #18]
 2531 01d2 8023     		mov	r3, #128
 2532 01d4 9B00     		lsl	r3, r3, #2
 2533 01d6 9A42     		cmp	r2, r3
 2534 01d8 09D0     		beq	.L118
 2535              		.loc 1 769 0 is_stmt 0 discriminator 1
 2536 01da 3B68     		ldr	r3, [r7]
 2537 01dc 5B8A     		ldrh	r3, [r3, #18]
 2538 01de 002B     		cmp	r3, #0
 2539 01e0 05D0     		beq	.L118
 2540 01e2 3E4A     		ldr	r2, .L120+24
 2541 01e4 424B     		ldr	r3, .L120+44
 2542 01e6 101C     		mov	r0, r2
 2543 01e8 191C     		mov	r1, r3
 2544 01ea FFF7FEFF 		bl	assert_failed
 2545              	.L118:
 770:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 2546              		.loc 1 770 0 is_stmt 1
 2547 01ee 3B68     		ldr	r3, [r7]
 2548 01f0 1A8A     		ldrh	r2, [r3, #16]
 2549 01f2 8023     		mov	r3, #128
 2550 01f4 5B00     		lsl	r3, r3, #1
 2551 01f6 9A42     		cmp	r2, r3
 2552 01f8 09D0     		beq	.L119
 2553              		.loc 1 770 0 is_stmt 0 discriminator 1
 2554 01fa 3B68     		ldr	r3, [r7]
 2555 01fc 1B8A     		ldrh	r3, [r3, #16]
 2556 01fe 002B     		cmp	r3, #0
 2557 0200 05D0     		beq	.L119
 2558 0202 364A     		ldr	r2, .L120+24
 2559 0204 3B4B     		ldr	r3, .L120+48
 2560 0206 101C     		mov	r0, r2
 2561 0208 191C     		mov	r1, r3
 2562 020a FFF7FEFF 		bl	assert_failed
 2563              	.L119:
 771:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     
 772:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Reset the Output N Polarity level */
 773:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC1NP));
 2564              		.loc 1 773 0 is_stmt 1
 2565 020e 3B1C     		mov	r3, r7
 2566 0210 0E33     		add	r3, r3, #14
 2567 0212 3A1C     		mov	r2, r7
 2568 0214 0E32     		add	r2, r2, #14
 2569 0216 1288     		ldrh	r2, [r2]
 2570 0218 0821     		mov	r1, #8
 2571 021a 8A43     		bic	r2, r1
 2572 021c 1A80     		strh	r2, [r3]
 774:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the Output N Polarity */
 775:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OCNPolarity;
 2573              		.loc 1 775 0
 2574 021e 3B68     		ldr	r3, [r7]
 2575 0220 D989     		ldrh	r1, [r3, #14]
 2576 0222 3B1C     		mov	r3, r7
 2577 0224 0E33     		add	r3, r3, #14
 2578 0226 3A1C     		mov	r2, r7
 2579 0228 0E32     		add	r2, r2, #14
 2580 022a 1288     		ldrh	r2, [r2]
 2581 022c 0A43     		orr	r2, r1
 2582 022e 1A80     		strh	r2, [r3]
 776:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     
 777:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Reset the Output N State */
 778:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC1NE));    
 2583              		.loc 1 778 0
 2584 0230 3B1C     		mov	r3, r7
 2585 0232 0E33     		add	r3, r3, #14
 2586 0234 3A1C     		mov	r2, r7
 2587 0236 0E32     		add	r2, r2, #14
 2588 0238 1288     		ldrh	r2, [r2]
 2589 023a 0421     		mov	r1, #4
 2590 023c 8A43     		bic	r2, r1
 2591 023e 1A80     		strh	r2, [r3]
 779:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the Output N State */
 780:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OutputNState;
 2592              		.loc 1 780 0
 2593 0240 3B68     		ldr	r3, [r7]
 2594 0242 9988     		ldrh	r1, [r3, #4]
 2595 0244 3B1C     		mov	r3, r7
 2596 0246 0E33     		add	r3, r3, #14
 2597 0248 3A1C     		mov	r2, r7
 2598 024a 0E32     		add	r2, r2, #14
 2599 024c 1288     		ldrh	r2, [r2]
 2600 024e 0A43     		orr	r2, r1
 2601 0250 1A80     		strh	r2, [r3]
 781:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     
 782:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Reset the Ouput Compare and Output Compare N IDLE State */
 783:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS1));
 2602              		.loc 1 783 0
 2603 0252 3B1C     		mov	r3, r7
 2604 0254 0C33     		add	r3, r3, #12
 2605 0256 3A1C     		mov	r2, r7
 2606 0258 0C32     		add	r2, r2, #12
 2607 025a 1188     		ldrh	r1, [r2]
 2608 025c 264A     		ldr	r2, .L120+52
 2609 025e 0A40     		and	r2, r1
 2610 0260 1A80     		strh	r2, [r3]
 784:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS1N));
 2611              		.loc 1 784 0
 2612 0262 3B1C     		mov	r3, r7
 2613 0264 0C33     		add	r3, r3, #12
 2614 0266 3A1C     		mov	r2, r7
 2615 0268 0C32     		add	r2, r2, #12
 2616 026a 1188     		ldrh	r1, [r2]
 2617 026c 234A     		ldr	r2, .L120+56
 2618 026e 0A40     		and	r2, r1
 2619 0270 1A80     		strh	r2, [r3]
 785:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     
 786:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the Output Idle state */
 787:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
 2620              		.loc 1 787 0
 2621 0272 3B68     		ldr	r3, [r7]
 2622 0274 198A     		ldrh	r1, [r3, #16]
 2623 0276 3B1C     		mov	r3, r7
 2624 0278 0C33     		add	r3, r3, #12
 2625 027a 3A1C     		mov	r2, r7
 2626 027c 0C32     		add	r2, r2, #12
 2627 027e 1288     		ldrh	r2, [r2]
 2628 0280 0A43     		orr	r2, r1
 2629 0282 1A80     		strh	r2, [r3]
 788:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the Output N Idle state */
 789:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCNIdleState;
 2630              		.loc 1 789 0
 2631 0284 3B68     		ldr	r3, [r7]
 2632 0286 598A     		ldrh	r1, [r3, #18]
 2633 0288 3B1C     		mov	r3, r7
 2634 028a 0C33     		add	r3, r3, #12
 2635 028c 3A1C     		mov	r2, r7
 2636 028e 0C32     		add	r2, r2, #12
 2637 0290 1288     		ldrh	r2, [r2]
 2638 0292 0A43     		orr	r2, r1
 2639 0294 1A80     		strh	r2, [r3]
 2640              	.L115:
 790:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
 791:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CR2 */
 792:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CR2 = tmpcr2;
 2641              		.loc 1 792 0
 2642 0296 7B68     		ldr	r3, [r7, #4]
 2643 0298 3A1C     		mov	r2, r7
 2644 029a 0C32     		add	r2, r2, #12
 2645 029c 1288     		ldrh	r2, [r2]
 2646 029e 9A80     		strh	r2, [r3, #4]
 793:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 794:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCMR1 */
 795:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 2647              		.loc 1 795 0
 2648 02a0 7B68     		ldr	r3, [r7, #4]
 2649 02a2 3A1C     		mov	r2, r7
 2650 02a4 0A32     		add	r2, r2, #10
 2651 02a6 1288     		ldrh	r2, [r2]
 2652 02a8 1A83     		strh	r2, [r3, #24]
 796:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 797:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the Capture Compare Register value */
 798:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse; 
 2653              		.loc 1 798 0
 2654 02aa 3B68     		ldr	r3, [r7]
 2655 02ac 9A68     		ldr	r2, [r3, #8]
 2656 02ae 7B68     		ldr	r3, [r7, #4]
 2657 02b0 5A63     		str	r2, [r3, #52]
 799:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  
 800:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCER */
 801:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCER = tmpccer;
 2658              		.loc 1 801 0
 2659 02b2 7B68     		ldr	r3, [r7, #4]
 2660 02b4 3A1C     		mov	r2, r7
 2661 02b6 0E32     		add	r2, r2, #14
 2662 02b8 1288     		ldrh	r2, [r2]
 2663 02ba 1A84     		strh	r2, [r3, #32]
 802:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 2664              		.loc 1 802 0
 2665 02bc BD46     		mov	sp, r7
 2666 02be 04B0     		add	sp, sp, #16
 2667              		@ sp needed
 2668 02c0 80BD     		pop	{r7, pc}
 2669              	.L121:
 2670 02c2 C046     		.align	2
 2671              	.L120:
 2672 02c4 002C0140 		.word	1073818624
 2673 02c8 00040040 		.word	1073742848
 2674 02cc 00200040 		.word	1073750016
 2675 02d0 00400140 		.word	1073823744
 2676 02d4 00440140 		.word	1073824768
 2677 02d8 00480140 		.word	1073825792
 2678 02dc 00000000 		.word	.LC0
 2679 02e0 E1020000 		.word	737
 2680 02e4 E2020000 		.word	738
 2681 02e8 E3020000 		.word	739
 2682 02ec FF020000 		.word	767
 2683 02f0 01030000 		.word	769
 2684 02f4 02030000 		.word	770
 2685 02f8 FFFEFFFF 		.word	-257
 2686 02fc FFFDFFFF 		.word	-513
 2687              		.cfi_endproc
 2688              	.LFE50:
 2690              		.section	.text.TIM_OC2Init,"ax",%progbits
 2691              		.align	2
 2692              		.global	TIM_OC2Init
 2693              		.code	16
 2694              		.thumb_func
 2696              	TIM_OC2Init:
 2697              	.LFB51:
 803:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 804:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
 805:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Initializes the TIMx Channel2 according to the specified
 806:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         parameters in the TIM_OCInitStruct.
 807:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3 or 15 to select the TIM peripheral.
 808:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure
 809:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         that contains the configuration information for the specified TIM 
 810:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         peripheral.
 811:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
 812:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 813:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 814:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 2698              		.loc 1 814 0
 2699              		.cfi_startproc
 2700 0000 80B5     		push	{r7, lr}
 2701              		.cfi_def_cfa_offset 8
 2702              		.cfi_offset 7, -8
 2703              		.cfi_offset 14, -4
 2704 0002 84B0     		sub	sp, sp, #16
 2705              		.cfi_def_cfa_offset 24
 2706 0004 00AF     		add	r7, sp, #0
 2707              		.cfi_def_cfa_register 7
 2708 0006 7860     		str	r0, [r7, #4]
 2709 0008 3960     		str	r1, [r7]
 815:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 2710              		.loc 1 815 0
 2711 000a 3B1C     		mov	r3, r7
 2712 000c 0A33     		add	r3, r3, #10
 2713 000e 0022     		mov	r2, #0
 2714 0010 1A80     		strh	r2, [r3]
 2715 0012 3B1C     		mov	r3, r7
 2716 0014 0E33     		add	r3, r3, #14
 2717 0016 0022     		mov	r2, #0
 2718 0018 1A80     		strh	r2, [r3]
 2719 001a 3B1C     		mov	r3, r7
 2720 001c 0C33     		add	r3, r3, #12
 2721 001e 0022     		mov	r2, #0
 2722 0020 1A80     		strh	r2, [r3]
 816:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****    
 817:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
 818:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx)); 
 2723              		.loc 1 818 0
 2724 0022 7A68     		ldr	r2, [r7, #4]
 2725 0024 A24B     		ldr	r3, .L132
 2726 0026 9A42     		cmp	r2, r3
 2727 0028 12D0     		beq	.L123
 2728              		.loc 1 818 0 is_stmt 0 discriminator 1
 2729 002a 7A68     		ldr	r2, [r7, #4]
 2730 002c 8023     		mov	r3, #128
 2731 002e DB05     		lsl	r3, r3, #23
 2732 0030 9A42     		cmp	r2, r3
 2733 0032 0DD0     		beq	.L123
 2734 0034 7A68     		ldr	r2, [r7, #4]
 2735 0036 9F4B     		ldr	r3, .L132+4
 2736 0038 9A42     		cmp	r2, r3
 2737 003a 09D0     		beq	.L123
 2738 003c 7A68     		ldr	r2, [r7, #4]
 2739 003e 9E4B     		ldr	r3, .L132+8
 2740 0040 9A42     		cmp	r2, r3
 2741 0042 05D0     		beq	.L123
 2742 0044 9D4A     		ldr	r2, .L132+12
 2743 0046 9E4B     		ldr	r3, .L132+16
 2744 0048 101C     		mov	r0, r2
 2745 004a 191C     		mov	r1, r3
 2746 004c FFF7FEFF 		bl	assert_failed
 2747              	.L123:
 819:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 2748              		.loc 1 819 0 is_stmt 1
 2749 0050 3B68     		ldr	r3, [r7]
 2750 0052 1B88     		ldrh	r3, [r3]
 2751 0054 002B     		cmp	r3, #0
 2752 0056 19D0     		beq	.L124
 2753              		.loc 1 819 0 is_stmt 0 discriminator 1
 2754 0058 3B68     		ldr	r3, [r7]
 2755 005a 1B88     		ldrh	r3, [r3]
 2756 005c 102B     		cmp	r3, #16
 2757 005e 15D0     		beq	.L124
 2758 0060 3B68     		ldr	r3, [r7]
 2759 0062 1B88     		ldrh	r3, [r3]
 2760 0064 202B     		cmp	r3, #32
 2761 0066 11D0     		beq	.L124
 2762 0068 3B68     		ldr	r3, [r7]
 2763 006a 1B88     		ldrh	r3, [r3]
 2764 006c 302B     		cmp	r3, #48
 2765 006e 0DD0     		beq	.L124
 2766 0070 3B68     		ldr	r3, [r7]
 2767 0072 1B88     		ldrh	r3, [r3]
 2768 0074 602B     		cmp	r3, #96
 2769 0076 09D0     		beq	.L124
 2770 0078 3B68     		ldr	r3, [r7]
 2771 007a 1B88     		ldrh	r3, [r3]
 2772 007c 702B     		cmp	r3, #112
 2773 007e 05D0     		beq	.L124
 2774 0080 8E4A     		ldr	r2, .L132+12
 2775 0082 904B     		ldr	r3, .L132+20
 2776 0084 101C     		mov	r0, r2
 2777 0086 191C     		mov	r1, r3
 2778 0088 FFF7FEFF 		bl	assert_failed
 2779              	.L124:
 820:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 2780              		.loc 1 820 0 is_stmt 1
 2781 008c 3B68     		ldr	r3, [r7]
 2782 008e 5B88     		ldrh	r3, [r3, #2]
 2783 0090 002B     		cmp	r3, #0
 2784 0092 0AD0     		beq	.L125
 2785              		.loc 1 820 0 is_stmt 0 discriminator 1
 2786 0094 3B68     		ldr	r3, [r7]
 2787 0096 5B88     		ldrh	r3, [r3, #2]
 2788 0098 012B     		cmp	r3, #1
 2789 009a 06D0     		beq	.L125
 2790 009c 874A     		ldr	r2, .L132+12
 2791 009e CD23     		mov	r3, #205
 2792 00a0 9B00     		lsl	r3, r3, #2
 2793 00a2 101C     		mov	r0, r2
 2794 00a4 191C     		mov	r1, r3
 2795 00a6 FFF7FEFF 		bl	assert_failed
 2796              	.L125:
 821:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 2797              		.loc 1 821 0 is_stmt 1
 2798 00aa 3B68     		ldr	r3, [r7]
 2799 00ac 9B89     		ldrh	r3, [r3, #12]
 2800 00ae 002B     		cmp	r3, #0
 2801 00b0 09D0     		beq	.L126
 2802              		.loc 1 821 0 is_stmt 0 discriminator 1
 2803 00b2 3B68     		ldr	r3, [r7]
 2804 00b4 9B89     		ldrh	r3, [r3, #12]
 2805 00b6 022B     		cmp	r3, #2
 2806 00b8 05D0     		beq	.L126
 2807 00ba 804A     		ldr	r2, .L132+12
 2808 00bc 824B     		ldr	r3, .L132+24
 2809 00be 101C     		mov	r0, r2
 2810 00c0 191C     		mov	r1, r3
 2811 00c2 FFF7FEFF 		bl	assert_failed
 2812              	.L126:
 822:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****    /* Disable the Channel 2: Reset the CC2E Bit */
 823:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCER &= (uint16_t)(~((uint16_t)TIM_CCER_CC2E));
 2813              		.loc 1 823 0 is_stmt 1
 2814 00c6 7B68     		ldr	r3, [r7, #4]
 2815 00c8 1B8C     		ldrh	r3, [r3, #32]
 2816 00ca 9BB2     		uxth	r3, r3
 2817 00cc 1022     		mov	r2, #16
 2818 00ce 9343     		bic	r3, r2
 2819 00d0 9AB2     		uxth	r2, r3
 2820 00d2 7B68     		ldr	r3, [r7, #4]
 2821 00d4 1A84     		strh	r2, [r3, #32]
 824:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 825:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Get the TIMx CCER register value */  
 826:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer = TIMx->CCER;
 2822              		.loc 1 826 0
 2823 00d6 3B1C     		mov	r3, r7
 2824 00d8 0E33     		add	r3, r3, #14
 2825 00da 7A68     		ldr	r2, [r7, #4]
 2826 00dc 128C     		ldrh	r2, [r2, #32]
 2827 00de 1A80     		strh	r2, [r3]
 827:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Get the TIMx CR2 register value */
 828:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 2828              		.loc 1 828 0
 2829 00e0 3B1C     		mov	r3, r7
 2830 00e2 0C33     		add	r3, r3, #12
 2831 00e4 7A68     		ldr	r2, [r7, #4]
 2832 00e6 9288     		ldrh	r2, [r2, #4]
 2833 00e8 1A80     		strh	r2, [r3]
 829:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 830:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 831:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 2834              		.loc 1 831 0
 2835 00ea 3B1C     		mov	r3, r7
 2836 00ec 0A33     		add	r3, r3, #10
 2837 00ee 7A68     		ldr	r2, [r7, #4]
 2838 00f0 128B     		ldrh	r2, [r2, #24]
 2839 00f2 1A80     		strh	r2, [r3]
 832:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     
 833:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 834:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_OC2M));
 2840              		.loc 1 834 0
 2841 00f4 3B1C     		mov	r3, r7
 2842 00f6 0A33     		add	r3, r3, #10
 2843 00f8 3A1C     		mov	r2, r7
 2844 00fa 0A32     		add	r2, r2, #10
 2845 00fc 1188     		ldrh	r1, [r2]
 2846 00fe 734A     		ldr	r2, .L132+28
 2847 0100 0A40     		and	r2, r1
 2848 0102 1A80     		strh	r2, [r3]
 835:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_CC2S));
 2849              		.loc 1 835 0
 2850 0104 3B1C     		mov	r3, r7
 2851 0106 0A33     		add	r3, r3, #10
 2852 0108 3A1C     		mov	r2, r7
 2853 010a 0A32     		add	r2, r2, #10
 2854 010c 1188     		ldrh	r1, [r2]
 2855 010e 704A     		ldr	r2, .L132+32
 2856 0110 0A40     		and	r2, r1
 2857 0112 1A80     		strh	r2, [r3]
 836:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 837:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Select the Output Compare Mode */
 838:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 2858              		.loc 1 838 0
 2859 0114 3B68     		ldr	r3, [r7]
 2860 0116 1B88     		ldrh	r3, [r3]
 2861 0118 1B02     		lsl	r3, r3, #8
 2862 011a 99B2     		uxth	r1, r3
 2863 011c 3B1C     		mov	r3, r7
 2864 011e 0A33     		add	r3, r3, #10
 2865 0120 3A1C     		mov	r2, r7
 2866 0122 0A32     		add	r2, r2, #10
 2867 0124 1288     		ldrh	r2, [r2]
 2868 0126 0A43     		orr	r2, r1
 2869 0128 1A80     		strh	r2, [r3]
 839:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 840:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the Output Polarity level */
 841:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC2P));
 2870              		.loc 1 841 0
 2871 012a 3B1C     		mov	r3, r7
 2872 012c 0E33     		add	r3, r3, #14
 2873 012e 3A1C     		mov	r2, r7
 2874 0130 0E32     		add	r2, r2, #14
 2875 0132 1288     		ldrh	r2, [r2]
 2876 0134 2021     		mov	r1, #32
 2877 0136 8A43     		bic	r2, r1
 2878 0138 1A80     		strh	r2, [r3]
 842:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the Output Compare Polarity */
 843:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 4);
 2879              		.loc 1 843 0
 2880 013a 3B68     		ldr	r3, [r7]
 2881 013c 9B89     		ldrh	r3, [r3, #12]
 2882 013e 1B01     		lsl	r3, r3, #4
 2883 0140 99B2     		uxth	r1, r3
 2884 0142 3B1C     		mov	r3, r7
 2885 0144 0E33     		add	r3, r3, #14
 2886 0146 3A1C     		mov	r2, r7
 2887 0148 0E32     		add	r2, r2, #14
 2888 014a 1288     		ldrh	r2, [r2]
 2889 014c 0A43     		orr	r2, r1
 2890 014e 1A80     		strh	r2, [r3]
 844:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 845:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the Output State */
 846:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 4);
 2891              		.loc 1 846 0
 2892 0150 3B68     		ldr	r3, [r7]
 2893 0152 5B88     		ldrh	r3, [r3, #2]
 2894 0154 1B01     		lsl	r3, r3, #4
 2895 0156 99B2     		uxth	r1, r3
 2896 0158 3B1C     		mov	r3, r7
 2897 015a 0E33     		add	r3, r3, #14
 2898 015c 3A1C     		mov	r2, r7
 2899 015e 0E32     		add	r2, r2, #14
 2900 0160 1288     		ldrh	r2, [r2]
 2901 0162 0A43     		orr	r2, r1
 2902 0164 1A80     		strh	r2, [r3]
 847:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     
 848:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   if(TIMx == TIM1)
 2903              		.loc 1 848 0
 2904 0166 7A68     		ldr	r2, [r7, #4]
 2905 0168 514B     		ldr	r3, .L132
 2906 016a 9A42     		cmp	r2, r3
 2907 016c 00D0     		beq	.LCB2678
 2908 016e 88E0     		b	.L127	@long jump
 2909              	.LCB2678:
 849:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
 850:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 2910              		.loc 1 850 0
 2911 0170 3B68     		ldr	r3, [r7]
 2912 0172 9B88     		ldrh	r3, [r3, #4]
 2913 0174 002B     		cmp	r3, #0
 2914 0176 09D0     		beq	.L128
 2915              		.loc 1 850 0 is_stmt 0 discriminator 1
 2916 0178 3B68     		ldr	r3, [r7]
 2917 017a 9B88     		ldrh	r3, [r3, #4]
 2918 017c 042B     		cmp	r3, #4
 2919 017e 05D0     		beq	.L128
 2920 0180 4E4A     		ldr	r2, .L132+12
 2921 0182 544B     		ldr	r3, .L132+36
 2922 0184 101C     		mov	r0, r2
 2923 0186 191C     		mov	r1, r3
 2924 0188 FFF7FEFF 		bl	assert_failed
 2925              	.L128:
 851:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 2926              		.loc 1 851 0 is_stmt 1
 2927 018c 3B68     		ldr	r3, [r7]
 2928 018e DB89     		ldrh	r3, [r3, #14]
 2929 0190 002B     		cmp	r3, #0
 2930 0192 09D0     		beq	.L129
 2931              		.loc 1 851 0 is_stmt 0 discriminator 1
 2932 0194 3B68     		ldr	r3, [r7]
 2933 0196 DB89     		ldrh	r3, [r3, #14]
 2934 0198 082B     		cmp	r3, #8
 2935 019a 05D0     		beq	.L129
 2936 019c 474A     		ldr	r2, .L132+12
 2937 019e 4E4B     		ldr	r3, .L132+40
 2938 01a0 101C     		mov	r0, r2
 2939 01a2 191C     		mov	r1, r3
 2940 01a4 FFF7FEFF 		bl	assert_failed
 2941              	.L129:
 852:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 2942              		.loc 1 852 0 is_stmt 1
 2943 01a8 3B68     		ldr	r3, [r7]
 2944 01aa 5A8A     		ldrh	r2, [r3, #18]
 2945 01ac 8023     		mov	r3, #128
 2946 01ae 9B00     		lsl	r3, r3, #2
 2947 01b0 9A42     		cmp	r2, r3
 2948 01b2 0AD0     		beq	.L130
 2949              		.loc 1 852 0 is_stmt 0 discriminator 1
 2950 01b4 3B68     		ldr	r3, [r7]
 2951 01b6 5B8A     		ldrh	r3, [r3, #18]
 2952 01b8 002B     		cmp	r3, #0
 2953 01ba 06D0     		beq	.L130
 2954 01bc 3F4A     		ldr	r2, .L132+12
 2955 01be D523     		mov	r3, #213
 2956 01c0 9B00     		lsl	r3, r3, #2
 2957 01c2 101C     		mov	r0, r2
 2958 01c4 191C     		mov	r1, r3
 2959 01c6 FFF7FEFF 		bl	assert_failed
 2960              	.L130:
 853:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 2961              		.loc 1 853 0 is_stmt 1
 2962 01ca 3B68     		ldr	r3, [r7]
 2963 01cc 1A8A     		ldrh	r2, [r3, #16]
 2964 01ce 8023     		mov	r3, #128
 2965 01d0 5B00     		lsl	r3, r3, #1
 2966 01d2 9A42     		cmp	r2, r3
 2967 01d4 09D0     		beq	.L131
 2968              		.loc 1 853 0 is_stmt 0 discriminator 1
 2969 01d6 3B68     		ldr	r3, [r7]
 2970 01d8 1B8A     		ldrh	r3, [r3, #16]
 2971 01da 002B     		cmp	r3, #0
 2972 01dc 05D0     		beq	.L131
 2973 01de 374A     		ldr	r2, .L132+12
 2974 01e0 3E4B     		ldr	r3, .L132+44
 2975 01e2 101C     		mov	r0, r2
 2976 01e4 191C     		mov	r1, r3
 2977 01e6 FFF7FEFF 		bl	assert_failed
 2978              	.L131:
 854:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     
 855:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Reset the Output N Polarity level */
 856:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC2NP));
 2979              		.loc 1 856 0 is_stmt 1
 2980 01ea 3B1C     		mov	r3, r7
 2981 01ec 0E33     		add	r3, r3, #14
 2982 01ee 3A1C     		mov	r2, r7
 2983 01f0 0E32     		add	r2, r2, #14
 2984 01f2 1288     		ldrh	r2, [r2]
 2985 01f4 8021     		mov	r1, #128
 2986 01f6 8A43     		bic	r2, r1
 2987 01f8 1A80     		strh	r2, [r3]
 857:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the Output N Polarity */
 858:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 4);
 2988              		.loc 1 858 0
 2989 01fa 3B68     		ldr	r3, [r7]
 2990 01fc DB89     		ldrh	r3, [r3, #14]
 2991 01fe 1B01     		lsl	r3, r3, #4
 2992 0200 99B2     		uxth	r1, r3
 2993 0202 3B1C     		mov	r3, r7
 2994 0204 0E33     		add	r3, r3, #14
 2995 0206 3A1C     		mov	r2, r7
 2996 0208 0E32     		add	r2, r2, #14
 2997 020a 1288     		ldrh	r2, [r2]
 2998 020c 0A43     		orr	r2, r1
 2999 020e 1A80     		strh	r2, [r3]
 859:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     
 860:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Reset the Output N State */
 861:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC2NE));    
 3000              		.loc 1 861 0
 3001 0210 3B1C     		mov	r3, r7
 3002 0212 0E33     		add	r3, r3, #14
 3003 0214 3A1C     		mov	r2, r7
 3004 0216 0E32     		add	r2, r2, #14
 3005 0218 1288     		ldrh	r2, [r2]
 3006 021a 4021     		mov	r1, #64
 3007 021c 8A43     		bic	r2, r1
 3008 021e 1A80     		strh	r2, [r3]
 862:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the Output N State */
 863:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 4);
 3009              		.loc 1 863 0
 3010 0220 3B68     		ldr	r3, [r7]
 3011 0222 9B88     		ldrh	r3, [r3, #4]
 3012 0224 1B01     		lsl	r3, r3, #4
 3013 0226 99B2     		uxth	r1, r3
 3014 0228 3B1C     		mov	r3, r7
 3015 022a 0E33     		add	r3, r3, #14
 3016 022c 3A1C     		mov	r2, r7
 3017 022e 0E32     		add	r2, r2, #14
 3018 0230 1288     		ldrh	r2, [r2]
 3019 0232 0A43     		orr	r2, r1
 3020 0234 1A80     		strh	r2, [r3]
 864:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     
 865:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Reset the Ouput Compare and Output Compare N IDLE State */
 866:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS2));
 3021              		.loc 1 866 0
 3022 0236 3B1C     		mov	r3, r7
 3023 0238 0C33     		add	r3, r3, #12
 3024 023a 3A1C     		mov	r2, r7
 3025 023c 0C32     		add	r2, r2, #12
 3026 023e 1188     		ldrh	r1, [r2]
 3027 0240 274A     		ldr	r2, .L132+48
 3028 0242 0A40     		and	r2, r1
 3029 0244 1A80     		strh	r2, [r3]
 867:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS2N));
 3030              		.loc 1 867 0
 3031 0246 3B1C     		mov	r3, r7
 3032 0248 0C33     		add	r3, r3, #12
 3033 024a 3A1C     		mov	r2, r7
 3034 024c 0C32     		add	r2, r2, #12
 3035 024e 1188     		ldrh	r1, [r2]
 3036 0250 244A     		ldr	r2, .L132+52
 3037 0252 0A40     		and	r2, r1
 3038 0254 1A80     		strh	r2, [r3]
 868:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     
 869:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the Output Idle state */
 870:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 2);
 3039              		.loc 1 870 0
 3040 0256 3B68     		ldr	r3, [r7]
 3041 0258 1B8A     		ldrh	r3, [r3, #16]
 3042 025a 9B00     		lsl	r3, r3, #2
 3043 025c 99B2     		uxth	r1, r3
 3044 025e 3B1C     		mov	r3, r7
 3045 0260 0C33     		add	r3, r3, #12
 3046 0262 3A1C     		mov	r2, r7
 3047 0264 0C32     		add	r2, r2, #12
 3048 0266 1288     		ldrh	r2, [r2]
 3049 0268 0A43     		orr	r2, r1
 3050 026a 1A80     		strh	r2, [r3]
 871:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the Output N Idle state */
 872:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 2);
 3051              		.loc 1 872 0
 3052 026c 3B68     		ldr	r3, [r7]
 3053 026e 5B8A     		ldrh	r3, [r3, #18]
 3054 0270 9B00     		lsl	r3, r3, #2
 3055 0272 99B2     		uxth	r1, r3
 3056 0274 3B1C     		mov	r3, r7
 3057 0276 0C33     		add	r3, r3, #12
 3058 0278 3A1C     		mov	r2, r7
 3059 027a 0C32     		add	r2, r2, #12
 3060 027c 1288     		ldrh	r2, [r2]
 3061 027e 0A43     		orr	r2, r1
 3062 0280 1A80     		strh	r2, [r3]
 3063              	.L127:
 873:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
 874:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CR2 */
 875:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CR2 = tmpcr2;
 3064              		.loc 1 875 0
 3065 0282 7B68     		ldr	r3, [r7, #4]
 3066 0284 3A1C     		mov	r2, r7
 3067 0286 0C32     		add	r2, r2, #12
 3068 0288 1288     		ldrh	r2, [r2]
 3069 028a 9A80     		strh	r2, [r3, #4]
 876:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 877:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCMR1 */
 878:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 3070              		.loc 1 878 0
 3071 028c 7B68     		ldr	r3, [r7, #4]
 3072 028e 3A1C     		mov	r2, r7
 3073 0290 0A32     		add	r2, r2, #10
 3074 0292 1288     		ldrh	r2, [r2]
 3075 0294 1A83     		strh	r2, [r3, #24]
 879:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 880:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the Capture Compare Register value */
 881:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
 3076              		.loc 1 881 0
 3077 0296 3B68     		ldr	r3, [r7]
 3078 0298 9A68     		ldr	r2, [r3, #8]
 3079 029a 7B68     		ldr	r3, [r7, #4]
 3080 029c 9A63     		str	r2, [r3, #56]
 882:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 883:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCER */
 884:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCER = tmpccer;
 3081              		.loc 1 884 0
 3082 029e 7B68     		ldr	r3, [r7, #4]
 3083 02a0 3A1C     		mov	r2, r7
 3084 02a2 0E32     		add	r2, r2, #14
 3085 02a4 1288     		ldrh	r2, [r2]
 3086 02a6 1A84     		strh	r2, [r3, #32]
 885:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 3087              		.loc 1 885 0
 3088 02a8 BD46     		mov	sp, r7
 3089 02aa 04B0     		add	sp, sp, #16
 3090              		@ sp needed
 3091 02ac 80BD     		pop	{r7, pc}
 3092              	.L133:
 3093 02ae C046     		.align	2
 3094              	.L132:
 3095 02b0 002C0140 		.word	1073818624
 3096 02b4 00040040 		.word	1073742848
 3097 02b8 00400140 		.word	1073823744
 3098 02bc 00000000 		.word	.LC0
 3099 02c0 32030000 		.word	818
 3100 02c4 33030000 		.word	819
 3101 02c8 35030000 		.word	821
 3102 02cc FF8FFFFF 		.word	-28673
 3103 02d0 FFFCFFFF 		.word	-769
 3104 02d4 52030000 		.word	850
 3105 02d8 53030000 		.word	851
 3106 02dc 55030000 		.word	853
 3107 02e0 FFFBFFFF 		.word	-1025
 3108 02e4 FFF7FFFF 		.word	-2049
 3109              		.cfi_endproc
 3110              	.LFE51:
 3112              		.section	.text.TIM_OC3Init,"ax",%progbits
 3113              		.align	2
 3114              		.global	TIM_OC3Init
 3115              		.code	16
 3116              		.thumb_func
 3118              	TIM_OC3Init:
 3119              	.LFB52:
 886:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 887:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
 888:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Initializes the TIMx Channel3 according to the specified
 889:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         parameters in the TIM_OCInitStruct.
 890:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2 or 3 to select the TIM peripheral.
 891:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure
 892:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         that contains the configuration information for the specified TIM 
 893:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         peripheral.
 894:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
 895:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 896:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_OC3Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 897:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 3120              		.loc 1 897 0
 3121              		.cfi_startproc
 3122 0000 80B5     		push	{r7, lr}
 3123              		.cfi_def_cfa_offset 8
 3124              		.cfi_offset 7, -8
 3125              		.cfi_offset 14, -4
 3126 0002 84B0     		sub	sp, sp, #16
 3127              		.cfi_def_cfa_offset 24
 3128 0004 00AF     		add	r7, sp, #0
 3129              		.cfi_def_cfa_register 7
 3130 0006 7860     		str	r0, [r7, #4]
 3131 0008 3960     		str	r1, [r7]
 898:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 3132              		.loc 1 898 0
 3133 000a 3B1C     		mov	r3, r7
 3134 000c 0A33     		add	r3, r3, #10
 3135 000e 0022     		mov	r2, #0
 3136 0010 1A80     		strh	r2, [r3]
 3137 0012 3B1C     		mov	r3, r7
 3138 0014 0E33     		add	r3, r3, #14
 3139 0016 0022     		mov	r2, #0
 3140 0018 1A80     		strh	r2, [r3]
 3141 001a 3B1C     		mov	r3, r7
 3142 001c 0C33     		add	r3, r3, #12
 3143 001e 0022     		mov	r2, #0
 3144 0020 1A80     		strh	r2, [r3]
 899:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****    
 900:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
 901:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 3145              		.loc 1 901 0
 3146 0022 7A68     		ldr	r2, [r7, #4]
 3147 0024 9F4B     		ldr	r3, .L144
 3148 0026 9A42     		cmp	r2, r3
 3149 0028 0ED0     		beq	.L135
 3150              		.loc 1 901 0 is_stmt 0 discriminator 1
 3151 002a 7A68     		ldr	r2, [r7, #4]
 3152 002c 8023     		mov	r3, #128
 3153 002e DB05     		lsl	r3, r3, #23
 3154 0030 9A42     		cmp	r2, r3
 3155 0032 09D0     		beq	.L135
 3156 0034 7A68     		ldr	r2, [r7, #4]
 3157 0036 9C4B     		ldr	r3, .L144+4
 3158 0038 9A42     		cmp	r2, r3
 3159 003a 05D0     		beq	.L135
 3160 003c 9B4A     		ldr	r2, .L144+8
 3161 003e 9C4B     		ldr	r3, .L144+12
 3162 0040 101C     		mov	r0, r2
 3163 0042 191C     		mov	r1, r3
 3164 0044 FFF7FEFF 		bl	assert_failed
 3165              	.L135:
 902:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 3166              		.loc 1 902 0 is_stmt 1
 3167 0048 3B68     		ldr	r3, [r7]
 3168 004a 1B88     		ldrh	r3, [r3]
 3169 004c 002B     		cmp	r3, #0
 3170 004e 19D0     		beq	.L136
 3171              		.loc 1 902 0 is_stmt 0 discriminator 1
 3172 0050 3B68     		ldr	r3, [r7]
 3173 0052 1B88     		ldrh	r3, [r3]
 3174 0054 102B     		cmp	r3, #16
 3175 0056 15D0     		beq	.L136
 3176 0058 3B68     		ldr	r3, [r7]
 3177 005a 1B88     		ldrh	r3, [r3]
 3178 005c 202B     		cmp	r3, #32
 3179 005e 11D0     		beq	.L136
 3180 0060 3B68     		ldr	r3, [r7]
 3181 0062 1B88     		ldrh	r3, [r3]
 3182 0064 302B     		cmp	r3, #48
 3183 0066 0DD0     		beq	.L136
 3184 0068 3B68     		ldr	r3, [r7]
 3185 006a 1B88     		ldrh	r3, [r3]
 3186 006c 602B     		cmp	r3, #96
 3187 006e 09D0     		beq	.L136
 3188 0070 3B68     		ldr	r3, [r7]
 3189 0072 1B88     		ldrh	r3, [r3]
 3190 0074 702B     		cmp	r3, #112
 3191 0076 05D0     		beq	.L136
 3192 0078 8C4A     		ldr	r2, .L144+8
 3193 007a 8E4B     		ldr	r3, .L144+16
 3194 007c 101C     		mov	r0, r2
 3195 007e 191C     		mov	r1, r3
 3196 0080 FFF7FEFF 		bl	assert_failed
 3197              	.L136:
 903:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 3198              		.loc 1 903 0 is_stmt 1
 3199 0084 3B68     		ldr	r3, [r7]
 3200 0086 5B88     		ldrh	r3, [r3, #2]
 3201 0088 002B     		cmp	r3, #0
 3202 008a 09D0     		beq	.L137
 3203              		.loc 1 903 0 is_stmt 0 discriminator 1
 3204 008c 3B68     		ldr	r3, [r7]
 3205 008e 5B88     		ldrh	r3, [r3, #2]
 3206 0090 012B     		cmp	r3, #1
 3207 0092 05D0     		beq	.L137
 3208 0094 854A     		ldr	r2, .L144+8
 3209 0096 884B     		ldr	r3, .L144+20
 3210 0098 101C     		mov	r0, r2
 3211 009a 191C     		mov	r1, r3
 3212 009c FFF7FEFF 		bl	assert_failed
 3213              	.L137:
 904:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 3214              		.loc 1 904 0 is_stmt 1
 3215 00a0 3B68     		ldr	r3, [r7]
 3216 00a2 9B89     		ldrh	r3, [r3, #12]
 3217 00a4 002B     		cmp	r3, #0
 3218 00a6 0AD0     		beq	.L138
 3219              		.loc 1 904 0 is_stmt 0 discriminator 1
 3220 00a8 3B68     		ldr	r3, [r7]
 3221 00aa 9B89     		ldrh	r3, [r3, #12]
 3222 00ac 022B     		cmp	r3, #2
 3223 00ae 06D0     		beq	.L138
 3224 00b0 7E4A     		ldr	r2, .L144+8
 3225 00b2 E223     		mov	r3, #226
 3226 00b4 9B00     		lsl	r3, r3, #2
 3227 00b6 101C     		mov	r0, r2
 3228 00b8 191C     		mov	r1, r3
 3229 00ba FFF7FEFF 		bl	assert_failed
 3230              	.L138:
 905:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
 906:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCER &= (uint16_t)(~((uint16_t)TIM_CCER_CC3E));
 3231              		.loc 1 906 0 is_stmt 1
 3232 00be 7B68     		ldr	r3, [r7, #4]
 3233 00c0 1B8C     		ldrh	r3, [r3, #32]
 3234 00c2 9AB2     		uxth	r2, r3
 3235 00c4 7D4B     		ldr	r3, .L144+24
 3236 00c6 1340     		and	r3, r2
 3237 00c8 9AB2     		uxth	r2, r3
 3238 00ca 7B68     		ldr	r3, [r7, #4]
 3239 00cc 1A84     		strh	r2, [r3, #32]
 907:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 908:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Get the TIMx CCER register value */
 909:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer = TIMx->CCER;
 3240              		.loc 1 909 0
 3241 00ce 3B1C     		mov	r3, r7
 3242 00d0 0E33     		add	r3, r3, #14
 3243 00d2 7A68     		ldr	r2, [r7, #4]
 3244 00d4 128C     		ldrh	r2, [r2, #32]
 3245 00d6 1A80     		strh	r2, [r3]
 910:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Get the TIMx CR2 register value */
 911:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 3246              		.loc 1 911 0
 3247 00d8 3B1C     		mov	r3, r7
 3248 00da 0C33     		add	r3, r3, #12
 3249 00dc 7A68     		ldr	r2, [r7, #4]
 3250 00de 9288     		ldrh	r2, [r2, #4]
 3251 00e0 1A80     		strh	r2, [r3]
 912:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 913:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 914:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 3252              		.loc 1 914 0
 3253 00e2 3B1C     		mov	r3, r7
 3254 00e4 0A33     		add	r3, r3, #10
 3255 00e6 7A68     		ldr	r2, [r7, #4]
 3256 00e8 928B     		ldrh	r2, [r2, #28]
 3257 00ea 1A80     		strh	r2, [r3]
 915:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     
 916:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 917:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_OC3M));
 3258              		.loc 1 917 0
 3259 00ec 3B1C     		mov	r3, r7
 3260 00ee 0A33     		add	r3, r3, #10
 3261 00f0 3A1C     		mov	r2, r7
 3262 00f2 0A32     		add	r2, r2, #10
 3263 00f4 1288     		ldrh	r2, [r2]
 3264 00f6 7021     		mov	r1, #112
 3265 00f8 8A43     		bic	r2, r1
 3266 00fa 1A80     		strh	r2, [r3]
 918:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_CC3S));  
 3267              		.loc 1 918 0
 3268 00fc 3B1C     		mov	r3, r7
 3269 00fe 0A33     		add	r3, r3, #10
 3270 0100 3A1C     		mov	r2, r7
 3271 0102 0A32     		add	r2, r2, #10
 3272 0104 1288     		ldrh	r2, [r2]
 3273 0106 0321     		mov	r1, #3
 3274 0108 8A43     		bic	r2, r1
 3275 010a 1A80     		strh	r2, [r3]
 919:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Select the Output Compare Mode */
 920:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 3276              		.loc 1 920 0
 3277 010c 3B68     		ldr	r3, [r7]
 3278 010e 1988     		ldrh	r1, [r3]
 3279 0110 3B1C     		mov	r3, r7
 3280 0112 0A33     		add	r3, r3, #10
 3281 0114 3A1C     		mov	r2, r7
 3282 0116 0A32     		add	r2, r2, #10
 3283 0118 1288     		ldrh	r2, [r2]
 3284 011a 0A43     		orr	r2, r1
 3285 011c 1A80     		strh	r2, [r3]
 921:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 922:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the Output Polarity level */
 923:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC3P));
 3286              		.loc 1 923 0
 3287 011e 3B1C     		mov	r3, r7
 3288 0120 0E33     		add	r3, r3, #14
 3289 0122 3A1C     		mov	r2, r7
 3290 0124 0E32     		add	r2, r2, #14
 3291 0126 1188     		ldrh	r1, [r2]
 3292 0128 654A     		ldr	r2, .L144+28
 3293 012a 0A40     		and	r2, r1
 3294 012c 1A80     		strh	r2, [r3]
 924:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the Output Compare Polarity */
 925:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 8);
 3295              		.loc 1 925 0
 3296 012e 3B68     		ldr	r3, [r7]
 3297 0130 9B89     		ldrh	r3, [r3, #12]
 3298 0132 1B02     		lsl	r3, r3, #8
 3299 0134 99B2     		uxth	r1, r3
 3300 0136 3B1C     		mov	r3, r7
 3301 0138 0E33     		add	r3, r3, #14
 3302 013a 3A1C     		mov	r2, r7
 3303 013c 0E32     		add	r2, r2, #14
 3304 013e 1288     		ldrh	r2, [r2]
 3305 0140 0A43     		orr	r2, r1
 3306 0142 1A80     		strh	r2, [r3]
 926:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 927:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the Output State */
 928:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 8);
 3307              		.loc 1 928 0
 3308 0144 3B68     		ldr	r3, [r7]
 3309 0146 5B88     		ldrh	r3, [r3, #2]
 3310 0148 1B02     		lsl	r3, r3, #8
 3311 014a 99B2     		uxth	r1, r3
 3312 014c 3B1C     		mov	r3, r7
 3313 014e 0E33     		add	r3, r3, #14
 3314 0150 3A1C     		mov	r2, r7
 3315 0152 0E32     		add	r2, r2, #14
 3316 0154 1288     		ldrh	r2, [r2]
 3317 0156 0A43     		orr	r2, r1
 3318 0158 1A80     		strh	r2, [r3]
 929:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     
 930:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   if(TIMx == TIM1)
 3319              		.loc 1 930 0
 3320 015a 7A68     		ldr	r2, [r7, #4]
 3321 015c 514B     		ldr	r3, .L144
 3322 015e 9A42     		cmp	r2, r3
 3323 0160 00D0     		beq	.LCB3058
 3324 0162 88E0     		b	.L139	@long jump
 3325              	.LCB3058:
 931:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
 932:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 3326              		.loc 1 932 0
 3327 0164 3B68     		ldr	r3, [r7]
 3328 0166 9B88     		ldrh	r3, [r3, #4]
 3329 0168 002B     		cmp	r3, #0
 3330 016a 0AD0     		beq	.L140
 3331              		.loc 1 932 0 is_stmt 0 discriminator 1
 3332 016c 3B68     		ldr	r3, [r7]
 3333 016e 9B88     		ldrh	r3, [r3, #4]
 3334 0170 042B     		cmp	r3, #4
 3335 0172 06D0     		beq	.L140
 3336 0174 4D4A     		ldr	r2, .L144+8
 3337 0176 E923     		mov	r3, #233
 3338 0178 9B00     		lsl	r3, r3, #2
 3339 017a 101C     		mov	r0, r2
 3340 017c 191C     		mov	r1, r3
 3341 017e FFF7FEFF 		bl	assert_failed
 3342              	.L140:
 933:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 3343              		.loc 1 933 0 is_stmt 1
 3344 0182 3B68     		ldr	r3, [r7]
 3345 0184 DB89     		ldrh	r3, [r3, #14]
 3346 0186 002B     		cmp	r3, #0
 3347 0188 09D0     		beq	.L141
 3348              		.loc 1 933 0 is_stmt 0 discriminator 1
 3349 018a 3B68     		ldr	r3, [r7]
 3350 018c DB89     		ldrh	r3, [r3, #14]
 3351 018e 082B     		cmp	r3, #8
 3352 0190 05D0     		beq	.L141
 3353 0192 464A     		ldr	r2, .L144+8
 3354 0194 4B4B     		ldr	r3, .L144+32
 3355 0196 101C     		mov	r0, r2
 3356 0198 191C     		mov	r1, r3
 3357 019a FFF7FEFF 		bl	assert_failed
 3358              	.L141:
 934:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 3359              		.loc 1 934 0 is_stmt 1
 3360 019e 3B68     		ldr	r3, [r7]
 3361 01a0 5A8A     		ldrh	r2, [r3, #18]
 3362 01a2 8023     		mov	r3, #128
 3363 01a4 9B00     		lsl	r3, r3, #2
 3364 01a6 9A42     		cmp	r2, r3
 3365 01a8 09D0     		beq	.L142
 3366              		.loc 1 934 0 is_stmt 0 discriminator 1
 3367 01aa 3B68     		ldr	r3, [r7]
 3368 01ac 5B8A     		ldrh	r3, [r3, #18]
 3369 01ae 002B     		cmp	r3, #0
 3370 01b0 05D0     		beq	.L142
 3371 01b2 3E4A     		ldr	r2, .L144+8
 3372 01b4 444B     		ldr	r3, .L144+36
 3373 01b6 101C     		mov	r0, r2
 3374 01b8 191C     		mov	r1, r3
 3375 01ba FFF7FEFF 		bl	assert_failed
 3376              	.L142:
 935:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 3377              		.loc 1 935 0 is_stmt 1
 3378 01be 3B68     		ldr	r3, [r7]
 3379 01c0 1A8A     		ldrh	r2, [r3, #16]
 3380 01c2 8023     		mov	r3, #128
 3381 01c4 5B00     		lsl	r3, r3, #1
 3382 01c6 9A42     		cmp	r2, r3
 3383 01c8 09D0     		beq	.L143
 3384              		.loc 1 935 0 is_stmt 0 discriminator 1
 3385 01ca 3B68     		ldr	r3, [r7]
 3386 01cc 1B8A     		ldrh	r3, [r3, #16]
 3387 01ce 002B     		cmp	r3, #0
 3388 01d0 05D0     		beq	.L143
 3389 01d2 364A     		ldr	r2, .L144+8
 3390 01d4 3D4B     		ldr	r3, .L144+40
 3391 01d6 101C     		mov	r0, r2
 3392 01d8 191C     		mov	r1, r3
 3393 01da FFF7FEFF 		bl	assert_failed
 3394              	.L143:
 936:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     
 937:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Reset the Output N Polarity level */
 938:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC3NP));
 3395              		.loc 1 938 0 is_stmt 1
 3396 01de 3B1C     		mov	r3, r7
 3397 01e0 0E33     		add	r3, r3, #14
 3398 01e2 3A1C     		mov	r2, r7
 3399 01e4 0E32     		add	r2, r2, #14
 3400 01e6 1188     		ldrh	r1, [r2]
 3401 01e8 394A     		ldr	r2, .L144+44
 3402 01ea 0A40     		and	r2, r1
 3403 01ec 1A80     		strh	r2, [r3]
 939:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the Output N Polarity */
 940:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 8);
 3404              		.loc 1 940 0
 3405 01ee 3B68     		ldr	r3, [r7]
 3406 01f0 DB89     		ldrh	r3, [r3, #14]
 3407 01f2 1B02     		lsl	r3, r3, #8
 3408 01f4 99B2     		uxth	r1, r3
 3409 01f6 3B1C     		mov	r3, r7
 3410 01f8 0E33     		add	r3, r3, #14
 3411 01fa 3A1C     		mov	r2, r7
 3412 01fc 0E32     		add	r2, r2, #14
 3413 01fe 1288     		ldrh	r2, [r2]
 3414 0200 0A43     		orr	r2, r1
 3415 0202 1A80     		strh	r2, [r3]
 941:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Reset the Output N State */
 942:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC3NE));
 3416              		.loc 1 942 0
 3417 0204 3B1C     		mov	r3, r7
 3418 0206 0E33     		add	r3, r3, #14
 3419 0208 3A1C     		mov	r2, r7
 3420 020a 0E32     		add	r2, r2, #14
 3421 020c 1188     		ldrh	r1, [r2]
 3422 020e 314A     		ldr	r2, .L144+48
 3423 0210 0A40     		and	r2, r1
 3424 0212 1A80     		strh	r2, [r3]
 943:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     
 944:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the Output N State */
 945:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 8);
 3425              		.loc 1 945 0
 3426 0214 3B68     		ldr	r3, [r7]
 3427 0216 9B88     		ldrh	r3, [r3, #4]
 3428 0218 1B02     		lsl	r3, r3, #8
 3429 021a 99B2     		uxth	r1, r3
 3430 021c 3B1C     		mov	r3, r7
 3431 021e 0E33     		add	r3, r3, #14
 3432 0220 3A1C     		mov	r2, r7
 3433 0222 0E32     		add	r2, r2, #14
 3434 0224 1288     		ldrh	r2, [r2]
 3435 0226 0A43     		orr	r2, r1
 3436 0228 1A80     		strh	r2, [r3]
 946:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Reset the Ouput Compare and Output Compare N IDLE State */
 947:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS3));
 3437              		.loc 1 947 0
 3438 022a 3B1C     		mov	r3, r7
 3439 022c 0C33     		add	r3, r3, #12
 3440 022e 3A1C     		mov	r2, r7
 3441 0230 0C32     		add	r2, r2, #12
 3442 0232 1188     		ldrh	r1, [r2]
 3443 0234 284A     		ldr	r2, .L144+52
 3444 0236 0A40     		and	r2, r1
 3445 0238 1A80     		strh	r2, [r3]
 948:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS3N));
 3446              		.loc 1 948 0
 3447 023a 3B1C     		mov	r3, r7
 3448 023c 0C33     		add	r3, r3, #12
 3449 023e 3A1C     		mov	r2, r7
 3450 0240 0C32     		add	r2, r2, #12
 3451 0242 1188     		ldrh	r1, [r2]
 3452 0244 254A     		ldr	r2, .L144+56
 3453 0246 0A40     		and	r2, r1
 3454 0248 1A80     		strh	r2, [r3]
 949:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the Output Idle state */
 950:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 4);
 3455              		.loc 1 950 0
 3456 024a 3B68     		ldr	r3, [r7]
 3457 024c 1B8A     		ldrh	r3, [r3, #16]
 3458 024e 1B01     		lsl	r3, r3, #4
 3459 0250 99B2     		uxth	r1, r3
 3460 0252 3B1C     		mov	r3, r7
 3461 0254 0C33     		add	r3, r3, #12
 3462 0256 3A1C     		mov	r2, r7
 3463 0258 0C32     		add	r2, r2, #12
 3464 025a 1288     		ldrh	r2, [r2]
 3465 025c 0A43     		orr	r2, r1
 3466 025e 1A80     		strh	r2, [r3]
 951:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the Output N Idle state */
 952:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 4);
 3467              		.loc 1 952 0
 3468 0260 3B68     		ldr	r3, [r7]
 3469 0262 5B8A     		ldrh	r3, [r3, #18]
 3470 0264 1B01     		lsl	r3, r3, #4
 3471 0266 99B2     		uxth	r1, r3
 3472 0268 3B1C     		mov	r3, r7
 3473 026a 0C33     		add	r3, r3, #12
 3474 026c 3A1C     		mov	r2, r7
 3475 026e 0C32     		add	r2, r2, #12
 3476 0270 1288     		ldrh	r2, [r2]
 3477 0272 0A43     		orr	r2, r1
 3478 0274 1A80     		strh	r2, [r3]
 3479              	.L139:
 953:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
 954:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CR2 */
 955:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CR2 = tmpcr2;
 3480              		.loc 1 955 0
 3481 0276 7B68     		ldr	r3, [r7, #4]
 3482 0278 3A1C     		mov	r2, r7
 3483 027a 0C32     		add	r2, r2, #12
 3484 027c 1288     		ldrh	r2, [r2]
 3485 027e 9A80     		strh	r2, [r3, #4]
 956:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 957:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCMR2 */
 958:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 3486              		.loc 1 958 0
 3487 0280 7B68     		ldr	r3, [r7, #4]
 3488 0282 3A1C     		mov	r2, r7
 3489 0284 0A32     		add	r2, r2, #10
 3490 0286 1288     		ldrh	r2, [r2]
 3491 0288 9A83     		strh	r2, [r3, #28]
 959:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 960:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the Capture Compare Register value */
 961:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
 3492              		.loc 1 961 0
 3493 028a 3B68     		ldr	r3, [r7]
 3494 028c 9A68     		ldr	r2, [r3, #8]
 3495 028e 7B68     		ldr	r3, [r7, #4]
 3496 0290 DA63     		str	r2, [r3, #60]
 962:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 963:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCER */
 964:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCER = tmpccer;
 3497              		.loc 1 964 0
 3498 0292 7B68     		ldr	r3, [r7, #4]
 3499 0294 3A1C     		mov	r2, r7
 3500 0296 0E32     		add	r2, r2, #14
 3501 0298 1288     		ldrh	r2, [r2]
 3502 029a 1A84     		strh	r2, [r3, #32]
 965:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 3503              		.loc 1 965 0
 3504 029c BD46     		mov	sp, r7
 3505 029e 04B0     		add	sp, sp, #16
 3506              		@ sp needed
 3507 02a0 80BD     		pop	{r7, pc}
 3508              	.L145:
 3509 02a2 C046     		.align	2
 3510              	.L144:
 3511 02a4 002C0140 		.word	1073818624
 3512 02a8 00040040 		.word	1073742848
 3513 02ac 00000000 		.word	.LC0
 3514 02b0 85030000 		.word	901
 3515 02b4 86030000 		.word	902
 3516 02b8 87030000 		.word	903
 3517 02bc FFFEFFFF 		.word	-257
 3518 02c0 FFFDFFFF 		.word	-513
 3519 02c4 A5030000 		.word	933
 3520 02c8 A6030000 		.word	934
 3521 02cc A7030000 		.word	935
 3522 02d0 FFF7FFFF 		.word	-2049
 3523 02d4 FFFBFFFF 		.word	-1025
 3524 02d8 FFEFFFFF 		.word	-4097
 3525 02dc FFDFFFFF 		.word	-8193
 3526              		.cfi_endproc
 3527              	.LFE52:
 3529              		.section	.text.TIM_OC4Init,"ax",%progbits
 3530              		.align	2
 3531              		.global	TIM_OC4Init
 3532              		.code	16
 3533              		.thumb_func
 3535              	TIM_OC4Init:
 3536              	.LFB53:
 966:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
 967:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
 968:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Initializes the TIMx Channel4 according to the specified
 969:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         parameters in the TIM_OCInitStruct.
 970:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2 or 3 to select the TIM peripheral.
 971:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure
 972:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         that contains the configuration information for the specified TIM 
 973:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         peripheral.
 974:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
 975:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
 976:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_OC4Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 977:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 3537              		.loc 1 977 0
 3538              		.cfi_startproc
 3539 0000 80B5     		push	{r7, lr}
 3540              		.cfi_def_cfa_offset 8
 3541              		.cfi_offset 7, -8
 3542              		.cfi_offset 14, -4
 3543 0002 84B0     		sub	sp, sp, #16
 3544              		.cfi_def_cfa_offset 24
 3545 0004 00AF     		add	r7, sp, #0
 3546              		.cfi_def_cfa_register 7
 3547 0006 7860     		str	r0, [r7, #4]
 3548 0008 3960     		str	r1, [r7]
 978:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 3549              		.loc 1 978 0
 3550 000a 3B1C     		mov	r3, r7
 3551 000c 0C33     		add	r3, r3, #12
 3552 000e 0022     		mov	r2, #0
 3553 0010 1A80     		strh	r2, [r3]
 3554 0012 3B1C     		mov	r3, r7
 3555 0014 0A33     		add	r3, r3, #10
 3556 0016 0022     		mov	r2, #0
 3557 0018 1A80     		strh	r2, [r3]
 3558 001a 3B1C     		mov	r3, r7
 3559 001c 0E33     		add	r3, r3, #14
 3560 001e 0022     		mov	r2, #0
 3561 0020 1A80     		strh	r2, [r3]
 979:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****    
 980:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
 981:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 3562              		.loc 1 981 0
 3563 0022 7A68     		ldr	r2, [r7, #4]
 3564 0024 6C4B     		ldr	r3, .L153
 3565 0026 9A42     		cmp	r2, r3
 3566 0028 0ED0     		beq	.L147
 3567              		.loc 1 981 0 is_stmt 0 discriminator 1
 3568 002a 7A68     		ldr	r2, [r7, #4]
 3569 002c 8023     		mov	r3, #128
 3570 002e DB05     		lsl	r3, r3, #23
 3571 0030 9A42     		cmp	r2, r3
 3572 0032 09D0     		beq	.L147
 3573 0034 7A68     		ldr	r2, [r7, #4]
 3574 0036 694B     		ldr	r3, .L153+4
 3575 0038 9A42     		cmp	r2, r3
 3576 003a 05D0     		beq	.L147
 3577 003c 684A     		ldr	r2, .L153+8
 3578 003e 694B     		ldr	r3, .L153+12
 3579 0040 101C     		mov	r0, r2
 3580 0042 191C     		mov	r1, r3
 3581 0044 FFF7FEFF 		bl	assert_failed
 3582              	.L147:
 982:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 3583              		.loc 1 982 0 is_stmt 1
 3584 0048 3B68     		ldr	r3, [r7]
 3585 004a 1B88     		ldrh	r3, [r3]
 3586 004c 002B     		cmp	r3, #0
 3587 004e 19D0     		beq	.L148
 3588              		.loc 1 982 0 is_stmt 0 discriminator 1
 3589 0050 3B68     		ldr	r3, [r7]
 3590 0052 1B88     		ldrh	r3, [r3]
 3591 0054 102B     		cmp	r3, #16
 3592 0056 15D0     		beq	.L148
 3593 0058 3B68     		ldr	r3, [r7]
 3594 005a 1B88     		ldrh	r3, [r3]
 3595 005c 202B     		cmp	r3, #32
 3596 005e 11D0     		beq	.L148
 3597 0060 3B68     		ldr	r3, [r7]
 3598 0062 1B88     		ldrh	r3, [r3]
 3599 0064 302B     		cmp	r3, #48
 3600 0066 0DD0     		beq	.L148
 3601 0068 3B68     		ldr	r3, [r7]
 3602 006a 1B88     		ldrh	r3, [r3]
 3603 006c 602B     		cmp	r3, #96
 3604 006e 09D0     		beq	.L148
 3605 0070 3B68     		ldr	r3, [r7]
 3606 0072 1B88     		ldrh	r3, [r3]
 3607 0074 702B     		cmp	r3, #112
 3608 0076 05D0     		beq	.L148
 3609 0078 594A     		ldr	r2, .L153+8
 3610 007a 5B4B     		ldr	r3, .L153+16
 3611 007c 101C     		mov	r0, r2
 3612 007e 191C     		mov	r1, r3
 3613 0080 FFF7FEFF 		bl	assert_failed
 3614              	.L148:
 983:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 3615              		.loc 1 983 0 is_stmt 1
 3616 0084 3B68     		ldr	r3, [r7]
 3617 0086 5B88     		ldrh	r3, [r3, #2]
 3618 0088 002B     		cmp	r3, #0
 3619 008a 09D0     		beq	.L149
 3620              		.loc 1 983 0 is_stmt 0 discriminator 1
 3621 008c 3B68     		ldr	r3, [r7]
 3622 008e 5B88     		ldrh	r3, [r3, #2]
 3623 0090 012B     		cmp	r3, #1
 3624 0092 05D0     		beq	.L149
 3625 0094 524A     		ldr	r2, .L153+8
 3626 0096 554B     		ldr	r3, .L153+20
 3627 0098 101C     		mov	r0, r2
 3628 009a 191C     		mov	r1, r3
 3629 009c FFF7FEFF 		bl	assert_failed
 3630              	.L149:
 984:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 3631              		.loc 1 984 0 is_stmt 1
 3632 00a0 3B68     		ldr	r3, [r7]
 3633 00a2 9B89     		ldrh	r3, [r3, #12]
 3634 00a4 002B     		cmp	r3, #0
 3635 00a6 0AD0     		beq	.L150
 3636              		.loc 1 984 0 is_stmt 0 discriminator 1
 3637 00a8 3B68     		ldr	r3, [r7]
 3638 00aa 9B89     		ldrh	r3, [r3, #12]
 3639 00ac 022B     		cmp	r3, #2
 3640 00ae 06D0     		beq	.L150
 3641 00b0 4B4A     		ldr	r2, .L153+8
 3642 00b2 F623     		mov	r3, #246
 3643 00b4 9B00     		lsl	r3, r3, #2
 3644 00b6 101C     		mov	r0, r2
 3645 00b8 191C     		mov	r1, r3
 3646 00ba FFF7FEFF 		bl	assert_failed
 3647              	.L150:
 985:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Disable the Channel 2: Reset the CC4E Bit */
 986:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCER &= (uint16_t)(~((uint16_t)TIM_CCER_CC4E));
 3648              		.loc 1 986 0 is_stmt 1
 3649 00be 7B68     		ldr	r3, [r7, #4]
 3650 00c0 1B8C     		ldrh	r3, [r3, #32]
 3651 00c2 9AB2     		uxth	r2, r3
 3652 00c4 4A4B     		ldr	r3, .L153+24
 3653 00c6 1340     		and	r3, r2
 3654 00c8 9AB2     		uxth	r2, r3
 3655 00ca 7B68     		ldr	r3, [r7, #4]
 3656 00cc 1A84     		strh	r2, [r3, #32]
 987:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 988:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Get the TIMx CCER register value */
 989:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer = TIMx->CCER;
 3657              		.loc 1 989 0
 3658 00ce 3B1C     		mov	r3, r7
 3659 00d0 0A33     		add	r3, r3, #10
 3660 00d2 7A68     		ldr	r2, [r7, #4]
 3661 00d4 128C     		ldrh	r2, [r2, #32]
 3662 00d6 1A80     		strh	r2, [r3]
 990:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Get the TIMx CR2 register value */
 991:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 3663              		.loc 1 991 0
 3664 00d8 3B1C     		mov	r3, r7
 3665 00da 0E33     		add	r3, r3, #14
 3666 00dc 7A68     		ldr	r2, [r7, #4]
 3667 00de 9288     		ldrh	r2, [r2, #4]
 3668 00e0 1A80     		strh	r2, [r3]
 992:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
 993:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 994:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 3669              		.loc 1 994 0
 3670 00e2 3B1C     		mov	r3, r7
 3671 00e4 0C33     		add	r3, r3, #12
 3672 00e6 7A68     		ldr	r2, [r7, #4]
 3673 00e8 928B     		ldrh	r2, [r2, #28]
 3674 00ea 1A80     		strh	r2, [r3]
 995:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     
 996:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 997:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_OC4M));
 3675              		.loc 1 997 0
 3676 00ec 3B1C     		mov	r3, r7
 3677 00ee 0C33     		add	r3, r3, #12
 3678 00f0 3A1C     		mov	r2, r7
 3679 00f2 0C32     		add	r2, r2, #12
 3680 00f4 1188     		ldrh	r1, [r2]
 3681 00f6 3F4A     		ldr	r2, .L153+28
 3682 00f8 0A40     		and	r2, r1
 3683 00fa 1A80     		strh	r2, [r3]
 998:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_CC4S));
 3684              		.loc 1 998 0
 3685 00fc 3B1C     		mov	r3, r7
 3686 00fe 0C33     		add	r3, r3, #12
 3687 0100 3A1C     		mov	r2, r7
 3688 0102 0C32     		add	r2, r2, #12
 3689 0104 1188     		ldrh	r1, [r2]
 3690 0106 3C4A     		ldr	r2, .L153+32
 3691 0108 0A40     		and	r2, r1
 3692 010a 1A80     		strh	r2, [r3]
 999:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1000:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Select the Output Compare Mode */
1001:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 3693              		.loc 1 1001 0
 3694 010c 3B68     		ldr	r3, [r7]
 3695 010e 1B88     		ldrh	r3, [r3]
 3696 0110 1B02     		lsl	r3, r3, #8
 3697 0112 99B2     		uxth	r1, r3
 3698 0114 3B1C     		mov	r3, r7
 3699 0116 0C33     		add	r3, r3, #12
 3700 0118 3A1C     		mov	r2, r7
 3701 011a 0C32     		add	r2, r2, #12
 3702 011c 1288     		ldrh	r2, [r2]
 3703 011e 0A43     		orr	r2, r1
 3704 0120 1A80     		strh	r2, [r3]
1002:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1003:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the Output Polarity level */
1004:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC4P));
 3705              		.loc 1 1004 0
 3706 0122 3B1C     		mov	r3, r7
 3707 0124 0A33     		add	r3, r3, #10
 3708 0126 3A1C     		mov	r2, r7
 3709 0128 0A32     		add	r2, r2, #10
 3710 012a 1188     		ldrh	r1, [r2]
 3711 012c 334A     		ldr	r2, .L153+36
 3712 012e 0A40     		and	r2, r1
 3713 0130 1A80     		strh	r2, [r3]
1005:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the Output Compare Polarity */
1006:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 12);
 3714              		.loc 1 1006 0
 3715 0132 3B68     		ldr	r3, [r7]
 3716 0134 9B89     		ldrh	r3, [r3, #12]
 3717 0136 1B03     		lsl	r3, r3, #12
 3718 0138 99B2     		uxth	r1, r3
 3719 013a 3B1C     		mov	r3, r7
 3720 013c 0A33     		add	r3, r3, #10
 3721 013e 3A1C     		mov	r2, r7
 3722 0140 0A32     		add	r2, r2, #10
 3723 0142 1288     		ldrh	r2, [r2]
 3724 0144 0A43     		orr	r2, r1
 3725 0146 1A80     		strh	r2, [r3]
1007:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1008:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the Output State */
1009:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 12);
 3726              		.loc 1 1009 0
 3727 0148 3B68     		ldr	r3, [r7]
 3728 014a 5B88     		ldrh	r3, [r3, #2]
 3729 014c 1B03     		lsl	r3, r3, #12
 3730 014e 99B2     		uxth	r1, r3
 3731 0150 3B1C     		mov	r3, r7
 3732 0152 0A33     		add	r3, r3, #10
 3733 0154 3A1C     		mov	r2, r7
 3734 0156 0A32     		add	r2, r2, #10
 3735 0158 1288     		ldrh	r2, [r2]
 3736 015a 0A43     		orr	r2, r1
 3737 015c 1A80     		strh	r2, [r3]
1010:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     
1011:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   if(TIMx == TIM1)
 3738              		.loc 1 1011 0
 3739 015e 7A68     		ldr	r2, [r7, #4]
 3740 0160 1D4B     		ldr	r3, .L153
 3741 0162 9A42     		cmp	r2, r3
 3742 0164 22D1     		bne	.L151
1012:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
1013:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 3743              		.loc 1 1013 0
 3744 0166 3B68     		ldr	r3, [r7]
 3745 0168 1A8A     		ldrh	r2, [r3, #16]
 3746 016a 8023     		mov	r3, #128
 3747 016c 5B00     		lsl	r3, r3, #1
 3748 016e 9A42     		cmp	r2, r3
 3749 0170 09D0     		beq	.L152
 3750              		.loc 1 1013 0 is_stmt 0 discriminator 1
 3751 0172 3B68     		ldr	r3, [r7]
 3752 0174 1B8A     		ldrh	r3, [r3, #16]
 3753 0176 002B     		cmp	r3, #0
 3754 0178 05D0     		beq	.L152
 3755 017a 194A     		ldr	r2, .L153+8
 3756 017c 204B     		ldr	r3, .L153+40
 3757 017e 101C     		mov	r0, r2
 3758 0180 191C     		mov	r1, r3
 3759 0182 FFF7FEFF 		bl	assert_failed
 3760              	.L152:
1014:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Reset the Ouput Compare IDLE State */
1015:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS4));
 3761              		.loc 1 1015 0 is_stmt 1
 3762 0186 3B1C     		mov	r3, r7
 3763 0188 0E33     		add	r3, r3, #14
 3764 018a 3A1C     		mov	r2, r7
 3765 018c 0E32     		add	r2, r2, #14
 3766 018e 1188     		ldrh	r1, [r2]
 3767 0190 1C4A     		ldr	r2, .L153+44
 3768 0192 0A40     		and	r2, r1
 3769 0194 1A80     		strh	r2, [r3]
1016:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the Output Idle state */
1017:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 6);
 3770              		.loc 1 1017 0
 3771 0196 3B68     		ldr	r3, [r7]
 3772 0198 1B8A     		ldrh	r3, [r3, #16]
 3773 019a 9B01     		lsl	r3, r3, #6
 3774 019c 99B2     		uxth	r1, r3
 3775 019e 3B1C     		mov	r3, r7
 3776 01a0 0E33     		add	r3, r3, #14
 3777 01a2 3A1C     		mov	r2, r7
 3778 01a4 0E32     		add	r2, r2, #14
 3779 01a6 1288     		ldrh	r2, [r2]
 3780 01a8 0A43     		orr	r2, r1
 3781 01aa 1A80     		strh	r2, [r3]
 3782              	.L151:
1018:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
1019:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CR2 */
1020:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CR2 = tmpcr2;
 3783              		.loc 1 1020 0
 3784 01ac 7B68     		ldr	r3, [r7, #4]
 3785 01ae 3A1C     		mov	r2, r7
 3786 01b0 0E32     		add	r2, r2, #14
 3787 01b2 1288     		ldrh	r2, [r2]
 3788 01b4 9A80     		strh	r2, [r3, #4]
1021:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1022:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCMR2 */  
1023:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 3789              		.loc 1 1023 0
 3790 01b6 7B68     		ldr	r3, [r7, #4]
 3791 01b8 3A1C     		mov	r2, r7
 3792 01ba 0C32     		add	r2, r2, #12
 3793 01bc 1288     		ldrh	r2, [r2]
 3794 01be 9A83     		strh	r2, [r3, #28]
1024:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1025:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the Capture Compare Register value */
1026:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
 3795              		.loc 1 1026 0
 3796 01c0 3B68     		ldr	r3, [r7]
 3797 01c2 9A68     		ldr	r2, [r3, #8]
 3798 01c4 7B68     		ldr	r3, [r7, #4]
 3799 01c6 1A64     		str	r2, [r3, #64]
1027:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1028:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCER */
1029:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCER = tmpccer;
 3800              		.loc 1 1029 0
 3801 01c8 7B68     		ldr	r3, [r7, #4]
 3802 01ca 3A1C     		mov	r2, r7
 3803 01cc 0A32     		add	r2, r2, #10
 3804 01ce 1288     		ldrh	r2, [r2]
 3805 01d0 1A84     		strh	r2, [r3, #32]
1030:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 3806              		.loc 1 1030 0
 3807 01d2 BD46     		mov	sp, r7
 3808 01d4 04B0     		add	sp, sp, #16
 3809              		@ sp needed
 3810 01d6 80BD     		pop	{r7, pc}
 3811              	.L154:
 3812              		.align	2
 3813              	.L153:
 3814 01d8 002C0140 		.word	1073818624
 3815 01dc 00040040 		.word	1073742848
 3816 01e0 00000000 		.word	.LC0
 3817 01e4 D5030000 		.word	981
 3818 01e8 D6030000 		.word	982
 3819 01ec D7030000 		.word	983
 3820 01f0 FFEFFFFF 		.word	-4097
 3821 01f4 FF8FFFFF 		.word	-28673
 3822 01f8 FFFCFFFF 		.word	-769
 3823 01fc FFDFFFFF 		.word	-8193
 3824 0200 F5030000 		.word	1013
 3825 0204 FFBFFFFF 		.word	-16385
 3826              		.cfi_endproc
 3827              	.LFE53:
 3829              		.section	.text.TIM_OCStructInit,"ax",%progbits
 3830              		.align	2
 3831              		.global	TIM_OCStructInit
 3832              		.code	16
 3833              		.thumb_func
 3835              	TIM_OCStructInit:
 3836              	.LFB54:
1031:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1032:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1033:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Fills each TIM_OCInitStruct member with its default value.
1034:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_OCInitStruct : pointer to a TIM_OCInitTypeDef structure which will
1035:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         be initialized.
1036:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1037:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1038:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct)
1039:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 3837              		.loc 1 1039 0
 3838              		.cfi_startproc
 3839 0000 80B5     		push	{r7, lr}
 3840              		.cfi_def_cfa_offset 8
 3841              		.cfi_offset 7, -8
 3842              		.cfi_offset 14, -4
 3843 0002 82B0     		sub	sp, sp, #8
 3844              		.cfi_def_cfa_offset 16
 3845 0004 00AF     		add	r7, sp, #0
 3846              		.cfi_def_cfa_register 7
 3847 0006 7860     		str	r0, [r7, #4]
1040:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the default configuration */
1041:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIM_OCInitStruct->TIM_OCMode = TIM_OCMode_Timing;
 3848              		.loc 1 1041 0
 3849 0008 7B68     		ldr	r3, [r7, #4]
 3850 000a 0022     		mov	r2, #0
 3851 000c 1A80     		strh	r2, [r3]
1042:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 3852              		.loc 1 1042 0
 3853 000e 7B68     		ldr	r3, [r7, #4]
 3854 0010 0022     		mov	r2, #0
 3855 0012 5A80     		strh	r2, [r3, #2]
1043:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 3856              		.loc 1 1043 0
 3857 0014 7B68     		ldr	r3, [r7, #4]
 3858 0016 0022     		mov	r2, #0
 3859 0018 9A80     		strh	r2, [r3, #4]
1044:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x0000000;
 3860              		.loc 1 1044 0
 3861 001a 7B68     		ldr	r3, [r7, #4]
 3862 001c 0022     		mov	r2, #0
 3863 001e 9A60     		str	r2, [r3, #8]
1045:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 3864              		.loc 1 1045 0
 3865 0020 7B68     		ldr	r3, [r7, #4]
 3866 0022 0022     		mov	r2, #0
 3867 0024 9A81     		strh	r2, [r3, #12]
1046:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 3868              		.loc 1 1046 0
 3869 0026 7B68     		ldr	r3, [r7, #4]
 3870 0028 0022     		mov	r2, #0
 3871 002a DA81     		strh	r2, [r3, #14]
1047:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 3872              		.loc 1 1047 0
 3873 002c 7B68     		ldr	r3, [r7, #4]
 3874 002e 0022     		mov	r2, #0
 3875 0030 1A82     		strh	r2, [r3, #16]
1048:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 3876              		.loc 1 1048 0
 3877 0032 7B68     		ldr	r3, [r7, #4]
 3878 0034 0022     		mov	r2, #0
 3879 0036 5A82     		strh	r2, [r3, #18]
1049:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 3880              		.loc 1 1049 0
 3881 0038 BD46     		mov	sp, r7
 3882 003a 02B0     		add	sp, sp, #8
 3883              		@ sp needed
 3884 003c 80BD     		pop	{r7, pc}
 3885              		.cfi_endproc
 3886              	.LFE54:
 3888 003e C046     		.section	.text.TIM_SelectOCxM,"ax",%progbits
 3889              		.align	2
 3890              		.global	TIM_SelectOCxM
 3891              		.code	16
 3892              		.thumb_func
 3894              	TIM_SelectOCxM:
 3895              	.LFB55:
1050:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1051:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1052:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Selects the TIM Output Compare Mode.
1053:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @note   This function disables the selected channel before changing the Output
1054:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         Compare Mode.
1055:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         User has to enable this channel using TIM_CCxCmd and TIM_CCxNCmd functions.
1056:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 14, 15, 16 or 17 to select the TIM peripheral.
1057:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1058:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
1059:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_Channel_1: TIM Channel 1
1060:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_Channel_2: TIM Channel 2
1061:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_Channel_3: TIM Channel 3
1062:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_Channel_4: TIM Channel 4
1063:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_OCMode: specifies the TIM Output Compare Mode.
1064:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
1065:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCMode_Timing
1066:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCMode_Active
1067:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCMode_Toggle
1068:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCMode_PWM1
1069:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCMode_PWM2
1070:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ForcedAction_Active
1071:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ForcedAction_InActive
1072:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1073:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1074:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode)
1075:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 3896              		.loc 1 1075 0
 3897              		.cfi_startproc
 3898 0000 80B5     		push	{r7, lr}
 3899              		.cfi_def_cfa_offset 8
 3900              		.cfi_offset 7, -8
 3901              		.cfi_offset 14, -4
 3902 0002 84B0     		sub	sp, sp, #16
 3903              		.cfi_def_cfa_offset 24
 3904 0004 00AF     		add	r7, sp, #0
 3905              		.cfi_def_cfa_register 7
 3906 0006 7860     		str	r0, [r7, #4]
 3907 0008 BB1C     		add	r3, r7, #2
 3908 000a 1980     		strh	r1, [r3]
 3909 000c 3B1C     		mov	r3, r7
 3910 000e 1A80     		strh	r2, [r3]
1076:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint32_t tmp = 0;
 3911              		.loc 1 1076 0
 3912 0010 0023     		mov	r3, #0
 3913 0012 FB60     		str	r3, [r7, #12]
1077:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmp1 = 0;
 3914              		.loc 1 1077 0
 3915 0014 3B1C     		mov	r3, r7
 3916 0016 0A33     		add	r3, r3, #10
 3917 0018 0022     		mov	r2, #0
 3918 001a 1A80     		strh	r2, [r3]
1078:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1079:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1080:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));  
 3919              		.loc 1 1080 0
 3920 001c 7A68     		ldr	r2, [r7, #4]
 3921 001e 4C4B     		ldr	r3, .L162
 3922 0020 9A42     		cmp	r2, r3
 3923 0022 1FD0     		beq	.L157
 3924              		.loc 1 1080 0 is_stmt 0 discriminator 1
 3925 0024 7A68     		ldr	r2, [r7, #4]
 3926 0026 8023     		mov	r3, #128
 3927 0028 DB05     		lsl	r3, r3, #23
 3928 002a 9A42     		cmp	r2, r3
 3929 002c 1AD0     		beq	.L157
 3930 002e 7A68     		ldr	r2, [r7, #4]
 3931 0030 484B     		ldr	r3, .L162+4
 3932 0032 9A42     		cmp	r2, r3
 3933 0034 16D0     		beq	.L157
 3934 0036 7A68     		ldr	r2, [r7, #4]
 3935 0038 474B     		ldr	r3, .L162+8
 3936 003a 9A42     		cmp	r2, r3
 3937 003c 12D0     		beq	.L157
 3938 003e 7A68     		ldr	r2, [r7, #4]
 3939 0040 464B     		ldr	r3, .L162+12
 3940 0042 9A42     		cmp	r2, r3
 3941 0044 0ED0     		beq	.L157
 3942 0046 7A68     		ldr	r2, [r7, #4]
 3943 0048 454B     		ldr	r3, .L162+16
 3944 004a 9A42     		cmp	r2, r3
 3945 004c 0AD0     		beq	.L157
 3946 004e 7A68     		ldr	r2, [r7, #4]
 3947 0050 444B     		ldr	r3, .L162+20
 3948 0052 9A42     		cmp	r2, r3
 3949 0054 06D0     		beq	.L157
 3950 0056 444A     		ldr	r2, .L162+24
 3951 0058 8723     		mov	r3, #135
 3952 005a DB00     		lsl	r3, r3, #3
 3953 005c 101C     		mov	r0, r2
 3954 005e 191C     		mov	r1, r3
 3955 0060 FFF7FEFF 		bl	assert_failed
 3956              	.L157:
1081:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OCM(TIM_OCMode));
 3957              		.loc 1 1081 0 is_stmt 1
 3958 0064 3B1C     		mov	r3, r7
 3959 0066 1B88     		ldrh	r3, [r3]
 3960 0068 002B     		cmp	r3, #0
 3961 006a 21D0     		beq	.L158
 3962              		.loc 1 1081 0 is_stmt 0 discriminator 1
 3963 006c 3B1C     		mov	r3, r7
 3964 006e 1B88     		ldrh	r3, [r3]
 3965 0070 102B     		cmp	r3, #16
 3966 0072 1DD0     		beq	.L158
 3967 0074 3B1C     		mov	r3, r7
 3968 0076 1B88     		ldrh	r3, [r3]
 3969 0078 202B     		cmp	r3, #32
 3970 007a 19D0     		beq	.L158
 3971 007c 3B1C     		mov	r3, r7
 3972 007e 1B88     		ldrh	r3, [r3]
 3973 0080 302B     		cmp	r3, #48
 3974 0082 15D0     		beq	.L158
 3975 0084 3B1C     		mov	r3, r7
 3976 0086 1B88     		ldrh	r3, [r3]
 3977 0088 602B     		cmp	r3, #96
 3978 008a 11D0     		beq	.L158
 3979 008c 3B1C     		mov	r3, r7
 3980 008e 1B88     		ldrh	r3, [r3]
 3981 0090 702B     		cmp	r3, #112
 3982 0092 0DD0     		beq	.L158
 3983 0094 3B1C     		mov	r3, r7
 3984 0096 1B88     		ldrh	r3, [r3]
 3985 0098 502B     		cmp	r3, #80
 3986 009a 09D0     		beq	.L158
 3987 009c 3B1C     		mov	r3, r7
 3988 009e 1B88     		ldrh	r3, [r3]
 3989 00a0 402B     		cmp	r3, #64
 3990 00a2 05D0     		beq	.L158
 3991 00a4 304A     		ldr	r2, .L162+24
 3992 00a6 314B     		ldr	r3, .L162+28
 3993 00a8 101C     		mov	r0, r2
 3994 00aa 191C     		mov	r1, r3
 3995 00ac FFF7FEFF 		bl	assert_failed
 3996              	.L158:
1082:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1083:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmp = (uint32_t) TIMx;
 3997              		.loc 1 1083 0 is_stmt 1
 3998 00b0 7B68     		ldr	r3, [r7, #4]
 3999 00b2 FB60     		str	r3, [r7, #12]
1084:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmp += CCMR_OFFSET;
 4000              		.loc 1 1084 0
 4001 00b4 FB68     		ldr	r3, [r7, #12]
 4002 00b6 1833     		add	r3, r3, #24
 4003 00b8 FB60     		str	r3, [r7, #12]
1085:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1086:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmp1 = CCER_CCE_SET << (uint16_t)TIM_Channel;
 4004              		.loc 1 1086 0
 4005 00ba BB1C     		add	r3, r7, #2
 4006 00bc 1B88     		ldrh	r3, [r3]
 4007 00be 0122     		mov	r2, #1
 4008 00c0 9A40     		lsl	r2, r2, r3
 4009 00c2 3B1C     		mov	r3, r7
 4010 00c4 0A33     		add	r3, r3, #10
 4011 00c6 1A80     		strh	r2, [r3]
1087:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1088:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Disable the Channel: Reset the CCxE Bit */
1089:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp1;
 4012              		.loc 1 1089 0
 4013 00c8 7B68     		ldr	r3, [r7, #4]
 4014 00ca 1B8C     		ldrh	r3, [r3, #32]
 4015 00cc 9BB2     		uxth	r3, r3
 4016 00ce 3A1C     		mov	r2, r7
 4017 00d0 0A32     		add	r2, r2, #10
 4018 00d2 1288     		ldrh	r2, [r2]
 4019 00d4 D243     		mvn	r2, r2
 4020 00d6 92B2     		uxth	r2, r2
 4021 00d8 1340     		and	r3, r2
 4022 00da 9AB2     		uxth	r2, r3
 4023 00dc 7B68     		ldr	r3, [r7, #4]
 4024 00de 1A84     		strh	r2, [r3, #32]
1090:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1091:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   if((TIM_Channel == TIM_Channel_1) ||(TIM_Channel == TIM_Channel_3))
 4025              		.loc 1 1091 0
 4026 00e0 BB1C     		add	r3, r7, #2
 4027 00e2 1B88     		ldrh	r3, [r3]
 4028 00e4 002B     		cmp	r3, #0
 4029 00e6 03D0     		beq	.L159
 4030              		.loc 1 1091 0 is_stmt 0 discriminator 1
 4031 00e8 BB1C     		add	r3, r7, #2
 4032 00ea 1B88     		ldrh	r3, [r3]
 4033 00ec 082B     		cmp	r3, #8
 4034 00ee 14D1     		bne	.L160
 4035              	.L159:
1092:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
1093:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmp += (TIM_Channel>>1);
 4036              		.loc 1 1093 0 is_stmt 1
 4037 00f0 BB1C     		add	r3, r7, #2
 4038 00f2 1B88     		ldrh	r3, [r3]
 4039 00f4 5B08     		lsr	r3, r3, #1
 4040 00f6 9BB2     		uxth	r3, r3
 4041 00f8 FA68     		ldr	r2, [r7, #12]
 4042 00fa D318     		add	r3, r2, r3
 4043 00fc FB60     		str	r3, [r7, #12]
1094:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1095:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1096:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     *(__IO uint32_t *) tmp &= (uint32_t)~((uint32_t)TIM_CCMR1_OC1M);
 4044              		.loc 1 1096 0
 4045 00fe FB68     		ldr	r3, [r7, #12]
 4046 0100 FA68     		ldr	r2, [r7, #12]
 4047 0102 1268     		ldr	r2, [r2]
 4048 0104 7021     		mov	r1, #112
 4049 0106 8A43     		bic	r2, r1
 4050 0108 1A60     		str	r2, [r3]
1097:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****    
1098:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1099:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     *(__IO uint32_t *) tmp |= TIM_OCMode;
 4051              		.loc 1 1099 0
 4052 010a FB68     		ldr	r3, [r7, #12]
 4053 010c FA68     		ldr	r2, [r7, #12]
 4054 010e 1168     		ldr	r1, [r2]
 4055 0110 3A1C     		mov	r2, r7
 4056 0112 1288     		ldrh	r2, [r2]
 4057 0114 0A43     		orr	r2, r1
 4058 0116 1A60     		str	r2, [r3]
 4059 0118 17E0     		b	.L156
 4060              	.L160:
1100:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
1101:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   else
1102:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
1103:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     tmp += (uint16_t)(TIM_Channel - (uint16_t)4)>> (uint16_t)1;
 4061              		.loc 1 1103 0
 4062 011a BB1C     		add	r3, r7, #2
 4063 011c 1B88     		ldrh	r3, [r3]
 4064 011e 043B     		sub	r3, r3, #4
 4065 0120 9BB2     		uxth	r3, r3
 4066 0122 5B08     		lsr	r3, r3, #1
 4067 0124 9BB2     		uxth	r3, r3
 4068 0126 FA68     		ldr	r2, [r7, #12]
 4069 0128 D318     		add	r3, r2, r3
 4070 012a FB60     		str	r3, [r7, #12]
1104:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1105:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1106:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     *(__IO uint32_t *) tmp &= (uint32_t)~((uint32_t)TIM_CCMR1_OC2M);
 4071              		.loc 1 1106 0
 4072 012c FB68     		ldr	r3, [r7, #12]
 4073 012e FA68     		ldr	r2, [r7, #12]
 4074 0130 1168     		ldr	r1, [r2]
 4075 0132 0F4A     		ldr	r2, .L162+32
 4076 0134 0A40     		and	r2, r1
 4077 0136 1A60     		str	r2, [r3]
1107:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     
1108:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1109:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     *(__IO uint32_t *) tmp |= (uint16_t)(TIM_OCMode << 8);
 4078              		.loc 1 1109 0
 4079 0138 FB68     		ldr	r3, [r7, #12]
 4080 013a FA68     		ldr	r2, [r7, #12]
 4081 013c 1168     		ldr	r1, [r2]
 4082 013e 3A1C     		mov	r2, r7
 4083 0140 1288     		ldrh	r2, [r2]
 4084 0142 1202     		lsl	r2, r2, #8
 4085 0144 92B2     		uxth	r2, r2
 4086 0146 0A43     		orr	r2, r1
 4087 0148 1A60     		str	r2, [r3]
 4088              	.L156:
1110:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
1111:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 4089              		.loc 1 1111 0
 4090 014a BD46     		mov	sp, r7
 4091 014c 04B0     		add	sp, sp, #16
 4092              		@ sp needed
 4093 014e 80BD     		pop	{r7, pc}
 4094              	.L163:
 4095              		.align	2
 4096              	.L162:
 4097 0150 002C0140 		.word	1073818624
 4098 0154 00040040 		.word	1073742848
 4099 0158 00200040 		.word	1073750016
 4100 015c 00400140 		.word	1073823744
 4101 0160 00440140 		.word	1073824768
 4102 0164 00480140 		.word	1073825792
 4103 0168 00000000 		.word	.LC0
 4104 016c 39040000 		.word	1081
 4105 0170 FF8FFFFF 		.word	-28673
 4106              		.cfi_endproc
 4107              	.LFE55:
 4109              		.section	.text.TIM_SetCompare1,"ax",%progbits
 4110              		.align	2
 4111              		.global	TIM_SetCompare1
 4112              		.code	16
 4113              		.thumb_func
 4115              	TIM_SetCompare1:
 4116              	.LFB56:
1112:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1113:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1114:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Sets the TIMx Capture Compare1 Register value
1115:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 14, 15, 16 or 17 to select the TIM peripheral.
1116:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  Compare1: specifies the Capture Compare1 register new value.
1117:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1118:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1119:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_SetCompare1(TIM_TypeDef* TIMx, uint32_t Compare1)
1120:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 4117              		.loc 1 1120 0
 4118              		.cfi_startproc
 4119 0000 80B5     		push	{r7, lr}
 4120              		.cfi_def_cfa_offset 8
 4121              		.cfi_offset 7, -8
 4122              		.cfi_offset 14, -4
 4123 0002 82B0     		sub	sp, sp, #8
 4124              		.cfi_def_cfa_offset 16
 4125 0004 00AF     		add	r7, sp, #0
 4126              		.cfi_def_cfa_register 7
 4127 0006 7860     		str	r0, [r7, #4]
 4128 0008 3960     		str	r1, [r7]
1121:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1122:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
 4129              		.loc 1 1122 0
 4130 000a 7A68     		ldr	r2, [r7, #4]
 4131 000c 134B     		ldr	r3, .L166
 4132 000e 9A42     		cmp	r2, r3
 4133 0010 1ED0     		beq	.L165
 4134              		.loc 1 1122 0 is_stmt 0 discriminator 1
 4135 0012 7A68     		ldr	r2, [r7, #4]
 4136 0014 8023     		mov	r3, #128
 4137 0016 DB05     		lsl	r3, r3, #23
 4138 0018 9A42     		cmp	r2, r3
 4139 001a 19D0     		beq	.L165
 4140 001c 7A68     		ldr	r2, [r7, #4]
 4141 001e 104B     		ldr	r3, .L166+4
 4142 0020 9A42     		cmp	r2, r3
 4143 0022 15D0     		beq	.L165
 4144 0024 7A68     		ldr	r2, [r7, #4]
 4145 0026 0F4B     		ldr	r3, .L166+8
 4146 0028 9A42     		cmp	r2, r3
 4147 002a 11D0     		beq	.L165
 4148 002c 7A68     		ldr	r2, [r7, #4]
 4149 002e 0E4B     		ldr	r3, .L166+12
 4150 0030 9A42     		cmp	r2, r3
 4151 0032 0DD0     		beq	.L165
 4152 0034 7A68     		ldr	r2, [r7, #4]
 4153 0036 0D4B     		ldr	r3, .L166+16
 4154 0038 9A42     		cmp	r2, r3
 4155 003a 09D0     		beq	.L165
 4156 003c 7A68     		ldr	r2, [r7, #4]
 4157 003e 0C4B     		ldr	r3, .L166+20
 4158 0040 9A42     		cmp	r2, r3
 4159 0042 05D0     		beq	.L165
 4160 0044 0B4A     		ldr	r2, .L166+24
 4161 0046 0C4B     		ldr	r3, .L166+28
 4162 0048 101C     		mov	r0, r2
 4163 004a 191C     		mov	r1, r3
 4164 004c FFF7FEFF 		bl	assert_failed
 4165              	.L165:
1123:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1124:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the Capture Compare1 Register value */
1125:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCR1 = Compare1;
 4166              		.loc 1 1125 0 is_stmt 1
 4167 0050 7B68     		ldr	r3, [r7, #4]
 4168 0052 3A68     		ldr	r2, [r7]
 4169 0054 5A63     		str	r2, [r3, #52]
1126:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 4170              		.loc 1 1126 0
 4171 0056 BD46     		mov	sp, r7
 4172 0058 02B0     		add	sp, sp, #8
 4173              		@ sp needed
 4174 005a 80BD     		pop	{r7, pc}
 4175              	.L167:
 4176              		.align	2
 4177              	.L166:
 4178 005c 002C0140 		.word	1073818624
 4179 0060 00040040 		.word	1073742848
 4180 0064 00200040 		.word	1073750016
 4181 0068 00400140 		.word	1073823744
 4182 006c 00440140 		.word	1073824768
 4183 0070 00480140 		.word	1073825792
 4184 0074 00000000 		.word	.LC0
 4185 0078 62040000 		.word	1122
 4186              		.cfi_endproc
 4187              	.LFE56:
 4189              		.section	.text.TIM_SetCompare2,"ax",%progbits
 4190              		.align	2
 4191              		.global	TIM_SetCompare2
 4192              		.code	16
 4193              		.thumb_func
 4195              	TIM_SetCompare2:
 4196              	.LFB57:
1127:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1128:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1129:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Sets the TIMx Capture Compare2 Register value
1130:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3 or 15 to select the TIM peripheral.
1131:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  Compare2: specifies the Capture Compare2 register new value.
1132:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1133:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1134:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_SetCompare2(TIM_TypeDef* TIMx, uint32_t Compare2)
1135:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 4197              		.loc 1 1135 0
 4198              		.cfi_startproc
 4199 0000 80B5     		push	{r7, lr}
 4200              		.cfi_def_cfa_offset 8
 4201              		.cfi_offset 7, -8
 4202              		.cfi_offset 14, -4
 4203 0002 82B0     		sub	sp, sp, #8
 4204              		.cfi_def_cfa_offset 16
 4205 0004 00AF     		add	r7, sp, #0
 4206              		.cfi_def_cfa_register 7
 4207 0006 7860     		str	r0, [r7, #4]
 4208 0008 3960     		str	r1, [r7]
1136:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1137:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 4209              		.loc 1 1137 0
 4210 000a 7A68     		ldr	r2, [r7, #4]
 4211 000c 0D4B     		ldr	r3, .L170
 4212 000e 9A42     		cmp	r2, r3
 4213 0010 12D0     		beq	.L169
 4214              		.loc 1 1137 0 is_stmt 0 discriminator 1
 4215 0012 7A68     		ldr	r2, [r7, #4]
 4216 0014 8023     		mov	r3, #128
 4217 0016 DB05     		lsl	r3, r3, #23
 4218 0018 9A42     		cmp	r2, r3
 4219 001a 0DD0     		beq	.L169
 4220 001c 7A68     		ldr	r2, [r7, #4]
 4221 001e 0A4B     		ldr	r3, .L170+4
 4222 0020 9A42     		cmp	r2, r3
 4223 0022 09D0     		beq	.L169
 4224 0024 7A68     		ldr	r2, [r7, #4]
 4225 0026 094B     		ldr	r3, .L170+8
 4226 0028 9A42     		cmp	r2, r3
 4227 002a 05D0     		beq	.L169
 4228 002c 084A     		ldr	r2, .L170+12
 4229 002e 094B     		ldr	r3, .L170+16
 4230 0030 101C     		mov	r0, r2
 4231 0032 191C     		mov	r1, r3
 4232 0034 FFF7FEFF 		bl	assert_failed
 4233              	.L169:
1138:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1139:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the Capture Compare2 Register value */
1140:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCR2 = Compare2;
 4234              		.loc 1 1140 0 is_stmt 1
 4235 0038 7B68     		ldr	r3, [r7, #4]
 4236 003a 3A68     		ldr	r2, [r7]
 4237 003c 9A63     		str	r2, [r3, #56]
1141:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 4238              		.loc 1 1141 0
 4239 003e BD46     		mov	sp, r7
 4240 0040 02B0     		add	sp, sp, #8
 4241              		@ sp needed
 4242 0042 80BD     		pop	{r7, pc}
 4243              	.L171:
 4244              		.align	2
 4245              	.L170:
 4246 0044 002C0140 		.word	1073818624
 4247 0048 00040040 		.word	1073742848
 4248 004c 00400140 		.word	1073823744
 4249 0050 00000000 		.word	.LC0
 4250 0054 71040000 		.word	1137
 4251              		.cfi_endproc
 4252              	.LFE57:
 4254              		.section	.text.TIM_SetCompare3,"ax",%progbits
 4255              		.align	2
 4256              		.global	TIM_SetCompare3
 4257              		.code	16
 4258              		.thumb_func
 4260              	TIM_SetCompare3:
 4261              	.LFB58:
1142:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1143:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1144:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Sets the TIMx Capture Compare3 Register value
1145:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2 or 3 to select the TIM peripheral.
1146:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  Compare3: specifies the Capture Compare3 register new value.
1147:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1148:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1149:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_SetCompare3(TIM_TypeDef* TIMx, uint32_t Compare3)
1150:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 4262              		.loc 1 1150 0
 4263              		.cfi_startproc
 4264 0000 80B5     		push	{r7, lr}
 4265              		.cfi_def_cfa_offset 8
 4266              		.cfi_offset 7, -8
 4267              		.cfi_offset 14, -4
 4268 0002 82B0     		sub	sp, sp, #8
 4269              		.cfi_def_cfa_offset 16
 4270 0004 00AF     		add	r7, sp, #0
 4271              		.cfi_def_cfa_register 7
 4272 0006 7860     		str	r0, [r7, #4]
 4273 0008 3960     		str	r1, [r7]
1151:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1152:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 4274              		.loc 1 1152 0
 4275 000a 7A68     		ldr	r2, [r7, #4]
 4276 000c 0C4B     		ldr	r3, .L174
 4277 000e 9A42     		cmp	r2, r3
 4278 0010 0FD0     		beq	.L173
 4279              		.loc 1 1152 0 is_stmt 0 discriminator 1
 4280 0012 7A68     		ldr	r2, [r7, #4]
 4281 0014 8023     		mov	r3, #128
 4282 0016 DB05     		lsl	r3, r3, #23
 4283 0018 9A42     		cmp	r2, r3
 4284 001a 0AD0     		beq	.L173
 4285 001c 7A68     		ldr	r2, [r7, #4]
 4286 001e 094B     		ldr	r3, .L174+4
 4287 0020 9A42     		cmp	r2, r3
 4288 0022 06D0     		beq	.L173
 4289 0024 084A     		ldr	r2, .L174+8
 4290 0026 9023     		mov	r3, #144
 4291 0028 DB00     		lsl	r3, r3, #3
 4292 002a 101C     		mov	r0, r2
 4293 002c 191C     		mov	r1, r3
 4294 002e FFF7FEFF 		bl	assert_failed
 4295              	.L173:
1153:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1154:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the Capture Compare3 Register value */
1155:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCR3 = Compare3;
 4296              		.loc 1 1155 0 is_stmt 1
 4297 0032 7B68     		ldr	r3, [r7, #4]
 4298 0034 3A68     		ldr	r2, [r7]
 4299 0036 DA63     		str	r2, [r3, #60]
1156:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 4300              		.loc 1 1156 0
 4301 0038 BD46     		mov	sp, r7
 4302 003a 02B0     		add	sp, sp, #8
 4303              		@ sp needed
 4304 003c 80BD     		pop	{r7, pc}
 4305              	.L175:
 4306 003e C046     		.align	2
 4307              	.L174:
 4308 0040 002C0140 		.word	1073818624
 4309 0044 00040040 		.word	1073742848
 4310 0048 00000000 		.word	.LC0
 4311              		.cfi_endproc
 4312              	.LFE58:
 4314              		.section	.text.TIM_SetCompare4,"ax",%progbits
 4315              		.align	2
 4316              		.global	TIM_SetCompare4
 4317              		.code	16
 4318              		.thumb_func
 4320              	TIM_SetCompare4:
 4321              	.LFB59:
1157:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1158:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1159:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Sets the TIMx Capture Compare4 Register value
1160:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2 or 3 to select the TIM peripheral.
1161:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  Compare4: specifies the Capture Compare4 register new value.
1162:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1163:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1164:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_SetCompare4(TIM_TypeDef* TIMx, uint32_t Compare4)
1165:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 4322              		.loc 1 1165 0
 4323              		.cfi_startproc
 4324 0000 80B5     		push	{r7, lr}
 4325              		.cfi_def_cfa_offset 8
 4326              		.cfi_offset 7, -8
 4327              		.cfi_offset 14, -4
 4328 0002 82B0     		sub	sp, sp, #8
 4329              		.cfi_def_cfa_offset 16
 4330 0004 00AF     		add	r7, sp, #0
 4331              		.cfi_def_cfa_register 7
 4332 0006 7860     		str	r0, [r7, #4]
 4333 0008 3960     		str	r1, [r7]
1166:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1167:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 4334              		.loc 1 1167 0
 4335 000a 7A68     		ldr	r2, [r7, #4]
 4336 000c 0B4B     		ldr	r3, .L178
 4337 000e 9A42     		cmp	r2, r3
 4338 0010 0ED0     		beq	.L177
 4339              		.loc 1 1167 0 is_stmt 0 discriminator 1
 4340 0012 7A68     		ldr	r2, [r7, #4]
 4341 0014 8023     		mov	r3, #128
 4342 0016 DB05     		lsl	r3, r3, #23
 4343 0018 9A42     		cmp	r2, r3
 4344 001a 09D0     		beq	.L177
 4345 001c 7A68     		ldr	r2, [r7, #4]
 4346 001e 084B     		ldr	r3, .L178+4
 4347 0020 9A42     		cmp	r2, r3
 4348 0022 05D0     		beq	.L177
 4349 0024 074A     		ldr	r2, .L178+8
 4350 0026 084B     		ldr	r3, .L178+12
 4351 0028 101C     		mov	r0, r2
 4352 002a 191C     		mov	r1, r3
 4353 002c FFF7FEFF 		bl	assert_failed
 4354              	.L177:
1168:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1169:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the Capture Compare4 Register value */
1170:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCR4 = Compare4;
 4355              		.loc 1 1170 0 is_stmt 1
 4356 0030 7B68     		ldr	r3, [r7, #4]
 4357 0032 3A68     		ldr	r2, [r7]
 4358 0034 1A64     		str	r2, [r3, #64]
1171:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 4359              		.loc 1 1171 0
 4360 0036 BD46     		mov	sp, r7
 4361 0038 02B0     		add	sp, sp, #8
 4362              		@ sp needed
 4363 003a 80BD     		pop	{r7, pc}
 4364              	.L179:
 4365              		.align	2
 4366              	.L178:
 4367 003c 002C0140 		.word	1073818624
 4368 0040 00040040 		.word	1073742848
 4369 0044 00000000 		.word	.LC0
 4370 0048 8F040000 		.word	1167
 4371              		.cfi_endproc
 4372              	.LFE59:
 4374              		.section	.text.TIM_ForcedOC1Config,"ax",%progbits
 4375              		.align	2
 4376              		.global	TIM_ForcedOC1Config
 4377              		.code	16
 4378              		.thumb_func
 4380              	TIM_ForcedOC1Config:
 4381              	.LFB60:
1172:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1173:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1174:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Forces the TIMx output 1 waveform to active or inactive level.
1175:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 14, 15, 16 or 17 to select the TIM peripheral.
1176:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1177:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
1178:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ForcedAction_Active: Force active level on OC1REF
1179:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ForcedAction_InActive: Force inactive level on OC1REF.
1180:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1181:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1182:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_ForcedOC1Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1183:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 4382              		.loc 1 1183 0
 4383              		.cfi_startproc
 4384 0000 80B5     		push	{r7, lr}
 4385              		.cfi_def_cfa_offset 8
 4386              		.cfi_offset 7, -8
 4387              		.cfi_offset 14, -4
 4388 0002 84B0     		sub	sp, sp, #16
 4389              		.cfi_def_cfa_offset 24
 4390 0004 00AF     		add	r7, sp, #0
 4391              		.cfi_def_cfa_register 7
 4392 0006 7860     		str	r0, [r7, #4]
 4393 0008 0A1C     		mov	r2, r1
 4394 000a BB1C     		add	r3, r7, #2
 4395 000c 1A80     		strh	r2, [r3]
1184:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccmr1 = 0;
 4396              		.loc 1 1184 0
 4397 000e 3B1C     		mov	r3, r7
 4398 0010 0E33     		add	r3, r3, #14
 4399 0012 0022     		mov	r2, #0
 4400 0014 1A80     		strh	r2, [r3]
1185:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1186:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
 4401              		.loc 1 1186 0
 4402 0016 7A68     		ldr	r2, [r7, #4]
 4403 0018 264B     		ldr	r3, .L183
 4404 001a 9A42     		cmp	r2, r3
 4405 001c 1ED0     		beq	.L181
 4406              		.loc 1 1186 0 is_stmt 0 discriminator 1
 4407 001e 7A68     		ldr	r2, [r7, #4]
 4408 0020 8023     		mov	r3, #128
 4409 0022 DB05     		lsl	r3, r3, #23
 4410 0024 9A42     		cmp	r2, r3
 4411 0026 19D0     		beq	.L181
 4412 0028 7A68     		ldr	r2, [r7, #4]
 4413 002a 234B     		ldr	r3, .L183+4
 4414 002c 9A42     		cmp	r2, r3
 4415 002e 15D0     		beq	.L181
 4416 0030 7A68     		ldr	r2, [r7, #4]
 4417 0032 224B     		ldr	r3, .L183+8
 4418 0034 9A42     		cmp	r2, r3
 4419 0036 11D0     		beq	.L181
 4420 0038 7A68     		ldr	r2, [r7, #4]
 4421 003a 214B     		ldr	r3, .L183+12
 4422 003c 9A42     		cmp	r2, r3
 4423 003e 0DD0     		beq	.L181
 4424 0040 7A68     		ldr	r2, [r7, #4]
 4425 0042 204B     		ldr	r3, .L183+16
 4426 0044 9A42     		cmp	r2, r3
 4427 0046 09D0     		beq	.L181
 4428 0048 7A68     		ldr	r2, [r7, #4]
 4429 004a 1F4B     		ldr	r3, .L183+20
 4430 004c 9A42     		cmp	r2, r3
 4431 004e 05D0     		beq	.L181
 4432 0050 1E4A     		ldr	r2, .L183+24
 4433 0052 1F4B     		ldr	r3, .L183+28
 4434 0054 101C     		mov	r0, r2
 4435 0056 191C     		mov	r1, r3
 4436 0058 FFF7FEFF 		bl	assert_failed
 4437              	.L181:
1187:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
 4438              		.loc 1 1187 0 is_stmt 1
 4439 005c BB1C     		add	r3, r7, #2
 4440 005e 1B88     		ldrh	r3, [r3]
 4441 0060 502B     		cmp	r3, #80
 4442 0062 09D0     		beq	.L182
 4443              		.loc 1 1187 0 is_stmt 0 discriminator 1
 4444 0064 BB1C     		add	r3, r7, #2
 4445 0066 1B88     		ldrh	r3, [r3]
 4446 0068 402B     		cmp	r3, #64
 4447 006a 05D0     		beq	.L182
 4448 006c 174A     		ldr	r2, .L183+24
 4449 006e 194B     		ldr	r3, .L183+32
 4450 0070 101C     		mov	r0, r2
 4451 0072 191C     		mov	r1, r3
 4452 0074 FFF7FEFF 		bl	assert_failed
 4453              	.L182:
1188:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 4454              		.loc 1 1188 0 is_stmt 1
 4455 0078 3B1C     		mov	r3, r7
 4456 007a 0E33     		add	r3, r3, #14
 4457 007c 7A68     		ldr	r2, [r7, #4]
 4458 007e 128B     		ldrh	r2, [r2, #24]
 4459 0080 1A80     		strh	r2, [r3]
1189:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the OC1M Bits */
1190:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1M);
 4460              		.loc 1 1190 0
 4461 0082 3B1C     		mov	r3, r7
 4462 0084 0E33     		add	r3, r3, #14
 4463 0086 3A1C     		mov	r2, r7
 4464 0088 0E32     		add	r2, r2, #14
 4465 008a 1288     		ldrh	r2, [r2]
 4466 008c 7021     		mov	r1, #112
 4467 008e 8A43     		bic	r2, r1
 4468 0090 1A80     		strh	r2, [r3]
1191:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Configure The Forced output Mode */
1192:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 |= TIM_ForcedAction;
 4469              		.loc 1 1192 0
 4470 0092 3B1C     		mov	r3, r7
 4471 0094 0E33     		add	r3, r3, #14
 4472 0096 391C     		mov	r1, r7
 4473 0098 0E31     		add	r1, r1, #14
 4474 009a BA1C     		add	r2, r7, #2
 4475 009c 0988     		ldrh	r1, [r1]
 4476 009e 1288     		ldrh	r2, [r2]
 4477 00a0 0A43     		orr	r2, r1
 4478 00a2 1A80     		strh	r2, [r3]
1193:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCMR1 register */
1194:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 4479              		.loc 1 1194 0
 4480 00a4 7B68     		ldr	r3, [r7, #4]
 4481 00a6 3A1C     		mov	r2, r7
 4482 00a8 0E32     		add	r2, r2, #14
 4483 00aa 1288     		ldrh	r2, [r2]
 4484 00ac 1A83     		strh	r2, [r3, #24]
1195:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 4485              		.loc 1 1195 0
 4486 00ae BD46     		mov	sp, r7
 4487 00b0 04B0     		add	sp, sp, #16
 4488              		@ sp needed
 4489 00b2 80BD     		pop	{r7, pc}
 4490              	.L184:
 4491              		.align	2
 4492              	.L183:
 4493 00b4 002C0140 		.word	1073818624
 4494 00b8 00040040 		.word	1073742848
 4495 00bc 00200040 		.word	1073750016
 4496 00c0 00400140 		.word	1073823744
 4497 00c4 00440140 		.word	1073824768
 4498 00c8 00480140 		.word	1073825792
 4499 00cc 00000000 		.word	.LC0
 4500 00d0 A2040000 		.word	1186
 4501 00d4 A3040000 		.word	1187
 4502              		.cfi_endproc
 4503              	.LFE60:
 4505              		.section	.text.TIM_ForcedOC2Config,"ax",%progbits
 4506              		.align	2
 4507              		.global	TIM_ForcedOC2Config
 4508              		.code	16
 4509              		.thumb_func
 4511              	TIM_ForcedOC2Config:
 4512              	.LFB61:
1196:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  
1197:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1198:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Forces the TIMx output 2 waveform to active or inactive level.
1199:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, or 15 to select the TIM 
1200:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   peripheral.
1201:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1202:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
1203:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ForcedAction_Active: Force active level on OC2REF
1204:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ForcedAction_InActive: Force inactive level on OC2REF.
1205:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1206:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1207:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_ForcedOC2Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1208:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 4513              		.loc 1 1208 0
 4514              		.cfi_startproc
 4515 0000 80B5     		push	{r7, lr}
 4516              		.cfi_def_cfa_offset 8
 4517              		.cfi_offset 7, -8
 4518              		.cfi_offset 14, -4
 4519 0002 84B0     		sub	sp, sp, #16
 4520              		.cfi_def_cfa_offset 24
 4521 0004 00AF     		add	r7, sp, #0
 4522              		.cfi_def_cfa_register 7
 4523 0006 7860     		str	r0, [r7, #4]
 4524 0008 0A1C     		mov	r2, r1
 4525 000a BB1C     		add	r3, r7, #2
 4526 000c 1A80     		strh	r2, [r3]
1209:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccmr1 = 0;
 4527              		.loc 1 1209 0
 4528 000e 3B1C     		mov	r3, r7
 4529 0010 0E33     		add	r3, r3, #14
 4530 0012 0022     		mov	r2, #0
 4531 0014 1A80     		strh	r2, [r3]
1210:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1211:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1212:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 4532              		.loc 1 1212 0
 4533 0016 7A68     		ldr	r2, [r7, #4]
 4534 0018 214B     		ldr	r3, .L188
 4535 001a 9A42     		cmp	r2, r3
 4536 001c 12D0     		beq	.L186
 4537              		.loc 1 1212 0 is_stmt 0 discriminator 1
 4538 001e 7A68     		ldr	r2, [r7, #4]
 4539 0020 8023     		mov	r3, #128
 4540 0022 DB05     		lsl	r3, r3, #23
 4541 0024 9A42     		cmp	r2, r3
 4542 0026 0DD0     		beq	.L186
 4543 0028 7A68     		ldr	r2, [r7, #4]
 4544 002a 1E4B     		ldr	r3, .L188+4
 4545 002c 9A42     		cmp	r2, r3
 4546 002e 09D0     		beq	.L186
 4547 0030 7A68     		ldr	r2, [r7, #4]
 4548 0032 1D4B     		ldr	r3, .L188+8
 4549 0034 9A42     		cmp	r2, r3
 4550 0036 05D0     		beq	.L186
 4551 0038 1C4A     		ldr	r2, .L188+12
 4552 003a 1D4B     		ldr	r3, .L188+16
 4553 003c 101C     		mov	r0, r2
 4554 003e 191C     		mov	r1, r3
 4555 0040 FFF7FEFF 		bl	assert_failed
 4556              	.L186:
1213:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
 4557              		.loc 1 1213 0 is_stmt 1
 4558 0044 BB1C     		add	r3, r7, #2
 4559 0046 1B88     		ldrh	r3, [r3]
 4560 0048 502B     		cmp	r3, #80
 4561 004a 09D0     		beq	.L187
 4562              		.loc 1 1213 0 is_stmt 0 discriminator 1
 4563 004c BB1C     		add	r3, r7, #2
 4564 004e 1B88     		ldrh	r3, [r3]
 4565 0050 402B     		cmp	r3, #64
 4566 0052 05D0     		beq	.L187
 4567 0054 154A     		ldr	r2, .L188+12
 4568 0056 174B     		ldr	r3, .L188+20
 4569 0058 101C     		mov	r0, r2
 4570 005a 191C     		mov	r1, r3
 4571 005c FFF7FEFF 		bl	assert_failed
 4572              	.L187:
1214:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1215:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 4573              		.loc 1 1215 0 is_stmt 1
 4574 0060 3B1C     		mov	r3, r7
 4575 0062 0E33     		add	r3, r3, #14
 4576 0064 7A68     		ldr	r2, [r7, #4]
 4577 0066 128B     		ldrh	r2, [r2, #24]
 4578 0068 1A80     		strh	r2, [r3]
1216:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the OC2M Bits */
1217:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2M);
 4579              		.loc 1 1217 0
 4580 006a 3B1C     		mov	r3, r7
 4581 006c 0E33     		add	r3, r3, #14
 4582 006e 3A1C     		mov	r2, r7
 4583 0070 0E32     		add	r2, r2, #14
 4584 0072 1188     		ldrh	r1, [r2]
 4585 0074 104A     		ldr	r2, .L188+24
 4586 0076 0A40     		and	r2, r1
 4587 0078 1A80     		strh	r2, [r3]
1218:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Configure The Forced output Mode */
1219:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ForcedAction << 8);
 4588              		.loc 1 1219 0
 4589 007a BB1C     		add	r3, r7, #2
 4590 007c 1B88     		ldrh	r3, [r3]
 4591 007e 1B02     		lsl	r3, r3, #8
 4592 0080 99B2     		uxth	r1, r3
 4593 0082 3B1C     		mov	r3, r7
 4594 0084 0E33     		add	r3, r3, #14
 4595 0086 3A1C     		mov	r2, r7
 4596 0088 0E32     		add	r2, r2, #14
 4597 008a 1288     		ldrh	r2, [r2]
 4598 008c 0A43     		orr	r2, r1
 4599 008e 1A80     		strh	r2, [r3]
1220:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCMR1 register */
1221:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 4600              		.loc 1 1221 0
 4601 0090 7B68     		ldr	r3, [r7, #4]
 4602 0092 3A1C     		mov	r2, r7
 4603 0094 0E32     		add	r2, r2, #14
 4604 0096 1288     		ldrh	r2, [r2]
 4605 0098 1A83     		strh	r2, [r3, #24]
1222:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 4606              		.loc 1 1222 0
 4607 009a BD46     		mov	sp, r7
 4608 009c 04B0     		add	sp, sp, #16
 4609              		@ sp needed
 4610 009e 80BD     		pop	{r7, pc}
 4611              	.L189:
 4612              		.align	2
 4613              	.L188:
 4614 00a0 002C0140 		.word	1073818624
 4615 00a4 00040040 		.word	1073742848
 4616 00a8 00400140 		.word	1073823744
 4617 00ac 00000000 		.word	.LC0
 4618 00b0 BC040000 		.word	1212
 4619 00b4 BD040000 		.word	1213
 4620 00b8 FF8FFFFF 		.word	-28673
 4621              		.cfi_endproc
 4622              	.LFE61:
 4624              		.section	.text.TIM_ForcedOC3Config,"ax",%progbits
 4625              		.align	2
 4626              		.global	TIM_ForcedOC3Config
 4627              		.code	16
 4628              		.thumb_func
 4630              	TIM_ForcedOC3Config:
 4631              	.LFB62:
1223:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1224:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1225:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Forces the TIMx output 3 waveform to active or inactive level.
1226:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2 or 3 to select the TIM peripheral.
1227:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1228:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
1229:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ForcedAction_Active: Force active level on OC3REF
1230:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ForcedAction_InActive: Force inactive level on OC3REF.
1231:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1232:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1233:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_ForcedOC3Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1234:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 4632              		.loc 1 1234 0
 4633              		.cfi_startproc
 4634 0000 80B5     		push	{r7, lr}
 4635              		.cfi_def_cfa_offset 8
 4636              		.cfi_offset 7, -8
 4637              		.cfi_offset 14, -4
 4638 0002 84B0     		sub	sp, sp, #16
 4639              		.cfi_def_cfa_offset 24
 4640 0004 00AF     		add	r7, sp, #0
 4641              		.cfi_def_cfa_register 7
 4642 0006 7860     		str	r0, [r7, #4]
 4643 0008 0A1C     		mov	r2, r1
 4644 000a BB1C     		add	r3, r7, #2
 4645 000c 1A80     		strh	r2, [r3]
1235:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccmr2 = 0;
 4646              		.loc 1 1235 0
 4647 000e 3B1C     		mov	r3, r7
 4648 0010 0E33     		add	r3, r3, #14
 4649 0012 0022     		mov	r2, #0
 4650 0014 1A80     		strh	r2, [r3]
1236:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1237:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1238:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 4651              		.loc 1 1238 0
 4652 0016 7A68     		ldr	r2, [r7, #4]
 4653 0018 1E4B     		ldr	r3, .L193
 4654 001a 9A42     		cmp	r2, r3
 4655 001c 0ED0     		beq	.L191
 4656              		.loc 1 1238 0 is_stmt 0 discriminator 1
 4657 001e 7A68     		ldr	r2, [r7, #4]
 4658 0020 8023     		mov	r3, #128
 4659 0022 DB05     		lsl	r3, r3, #23
 4660 0024 9A42     		cmp	r2, r3
 4661 0026 09D0     		beq	.L191
 4662 0028 7A68     		ldr	r2, [r7, #4]
 4663 002a 1B4B     		ldr	r3, .L193+4
 4664 002c 9A42     		cmp	r2, r3
 4665 002e 05D0     		beq	.L191
 4666 0030 1A4A     		ldr	r2, .L193+8
 4667 0032 1B4B     		ldr	r3, .L193+12
 4668 0034 101C     		mov	r0, r2
 4669 0036 191C     		mov	r1, r3
 4670 0038 FFF7FEFF 		bl	assert_failed
 4671              	.L191:
1239:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
 4672              		.loc 1 1239 0 is_stmt 1
 4673 003c BB1C     		add	r3, r7, #2
 4674 003e 1B88     		ldrh	r3, [r3]
 4675 0040 502B     		cmp	r3, #80
 4676 0042 09D0     		beq	.L192
 4677              		.loc 1 1239 0 is_stmt 0 discriminator 1
 4678 0044 BB1C     		add	r3, r7, #2
 4679 0046 1B88     		ldrh	r3, [r3]
 4680 0048 402B     		cmp	r3, #64
 4681 004a 05D0     		beq	.L192
 4682 004c 134A     		ldr	r2, .L193+8
 4683 004e 154B     		ldr	r3, .L193+16
 4684 0050 101C     		mov	r0, r2
 4685 0052 191C     		mov	r1, r3
 4686 0054 FFF7FEFF 		bl	assert_failed
 4687              	.L192:
1240:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1241:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 4688              		.loc 1 1241 0 is_stmt 1
 4689 0058 3B1C     		mov	r3, r7
 4690 005a 0E33     		add	r3, r3, #14
 4691 005c 7A68     		ldr	r2, [r7, #4]
 4692 005e 928B     		ldrh	r2, [r2, #28]
 4693 0060 1A80     		strh	r2, [r3]
1242:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the OC1M Bits */
1243:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3M);
 4694              		.loc 1 1243 0
 4695 0062 3B1C     		mov	r3, r7
 4696 0064 0E33     		add	r3, r3, #14
 4697 0066 3A1C     		mov	r2, r7
 4698 0068 0E32     		add	r2, r2, #14
 4699 006a 1288     		ldrh	r2, [r2]
 4700 006c 7021     		mov	r1, #112
 4701 006e 8A43     		bic	r2, r1
 4702 0070 1A80     		strh	r2, [r3]
1244:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Configure The Forced output Mode */
1245:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 |= TIM_ForcedAction;
 4703              		.loc 1 1245 0
 4704 0072 3B1C     		mov	r3, r7
 4705 0074 0E33     		add	r3, r3, #14
 4706 0076 391C     		mov	r1, r7
 4707 0078 0E31     		add	r1, r1, #14
 4708 007a BA1C     		add	r2, r7, #2
 4709 007c 0988     		ldrh	r1, [r1]
 4710 007e 1288     		ldrh	r2, [r2]
 4711 0080 0A43     		orr	r2, r1
 4712 0082 1A80     		strh	r2, [r3]
1246:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCMR2 register */
1247:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 4713              		.loc 1 1247 0
 4714 0084 7B68     		ldr	r3, [r7, #4]
 4715 0086 3A1C     		mov	r2, r7
 4716 0088 0E32     		add	r2, r2, #14
 4717 008a 1288     		ldrh	r2, [r2]
 4718 008c 9A83     		strh	r2, [r3, #28]
1248:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 4719              		.loc 1 1248 0
 4720 008e BD46     		mov	sp, r7
 4721 0090 04B0     		add	sp, sp, #16
 4722              		@ sp needed
 4723 0092 80BD     		pop	{r7, pc}
 4724              	.L194:
 4725              		.align	2
 4726              	.L193:
 4727 0094 002C0140 		.word	1073818624
 4728 0098 00040040 		.word	1073742848
 4729 009c 00000000 		.word	.LC0
 4730 00a0 D6040000 		.word	1238
 4731 00a4 D7040000 		.word	1239
 4732              		.cfi_endproc
 4733              	.LFE62:
 4735              		.section	.text.TIM_ForcedOC4Config,"ax",%progbits
 4736              		.align	2
 4737              		.global	TIM_ForcedOC4Config
 4738              		.code	16
 4739              		.thumb_func
 4741              	TIM_ForcedOC4Config:
 4742              	.LFB63:
1249:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1250:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1251:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Forces the TIMx output 4 waveform to active or inactive level.
1252:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2 or 3 to select the TIM peripheral.
1253:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1254:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
1255:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ForcedAction_Active: Force active level on OC4REF
1256:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ForcedAction_InActive: Force inactive level on OC4REF.
1257:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1258:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1259:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_ForcedOC4Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1260:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 4743              		.loc 1 1260 0
 4744              		.cfi_startproc
 4745 0000 80B5     		push	{r7, lr}
 4746              		.cfi_def_cfa_offset 8
 4747              		.cfi_offset 7, -8
 4748              		.cfi_offset 14, -4
 4749 0002 84B0     		sub	sp, sp, #16
 4750              		.cfi_def_cfa_offset 24
 4751 0004 00AF     		add	r7, sp, #0
 4752              		.cfi_def_cfa_register 7
 4753 0006 7860     		str	r0, [r7, #4]
 4754 0008 0A1C     		mov	r2, r1
 4755 000a BB1C     		add	r3, r7, #2
 4756 000c 1A80     		strh	r2, [r3]
1261:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccmr2 = 0;
 4757              		.loc 1 1261 0
 4758 000e 3B1C     		mov	r3, r7
 4759 0010 0E33     		add	r3, r3, #14
 4760 0012 0022     		mov	r2, #0
 4761 0014 1A80     		strh	r2, [r3]
1262:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1263:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 4762              		.loc 1 1263 0
 4763 0016 7A68     		ldr	r2, [r7, #4]
 4764 0018 204B     		ldr	r3, .L198
 4765 001a 9A42     		cmp	r2, r3
 4766 001c 0ED0     		beq	.L196
 4767              		.loc 1 1263 0 is_stmt 0 discriminator 1
 4768 001e 7A68     		ldr	r2, [r7, #4]
 4769 0020 8023     		mov	r3, #128
 4770 0022 DB05     		lsl	r3, r3, #23
 4771 0024 9A42     		cmp	r2, r3
 4772 0026 09D0     		beq	.L196
 4773 0028 7A68     		ldr	r2, [r7, #4]
 4774 002a 1D4B     		ldr	r3, .L198+4
 4775 002c 9A42     		cmp	r2, r3
 4776 002e 05D0     		beq	.L196
 4777 0030 1C4A     		ldr	r2, .L198+8
 4778 0032 1D4B     		ldr	r3, .L198+12
 4779 0034 101C     		mov	r0, r2
 4780 0036 191C     		mov	r1, r3
 4781 0038 FFF7FEFF 		bl	assert_failed
 4782              	.L196:
1264:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
 4783              		.loc 1 1264 0 is_stmt 1
 4784 003c BB1C     		add	r3, r7, #2
 4785 003e 1B88     		ldrh	r3, [r3]
 4786 0040 502B     		cmp	r3, #80
 4787 0042 0AD0     		beq	.L197
 4788              		.loc 1 1264 0 is_stmt 0 discriminator 1
 4789 0044 BB1C     		add	r3, r7, #2
 4790 0046 1B88     		ldrh	r3, [r3]
 4791 0048 402B     		cmp	r3, #64
 4792 004a 06D0     		beq	.L197
 4793 004c 154A     		ldr	r2, .L198+8
 4794 004e 9E23     		mov	r3, #158
 4795 0050 DB00     		lsl	r3, r3, #3
 4796 0052 101C     		mov	r0, r2
 4797 0054 191C     		mov	r1, r3
 4798 0056 FFF7FEFF 		bl	assert_failed
 4799              	.L197:
1265:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1266:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 4800              		.loc 1 1266 0 is_stmt 1
 4801 005a 3B1C     		mov	r3, r7
 4802 005c 0E33     		add	r3, r3, #14
 4803 005e 7A68     		ldr	r2, [r7, #4]
 4804 0060 928B     		ldrh	r2, [r2, #28]
 4805 0062 1A80     		strh	r2, [r3]
1267:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the OC2M Bits */
1268:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4M);
 4806              		.loc 1 1268 0
 4807 0064 3B1C     		mov	r3, r7
 4808 0066 0E33     		add	r3, r3, #14
 4809 0068 3A1C     		mov	r2, r7
 4810 006a 0E32     		add	r2, r2, #14
 4811 006c 1188     		ldrh	r1, [r2]
 4812 006e 0F4A     		ldr	r2, .L198+16
 4813 0070 0A40     		and	r2, r1
 4814 0072 1A80     		strh	r2, [r3]
1269:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Configure The Forced output Mode */
1270:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ForcedAction << 8);
 4815              		.loc 1 1270 0
 4816 0074 BB1C     		add	r3, r7, #2
 4817 0076 1B88     		ldrh	r3, [r3]
 4818 0078 1B02     		lsl	r3, r3, #8
 4819 007a 99B2     		uxth	r1, r3
 4820 007c 3B1C     		mov	r3, r7
 4821 007e 0E33     		add	r3, r3, #14
 4822 0080 3A1C     		mov	r2, r7
 4823 0082 0E32     		add	r2, r2, #14
 4824 0084 1288     		ldrh	r2, [r2]
 4825 0086 0A43     		orr	r2, r1
 4826 0088 1A80     		strh	r2, [r3]
1271:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCMR2 register */
1272:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 4827              		.loc 1 1272 0
 4828 008a 7B68     		ldr	r3, [r7, #4]
 4829 008c 3A1C     		mov	r2, r7
 4830 008e 0E32     		add	r2, r2, #14
 4831 0090 1288     		ldrh	r2, [r2]
 4832 0092 9A83     		strh	r2, [r3, #28]
1273:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 4833              		.loc 1 1273 0
 4834 0094 BD46     		mov	sp, r7
 4835 0096 04B0     		add	sp, sp, #16
 4836              		@ sp needed
 4837 0098 80BD     		pop	{r7, pc}
 4838              	.L199:
 4839 009a C046     		.align	2
 4840              	.L198:
 4841 009c 002C0140 		.word	1073818624
 4842 00a0 00040040 		.word	1073742848
 4843 00a4 00000000 		.word	.LC0
 4844 00a8 EF040000 		.word	1263
 4845 00ac FF8FFFFF 		.word	-28673
 4846              		.cfi_endproc
 4847              	.LFE63:
 4849              		.section	.text.TIM_CCPreloadControl,"ax",%progbits
 4850              		.align	2
 4851              		.global	TIM_CCPreloadControl
 4852              		.code	16
 4853              		.thumb_func
 4855              	TIM_CCPreloadControl:
 4856              	.LFB64:
1274:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1275:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1276:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Sets or Resets the TIM peripheral Capture Compare Preload Control bit.
1277:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be   1, 2, 3 or 15 
1278:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         to select the TIMx peripheral
1279:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  NewState: new state of the Capture Compare Preload Control bit
1280:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
1281:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1282:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1283:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_CCPreloadControl(TIM_TypeDef* TIMx, FunctionalState NewState)
1284:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** { 
 4857              		.loc 1 1284 0
 4858              		.cfi_startproc
 4859 0000 80B5     		push	{r7, lr}
 4860              		.cfi_def_cfa_offset 8
 4861              		.cfi_offset 7, -8
 4862              		.cfi_offset 14, -4
 4863 0002 82B0     		sub	sp, sp, #8
 4864              		.cfi_def_cfa_offset 16
 4865 0004 00AF     		add	r7, sp, #0
 4866              		.cfi_def_cfa_register 7
 4867 0006 7860     		str	r0, [r7, #4]
 4868 0008 0A1C     		mov	r2, r1
 4869 000a FB1C     		add	r3, r7, #3
 4870 000c 1A70     		strb	r2, [r3]
1285:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1286:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 4871              		.loc 1 1286 0
 4872 000e 7A68     		ldr	r2, [r7, #4]
 4873 0010 1D4B     		ldr	r3, .L205
 4874 0012 9A42     		cmp	r2, r3
 4875 0014 12D0     		beq	.L201
 4876              		.loc 1 1286 0 is_stmt 0 discriminator 1
 4877 0016 7A68     		ldr	r2, [r7, #4]
 4878 0018 8023     		mov	r3, #128
 4879 001a DB05     		lsl	r3, r3, #23
 4880 001c 9A42     		cmp	r2, r3
 4881 001e 0DD0     		beq	.L201
 4882 0020 7A68     		ldr	r2, [r7, #4]
 4883 0022 1A4B     		ldr	r3, .L205+4
 4884 0024 9A42     		cmp	r2, r3
 4885 0026 09D0     		beq	.L201
 4886 0028 7A68     		ldr	r2, [r7, #4]
 4887 002a 194B     		ldr	r3, .L205+8
 4888 002c 9A42     		cmp	r2, r3
 4889 002e 05D0     		beq	.L201
 4890 0030 184A     		ldr	r2, .L205+12
 4891 0032 194B     		ldr	r3, .L205+16
 4892 0034 101C     		mov	r0, r2
 4893 0036 191C     		mov	r1, r3
 4894 0038 FFF7FEFF 		bl	assert_failed
 4895              	.L201:
1287:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 4896              		.loc 1 1287 0 is_stmt 1
 4897 003c FB1C     		add	r3, r7, #3
 4898 003e 1B78     		ldrb	r3, [r3]
 4899 0040 002B     		cmp	r3, #0
 4900 0042 09D0     		beq	.L202
 4901              		.loc 1 1287 0 is_stmt 0 discriminator 1
 4902 0044 FB1C     		add	r3, r7, #3
 4903 0046 1B78     		ldrb	r3, [r3]
 4904 0048 012B     		cmp	r3, #1
 4905 004a 05D0     		beq	.L202
 4906 004c 114A     		ldr	r2, .L205+12
 4907 004e 134B     		ldr	r3, .L205+20
 4908 0050 101C     		mov	r0, r2
 4909 0052 191C     		mov	r1, r3
 4910 0054 FFF7FEFF 		bl	assert_failed
 4911              	.L202:
1288:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   if (NewState != DISABLE)
 4912              		.loc 1 1288 0 is_stmt 1
 4913 0058 FB1C     		add	r3, r7, #3
 4914 005a 1B78     		ldrb	r3, [r3]
 4915 005c 002B     		cmp	r3, #0
 4916 005e 08D0     		beq	.L203
1289:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
1290:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the CCPC Bit */
1291:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCPC;
 4917              		.loc 1 1291 0
 4918 0060 7B68     		ldr	r3, [r7, #4]
 4919 0062 9B88     		ldrh	r3, [r3, #4]
 4920 0064 9BB2     		uxth	r3, r3
 4921 0066 0122     		mov	r2, #1
 4922 0068 1343     		orr	r3, r2
 4923 006a 9AB2     		uxth	r2, r3
 4924 006c 7B68     		ldr	r3, [r7, #4]
 4925 006e 9A80     		strh	r2, [r3, #4]
 4926 0070 07E0     		b	.L200
 4927              	.L203:
1292:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
1293:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   else
1294:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
1295:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Reset the CCPC Bit */
1296:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_CCPC);
 4928              		.loc 1 1296 0
 4929 0072 7B68     		ldr	r3, [r7, #4]
 4930 0074 9B88     		ldrh	r3, [r3, #4]
 4931 0076 9BB2     		uxth	r3, r3
 4932 0078 0122     		mov	r2, #1
 4933 007a 9343     		bic	r3, r2
 4934 007c 9AB2     		uxth	r2, r3
 4935 007e 7B68     		ldr	r3, [r7, #4]
 4936 0080 9A80     		strh	r2, [r3, #4]
 4937              	.L200:
1297:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
1298:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 4938              		.loc 1 1298 0
 4939 0082 BD46     		mov	sp, r7
 4940 0084 02B0     		add	sp, sp, #8
 4941              		@ sp needed
 4942 0086 80BD     		pop	{r7, pc}
 4943              	.L206:
 4944              		.align	2
 4945              	.L205:
 4946 0088 002C0140 		.word	1073818624
 4947 008c 00040040 		.word	1073742848
 4948 0090 00400140 		.word	1073823744
 4949 0094 00000000 		.word	.LC0
 4950 0098 06050000 		.word	1286
 4951 009c 07050000 		.word	1287
 4952              		.cfi_endproc
 4953              	.LFE64:
 4955              		.section	.text.TIM_OC1PreloadConfig,"ax",%progbits
 4956              		.align	2
 4957              		.global	TIM_OC1PreloadConfig
 4958              		.code	16
 4959              		.thumb_func
 4961              	TIM_OC1PreloadConfig:
 4962              	.LFB65:
1299:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1300:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1301:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1302:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR1.
1303:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 14, 15, 16 and 17 to select the TIM peripheral.
1304:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1305:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
1306:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCPreload_Enable
1307:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCPreload_Disable
1308:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1309:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1310:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_OC1PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1311:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 4963              		.loc 1 1311 0
 4964              		.cfi_startproc
 4965 0000 80B5     		push	{r7, lr}
 4966              		.cfi_def_cfa_offset 8
 4967              		.cfi_offset 7, -8
 4968              		.cfi_offset 14, -4
 4969 0002 84B0     		sub	sp, sp, #16
 4970              		.cfi_def_cfa_offset 24
 4971 0004 00AF     		add	r7, sp, #0
 4972              		.cfi_def_cfa_register 7
 4973 0006 7860     		str	r0, [r7, #4]
 4974 0008 0A1C     		mov	r2, r1
 4975 000a BB1C     		add	r3, r7, #2
 4976 000c 1A80     		strh	r2, [r3]
1312:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccmr1 = 0;
 4977              		.loc 1 1312 0
 4978 000e 3B1C     		mov	r3, r7
 4979 0010 0E33     		add	r3, r3, #14
 4980 0012 0022     		mov	r2, #0
 4981 0014 1A80     		strh	r2, [r3]
1313:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1314:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
 4982              		.loc 1 1314 0
 4983 0016 7A68     		ldr	r2, [r7, #4]
 4984 0018 264B     		ldr	r3, .L210
 4985 001a 9A42     		cmp	r2, r3
 4986 001c 1ED0     		beq	.L208
 4987              		.loc 1 1314 0 is_stmt 0 discriminator 1
 4988 001e 7A68     		ldr	r2, [r7, #4]
 4989 0020 8023     		mov	r3, #128
 4990 0022 DB05     		lsl	r3, r3, #23
 4991 0024 9A42     		cmp	r2, r3
 4992 0026 19D0     		beq	.L208
 4993 0028 7A68     		ldr	r2, [r7, #4]
 4994 002a 234B     		ldr	r3, .L210+4
 4995 002c 9A42     		cmp	r2, r3
 4996 002e 15D0     		beq	.L208
 4997 0030 7A68     		ldr	r2, [r7, #4]
 4998 0032 224B     		ldr	r3, .L210+8
 4999 0034 9A42     		cmp	r2, r3
 5000 0036 11D0     		beq	.L208
 5001 0038 7A68     		ldr	r2, [r7, #4]
 5002 003a 214B     		ldr	r3, .L210+12
 5003 003c 9A42     		cmp	r2, r3
 5004 003e 0DD0     		beq	.L208
 5005 0040 7A68     		ldr	r2, [r7, #4]
 5006 0042 204B     		ldr	r3, .L210+16
 5007 0044 9A42     		cmp	r2, r3
 5008 0046 09D0     		beq	.L208
 5009 0048 7A68     		ldr	r2, [r7, #4]
 5010 004a 1F4B     		ldr	r3, .L210+20
 5011 004c 9A42     		cmp	r2, r3
 5012 004e 05D0     		beq	.L208
 5013 0050 1E4A     		ldr	r2, .L210+24
 5014 0052 1F4B     		ldr	r3, .L210+28
 5015 0054 101C     		mov	r0, r2
 5016 0056 191C     		mov	r1, r3
 5017 0058 FFF7FEFF 		bl	assert_failed
 5018              	.L208:
1315:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
 5019              		.loc 1 1315 0 is_stmt 1
 5020 005c BB1C     		add	r3, r7, #2
 5021 005e 1B88     		ldrh	r3, [r3]
 5022 0060 082B     		cmp	r3, #8
 5023 0062 09D0     		beq	.L209
 5024              		.loc 1 1315 0 is_stmt 0 discriminator 1
 5025 0064 BB1C     		add	r3, r7, #2
 5026 0066 1B88     		ldrh	r3, [r3]
 5027 0068 002B     		cmp	r3, #0
 5028 006a 05D0     		beq	.L209
 5029 006c 174A     		ldr	r2, .L210+24
 5030 006e 194B     		ldr	r3, .L210+32
 5031 0070 101C     		mov	r0, r2
 5032 0072 191C     		mov	r1, r3
 5033 0074 FFF7FEFF 		bl	assert_failed
 5034              	.L209:
1316:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1317:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5035              		.loc 1 1317 0 is_stmt 1
 5036 0078 3B1C     		mov	r3, r7
 5037 007a 0E33     		add	r3, r3, #14
 5038 007c 7A68     		ldr	r2, [r7, #4]
 5039 007e 128B     		ldrh	r2, [r2, #24]
 5040 0080 1A80     		strh	r2, [r3]
1318:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the OC1PE Bit */
1319:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1PE);
 5041              		.loc 1 1319 0
 5042 0082 3B1C     		mov	r3, r7
 5043 0084 0E33     		add	r3, r3, #14
 5044 0086 3A1C     		mov	r2, r7
 5045 0088 0E32     		add	r2, r2, #14
 5046 008a 1288     		ldrh	r2, [r2]
 5047 008c 0821     		mov	r1, #8
 5048 008e 8A43     		bic	r2, r1
 5049 0090 1A80     		strh	r2, [r3]
1320:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1321:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 |= TIM_OCPreload;
 5050              		.loc 1 1321 0
 5051 0092 3B1C     		mov	r3, r7
 5052 0094 0E33     		add	r3, r3, #14
 5053 0096 391C     		mov	r1, r7
 5054 0098 0E31     		add	r1, r1, #14
 5055 009a BA1C     		add	r2, r7, #2
 5056 009c 0988     		ldrh	r1, [r1]
 5057 009e 1288     		ldrh	r2, [r2]
 5058 00a0 0A43     		orr	r2, r1
 5059 00a2 1A80     		strh	r2, [r3]
1322:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCMR1 register */
1323:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 5060              		.loc 1 1323 0
 5061 00a4 7B68     		ldr	r3, [r7, #4]
 5062 00a6 3A1C     		mov	r2, r7
 5063 00a8 0E32     		add	r2, r2, #14
 5064 00aa 1288     		ldrh	r2, [r2]
 5065 00ac 1A83     		strh	r2, [r3, #24]
1324:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 5066              		.loc 1 1324 0
 5067 00ae BD46     		mov	sp, r7
 5068 00b0 04B0     		add	sp, sp, #16
 5069              		@ sp needed
 5070 00b2 80BD     		pop	{r7, pc}
 5071              	.L211:
 5072              		.align	2
 5073              	.L210:
 5074 00b4 002C0140 		.word	1073818624
 5075 00b8 00040040 		.word	1073742848
 5076 00bc 00200040 		.word	1073750016
 5077 00c0 00400140 		.word	1073823744
 5078 00c4 00440140 		.word	1073824768
 5079 00c8 00480140 		.word	1073825792
 5080 00cc 00000000 		.word	.LC0
 5081 00d0 22050000 		.word	1314
 5082 00d4 23050000 		.word	1315
 5083              		.cfi_endproc
 5084              	.LFE65:
 5086              		.section	.text.TIM_OC2PreloadConfig,"ax",%progbits
 5087              		.align	2
 5088              		.global	TIM_OC2PreloadConfig
 5089              		.code	16
 5090              		.thumb_func
 5092              	TIM_OC2PreloadConfig:
 5093              	.LFB66:
1325:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1326:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1327:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR2.
1328:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3 and 15 to select the TIM peripheral.
1329:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1330:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
1331:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCPreload_Enable
1332:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCPreload_Disable
1333:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1334:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1335:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_OC2PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1336:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 5094              		.loc 1 1336 0
 5095              		.cfi_startproc
 5096 0000 80B5     		push	{r7, lr}
 5097              		.cfi_def_cfa_offset 8
 5098              		.cfi_offset 7, -8
 5099              		.cfi_offset 14, -4
 5100 0002 84B0     		sub	sp, sp, #16
 5101              		.cfi_def_cfa_offset 24
 5102 0004 00AF     		add	r7, sp, #0
 5103              		.cfi_def_cfa_register 7
 5104 0006 7860     		str	r0, [r7, #4]
 5105 0008 0A1C     		mov	r2, r1
 5106 000a BB1C     		add	r3, r7, #2
 5107 000c 1A80     		strh	r2, [r3]
1337:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccmr1 = 0;
 5108              		.loc 1 1337 0
 5109 000e 3B1C     		mov	r3, r7
 5110 0010 0E33     		add	r3, r3, #14
 5111 0012 0022     		mov	r2, #0
 5112 0014 1A80     		strh	r2, [r3]
1338:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1339:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 5113              		.loc 1 1339 0
 5114 0016 7A68     		ldr	r2, [r7, #4]
 5115 0018 214B     		ldr	r3, .L215
 5116 001a 9A42     		cmp	r2, r3
 5117 001c 12D0     		beq	.L213
 5118              		.loc 1 1339 0 is_stmt 0 discriminator 1
 5119 001e 7A68     		ldr	r2, [r7, #4]
 5120 0020 8023     		mov	r3, #128
 5121 0022 DB05     		lsl	r3, r3, #23
 5122 0024 9A42     		cmp	r2, r3
 5123 0026 0DD0     		beq	.L213
 5124 0028 7A68     		ldr	r2, [r7, #4]
 5125 002a 1E4B     		ldr	r3, .L215+4
 5126 002c 9A42     		cmp	r2, r3
 5127 002e 09D0     		beq	.L213
 5128 0030 7A68     		ldr	r2, [r7, #4]
 5129 0032 1D4B     		ldr	r3, .L215+8
 5130 0034 9A42     		cmp	r2, r3
 5131 0036 05D0     		beq	.L213
 5132 0038 1C4A     		ldr	r2, .L215+12
 5133 003a 1D4B     		ldr	r3, .L215+16
 5134 003c 101C     		mov	r0, r2
 5135 003e 191C     		mov	r1, r3
 5136 0040 FFF7FEFF 		bl	assert_failed
 5137              	.L213:
1340:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
 5138              		.loc 1 1340 0 is_stmt 1
 5139 0044 BB1C     		add	r3, r7, #2
 5140 0046 1B88     		ldrh	r3, [r3]
 5141 0048 082B     		cmp	r3, #8
 5142 004a 09D0     		beq	.L214
 5143              		.loc 1 1340 0 is_stmt 0 discriminator 1
 5144 004c BB1C     		add	r3, r7, #2
 5145 004e 1B88     		ldrh	r3, [r3]
 5146 0050 002B     		cmp	r3, #0
 5147 0052 05D0     		beq	.L214
 5148 0054 154A     		ldr	r2, .L215+12
 5149 0056 174B     		ldr	r3, .L215+20
 5150 0058 101C     		mov	r0, r2
 5151 005a 191C     		mov	r1, r3
 5152 005c FFF7FEFF 		bl	assert_failed
 5153              	.L214:
1341:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1342:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5154              		.loc 1 1342 0 is_stmt 1
 5155 0060 3B1C     		mov	r3, r7
 5156 0062 0E33     		add	r3, r3, #14
 5157 0064 7A68     		ldr	r2, [r7, #4]
 5158 0066 128B     		ldrh	r2, [r2, #24]
 5159 0068 1A80     		strh	r2, [r3]
1343:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the OC2PE Bit */
1344:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2PE);
 5160              		.loc 1 1344 0
 5161 006a 3B1C     		mov	r3, r7
 5162 006c 0E33     		add	r3, r3, #14
 5163 006e 3A1C     		mov	r2, r7
 5164 0070 0E32     		add	r2, r2, #14
 5165 0072 1188     		ldrh	r1, [r2]
 5166 0074 104A     		ldr	r2, .L215+24
 5167 0076 0A40     		and	r2, r1
 5168 0078 1A80     		strh	r2, [r3]
1345:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1346:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCPreload << 8);
 5169              		.loc 1 1346 0
 5170 007a BB1C     		add	r3, r7, #2
 5171 007c 1B88     		ldrh	r3, [r3]
 5172 007e 1B02     		lsl	r3, r3, #8
 5173 0080 99B2     		uxth	r1, r3
 5174 0082 3B1C     		mov	r3, r7
 5175 0084 0E33     		add	r3, r3, #14
 5176 0086 3A1C     		mov	r2, r7
 5177 0088 0E32     		add	r2, r2, #14
 5178 008a 1288     		ldrh	r2, [r2]
 5179 008c 0A43     		orr	r2, r1
 5180 008e 1A80     		strh	r2, [r3]
1347:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCMR1 register */
1348:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 5181              		.loc 1 1348 0
 5182 0090 7B68     		ldr	r3, [r7, #4]
 5183 0092 3A1C     		mov	r2, r7
 5184 0094 0E32     		add	r2, r2, #14
 5185 0096 1288     		ldrh	r2, [r2]
 5186 0098 1A83     		strh	r2, [r3, #24]
1349:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 5187              		.loc 1 1349 0
 5188 009a BD46     		mov	sp, r7
 5189 009c 04B0     		add	sp, sp, #16
 5190              		@ sp needed
 5191 009e 80BD     		pop	{r7, pc}
 5192              	.L216:
 5193              		.align	2
 5194              	.L215:
 5195 00a0 002C0140 		.word	1073818624
 5196 00a4 00040040 		.word	1073742848
 5197 00a8 00400140 		.word	1073823744
 5198 00ac 00000000 		.word	.LC0
 5199 00b0 3B050000 		.word	1339
 5200 00b4 3C050000 		.word	1340
 5201 00b8 FFF7FFFF 		.word	-2049
 5202              		.cfi_endproc
 5203              	.LFE66:
 5205              		.section	.text.TIM_OC3PreloadConfig,"ax",%progbits
 5206              		.align	2
 5207              		.global	TIM_OC3PreloadConfig
 5208              		.code	16
 5209              		.thumb_func
 5211              	TIM_OC3PreloadConfig:
 5212              	.LFB67:
1350:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1351:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1352:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR3.
1353:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2 or 3 to select the TIM peripheral.
1354:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1355:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
1356:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCPreload_Enable
1357:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCPreload_Disable
1358:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1359:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1360:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_OC3PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1361:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 5213              		.loc 1 1361 0
 5214              		.cfi_startproc
 5215 0000 80B5     		push	{r7, lr}
 5216              		.cfi_def_cfa_offset 8
 5217              		.cfi_offset 7, -8
 5218              		.cfi_offset 14, -4
 5219 0002 84B0     		sub	sp, sp, #16
 5220              		.cfi_def_cfa_offset 24
 5221 0004 00AF     		add	r7, sp, #0
 5222              		.cfi_def_cfa_register 7
 5223 0006 7860     		str	r0, [r7, #4]
 5224 0008 0A1C     		mov	r2, r1
 5225 000a BB1C     		add	r3, r7, #2
 5226 000c 1A80     		strh	r2, [r3]
1362:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccmr2 = 0;
 5227              		.loc 1 1362 0
 5228 000e 3B1C     		mov	r3, r7
 5229 0010 0E33     		add	r3, r3, #14
 5230 0012 0022     		mov	r2, #0
 5231 0014 1A80     		strh	r2, [r3]
1363:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1364:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1365:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 5232              		.loc 1 1365 0
 5233 0016 7A68     		ldr	r2, [r7, #4]
 5234 0018 1E4B     		ldr	r3, .L220
 5235 001a 9A42     		cmp	r2, r3
 5236 001c 0ED0     		beq	.L218
 5237              		.loc 1 1365 0 is_stmt 0 discriminator 1
 5238 001e 7A68     		ldr	r2, [r7, #4]
 5239 0020 8023     		mov	r3, #128
 5240 0022 DB05     		lsl	r3, r3, #23
 5241 0024 9A42     		cmp	r2, r3
 5242 0026 09D0     		beq	.L218
 5243 0028 7A68     		ldr	r2, [r7, #4]
 5244 002a 1B4B     		ldr	r3, .L220+4
 5245 002c 9A42     		cmp	r2, r3
 5246 002e 05D0     		beq	.L218
 5247 0030 1A4A     		ldr	r2, .L220+8
 5248 0032 1B4B     		ldr	r3, .L220+12
 5249 0034 101C     		mov	r0, r2
 5250 0036 191C     		mov	r1, r3
 5251 0038 FFF7FEFF 		bl	assert_failed
 5252              	.L218:
1366:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
 5253              		.loc 1 1366 0 is_stmt 1
 5254 003c BB1C     		add	r3, r7, #2
 5255 003e 1B88     		ldrh	r3, [r3]
 5256 0040 082B     		cmp	r3, #8
 5257 0042 09D0     		beq	.L219
 5258              		.loc 1 1366 0 is_stmt 0 discriminator 1
 5259 0044 BB1C     		add	r3, r7, #2
 5260 0046 1B88     		ldrh	r3, [r3]
 5261 0048 002B     		cmp	r3, #0
 5262 004a 05D0     		beq	.L219
 5263 004c 134A     		ldr	r2, .L220+8
 5264 004e 154B     		ldr	r3, .L220+16
 5265 0050 101C     		mov	r0, r2
 5266 0052 191C     		mov	r1, r3
 5267 0054 FFF7FEFF 		bl	assert_failed
 5268              	.L219:
1367:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1368:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 5269              		.loc 1 1368 0 is_stmt 1
 5270 0058 3B1C     		mov	r3, r7
 5271 005a 0E33     		add	r3, r3, #14
 5272 005c 7A68     		ldr	r2, [r7, #4]
 5273 005e 928B     		ldrh	r2, [r2, #28]
 5274 0060 1A80     		strh	r2, [r3]
1369:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the OC3PE Bit */
1370:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3PE);
 5275              		.loc 1 1370 0
 5276 0062 3B1C     		mov	r3, r7
 5277 0064 0E33     		add	r3, r3, #14
 5278 0066 3A1C     		mov	r2, r7
 5279 0068 0E32     		add	r2, r2, #14
 5280 006a 1288     		ldrh	r2, [r2]
 5281 006c 0821     		mov	r1, #8
 5282 006e 8A43     		bic	r2, r1
 5283 0070 1A80     		strh	r2, [r3]
1371:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1372:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 |= TIM_OCPreload;
 5284              		.loc 1 1372 0
 5285 0072 3B1C     		mov	r3, r7
 5286 0074 0E33     		add	r3, r3, #14
 5287 0076 391C     		mov	r1, r7
 5288 0078 0E31     		add	r1, r1, #14
 5289 007a BA1C     		add	r2, r7, #2
 5290 007c 0988     		ldrh	r1, [r1]
 5291 007e 1288     		ldrh	r2, [r2]
 5292 0080 0A43     		orr	r2, r1
 5293 0082 1A80     		strh	r2, [r3]
1373:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCMR2 register */
1374:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 5294              		.loc 1 1374 0
 5295 0084 7B68     		ldr	r3, [r7, #4]
 5296 0086 3A1C     		mov	r2, r7
 5297 0088 0E32     		add	r2, r2, #14
 5298 008a 1288     		ldrh	r2, [r2]
 5299 008c 9A83     		strh	r2, [r3, #28]
1375:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 5300              		.loc 1 1375 0
 5301 008e BD46     		mov	sp, r7
 5302 0090 04B0     		add	sp, sp, #16
 5303              		@ sp needed
 5304 0092 80BD     		pop	{r7, pc}
 5305              	.L221:
 5306              		.align	2
 5307              	.L220:
 5308 0094 002C0140 		.word	1073818624
 5309 0098 00040040 		.word	1073742848
 5310 009c 00000000 		.word	.LC0
 5311 00a0 55050000 		.word	1365
 5312 00a4 56050000 		.word	1366
 5313              		.cfi_endproc
 5314              	.LFE67:
 5316              		.section	.text.TIM_OC4PreloadConfig,"ax",%progbits
 5317              		.align	2
 5318              		.global	TIM_OC4PreloadConfig
 5319              		.code	16
 5320              		.thumb_func
 5322              	TIM_OC4PreloadConfig:
 5323              	.LFB68:
1376:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1377:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1378:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR4.
1379:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2 or 3 to select the TIM peripheral.
1380:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1381:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
1382:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCPreload_Enable
1383:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCPreload_Disable
1384:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1385:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1386:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_OC4PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1387:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 5324              		.loc 1 1387 0
 5325              		.cfi_startproc
 5326 0000 80B5     		push	{r7, lr}
 5327              		.cfi_def_cfa_offset 8
 5328              		.cfi_offset 7, -8
 5329              		.cfi_offset 14, -4
 5330 0002 84B0     		sub	sp, sp, #16
 5331              		.cfi_def_cfa_offset 24
 5332 0004 00AF     		add	r7, sp, #0
 5333              		.cfi_def_cfa_register 7
 5334 0006 7860     		str	r0, [r7, #4]
 5335 0008 0A1C     		mov	r2, r1
 5336 000a BB1C     		add	r3, r7, #2
 5337 000c 1A80     		strh	r2, [r3]
1388:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccmr2 = 0;
 5338              		.loc 1 1388 0
 5339 000e 3B1C     		mov	r3, r7
 5340 0010 0E33     		add	r3, r3, #14
 5341 0012 0022     		mov	r2, #0
 5342 0014 1A80     		strh	r2, [r3]
1389:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1390:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1391:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 5343              		.loc 1 1391 0
 5344 0016 7A68     		ldr	r2, [r7, #4]
 5345 0018 204B     		ldr	r3, .L225
 5346 001a 9A42     		cmp	r2, r3
 5347 001c 0ED0     		beq	.L223
 5348              		.loc 1 1391 0 is_stmt 0 discriminator 1
 5349 001e 7A68     		ldr	r2, [r7, #4]
 5350 0020 8023     		mov	r3, #128
 5351 0022 DB05     		lsl	r3, r3, #23
 5352 0024 9A42     		cmp	r2, r3
 5353 0026 09D0     		beq	.L223
 5354 0028 7A68     		ldr	r2, [r7, #4]
 5355 002a 1D4B     		ldr	r3, .L225+4
 5356 002c 9A42     		cmp	r2, r3
 5357 002e 05D0     		beq	.L223
 5358 0030 1C4A     		ldr	r2, .L225+8
 5359 0032 1D4B     		ldr	r3, .L225+12
 5360 0034 101C     		mov	r0, r2
 5361 0036 191C     		mov	r1, r3
 5362 0038 FFF7FEFF 		bl	assert_failed
 5363              	.L223:
1392:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
 5364              		.loc 1 1392 0 is_stmt 1
 5365 003c BB1C     		add	r3, r7, #2
 5366 003e 1B88     		ldrh	r3, [r3]
 5367 0040 082B     		cmp	r3, #8
 5368 0042 0AD0     		beq	.L224
 5369              		.loc 1 1392 0 is_stmt 0 discriminator 1
 5370 0044 BB1C     		add	r3, r7, #2
 5371 0046 1B88     		ldrh	r3, [r3]
 5372 0048 002B     		cmp	r3, #0
 5373 004a 06D0     		beq	.L224
 5374 004c 154A     		ldr	r2, .L225+8
 5375 004e AE23     		mov	r3, #174
 5376 0050 DB00     		lsl	r3, r3, #3
 5377 0052 101C     		mov	r0, r2
 5378 0054 191C     		mov	r1, r3
 5379 0056 FFF7FEFF 		bl	assert_failed
 5380              	.L224:
1393:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1394:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 5381              		.loc 1 1394 0 is_stmt 1
 5382 005a 3B1C     		mov	r3, r7
 5383 005c 0E33     		add	r3, r3, #14
 5384 005e 7A68     		ldr	r2, [r7, #4]
 5385 0060 928B     		ldrh	r2, [r2, #28]
 5386 0062 1A80     		strh	r2, [r3]
1395:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the OC4PE Bit */
1396:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4PE);
 5387              		.loc 1 1396 0
 5388 0064 3B1C     		mov	r3, r7
 5389 0066 0E33     		add	r3, r3, #14
 5390 0068 3A1C     		mov	r2, r7
 5391 006a 0E32     		add	r2, r2, #14
 5392 006c 1188     		ldrh	r1, [r2]
 5393 006e 0F4A     		ldr	r2, .L225+16
 5394 0070 0A40     		and	r2, r1
 5395 0072 1A80     		strh	r2, [r3]
1397:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1398:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCPreload << 8);
 5396              		.loc 1 1398 0
 5397 0074 BB1C     		add	r3, r7, #2
 5398 0076 1B88     		ldrh	r3, [r3]
 5399 0078 1B02     		lsl	r3, r3, #8
 5400 007a 99B2     		uxth	r1, r3
 5401 007c 3B1C     		mov	r3, r7
 5402 007e 0E33     		add	r3, r3, #14
 5403 0080 3A1C     		mov	r2, r7
 5404 0082 0E32     		add	r2, r2, #14
 5405 0084 1288     		ldrh	r2, [r2]
 5406 0086 0A43     		orr	r2, r1
 5407 0088 1A80     		strh	r2, [r3]
1399:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCMR2 register */
1400:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 5408              		.loc 1 1400 0
 5409 008a 7B68     		ldr	r3, [r7, #4]
 5410 008c 3A1C     		mov	r2, r7
 5411 008e 0E32     		add	r2, r2, #14
 5412 0090 1288     		ldrh	r2, [r2]
 5413 0092 9A83     		strh	r2, [r3, #28]
1401:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 5414              		.loc 1 1401 0
 5415 0094 BD46     		mov	sp, r7
 5416 0096 04B0     		add	sp, sp, #16
 5417              		@ sp needed
 5418 0098 80BD     		pop	{r7, pc}
 5419              	.L226:
 5420 009a C046     		.align	2
 5421              	.L225:
 5422 009c 002C0140 		.word	1073818624
 5423 00a0 00040040 		.word	1073742848
 5424 00a4 00000000 		.word	.LC0
 5425 00a8 6F050000 		.word	1391
 5426 00ac FFF7FFFF 		.word	-2049
 5427              		.cfi_endproc
 5428              	.LFE68:
 5430              		.section	.text.TIM_OC1FastConfig,"ax",%progbits
 5431              		.align	2
 5432              		.global	TIM_OC1FastConfig
 5433              		.code	16
 5434              		.thumb_func
 5436              	TIM_OC1FastConfig:
 5437              	.LFB69:
1402:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1403:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1404:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Configures the TIMx Output Compare 1 Fast feature.
1405:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 14, 15, 16 or 17 to select the TIM peripheral.
1406:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1407:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
1408:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCFast_Enable: TIM output compare fast enable
1409:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCFast_Disable: TIM output compare fast disable
1410:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1411:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1412:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_OC1FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1413:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 5438              		.loc 1 1413 0
 5439              		.cfi_startproc
 5440 0000 80B5     		push	{r7, lr}
 5441              		.cfi_def_cfa_offset 8
 5442              		.cfi_offset 7, -8
 5443              		.cfi_offset 14, -4
 5444 0002 84B0     		sub	sp, sp, #16
 5445              		.cfi_def_cfa_offset 24
 5446 0004 00AF     		add	r7, sp, #0
 5447              		.cfi_def_cfa_register 7
 5448 0006 7860     		str	r0, [r7, #4]
 5449 0008 0A1C     		mov	r2, r1
 5450 000a BB1C     		add	r3, r7, #2
 5451 000c 1A80     		strh	r2, [r3]
1414:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccmr1 = 0;
 5452              		.loc 1 1414 0
 5453 000e 3B1C     		mov	r3, r7
 5454 0010 0E33     		add	r3, r3, #14
 5455 0012 0022     		mov	r2, #0
 5456 0014 1A80     		strh	r2, [r3]
1415:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1416:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1417:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
 5457              		.loc 1 1417 0
 5458 0016 7A68     		ldr	r2, [r7, #4]
 5459 0018 264B     		ldr	r3, .L230
 5460 001a 9A42     		cmp	r2, r3
 5461 001c 1ED0     		beq	.L228
 5462              		.loc 1 1417 0 is_stmt 0 discriminator 1
 5463 001e 7A68     		ldr	r2, [r7, #4]
 5464 0020 8023     		mov	r3, #128
 5465 0022 DB05     		lsl	r3, r3, #23
 5466 0024 9A42     		cmp	r2, r3
 5467 0026 19D0     		beq	.L228
 5468 0028 7A68     		ldr	r2, [r7, #4]
 5469 002a 234B     		ldr	r3, .L230+4
 5470 002c 9A42     		cmp	r2, r3
 5471 002e 15D0     		beq	.L228
 5472 0030 7A68     		ldr	r2, [r7, #4]
 5473 0032 224B     		ldr	r3, .L230+8
 5474 0034 9A42     		cmp	r2, r3
 5475 0036 11D0     		beq	.L228
 5476 0038 7A68     		ldr	r2, [r7, #4]
 5477 003a 214B     		ldr	r3, .L230+12
 5478 003c 9A42     		cmp	r2, r3
 5479 003e 0DD0     		beq	.L228
 5480 0040 7A68     		ldr	r2, [r7, #4]
 5481 0042 204B     		ldr	r3, .L230+16
 5482 0044 9A42     		cmp	r2, r3
 5483 0046 09D0     		beq	.L228
 5484 0048 7A68     		ldr	r2, [r7, #4]
 5485 004a 1F4B     		ldr	r3, .L230+20
 5486 004c 9A42     		cmp	r2, r3
 5487 004e 05D0     		beq	.L228
 5488 0050 1E4A     		ldr	r2, .L230+24
 5489 0052 1F4B     		ldr	r3, .L230+28
 5490 0054 101C     		mov	r0, r2
 5491 0056 191C     		mov	r1, r3
 5492 0058 FFF7FEFF 		bl	assert_failed
 5493              	.L228:
1418:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
 5494              		.loc 1 1418 0 is_stmt 1
 5495 005c BB1C     		add	r3, r7, #2
 5496 005e 1B88     		ldrh	r3, [r3]
 5497 0060 042B     		cmp	r3, #4
 5498 0062 09D0     		beq	.L229
 5499              		.loc 1 1418 0 is_stmt 0 discriminator 1
 5500 0064 BB1C     		add	r3, r7, #2
 5501 0066 1B88     		ldrh	r3, [r3]
 5502 0068 002B     		cmp	r3, #0
 5503 006a 05D0     		beq	.L229
 5504 006c 174A     		ldr	r2, .L230+24
 5505 006e 194B     		ldr	r3, .L230+32
 5506 0070 101C     		mov	r0, r2
 5507 0072 191C     		mov	r1, r3
 5508 0074 FFF7FEFF 		bl	assert_failed
 5509              	.L229:
1419:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1420:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1421:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5510              		.loc 1 1421 0 is_stmt 1
 5511 0078 3B1C     		mov	r3, r7
 5512 007a 0E33     		add	r3, r3, #14
 5513 007c 7A68     		ldr	r2, [r7, #4]
 5514 007e 128B     		ldrh	r2, [r2, #24]
 5515 0080 1A80     		strh	r2, [r3]
1422:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the OC1FE Bit */
1423:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1FE);
 5516              		.loc 1 1423 0
 5517 0082 3B1C     		mov	r3, r7
 5518 0084 0E33     		add	r3, r3, #14
 5519 0086 3A1C     		mov	r2, r7
 5520 0088 0E32     		add	r2, r2, #14
 5521 008a 1288     		ldrh	r2, [r2]
 5522 008c 0421     		mov	r1, #4
 5523 008e 8A43     		bic	r2, r1
 5524 0090 1A80     		strh	r2, [r3]
1424:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1425:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 |= TIM_OCFast;
 5525              		.loc 1 1425 0
 5526 0092 3B1C     		mov	r3, r7
 5527 0094 0E33     		add	r3, r3, #14
 5528 0096 391C     		mov	r1, r7
 5529 0098 0E31     		add	r1, r1, #14
 5530 009a BA1C     		add	r2, r7, #2
 5531 009c 0988     		ldrh	r1, [r1]
 5532 009e 1288     		ldrh	r2, [r2]
 5533 00a0 0A43     		orr	r2, r1
 5534 00a2 1A80     		strh	r2, [r3]
1426:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCMR1 */
1427:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 5535              		.loc 1 1427 0
 5536 00a4 7B68     		ldr	r3, [r7, #4]
 5537 00a6 3A1C     		mov	r2, r7
 5538 00a8 0E32     		add	r2, r2, #14
 5539 00aa 1288     		ldrh	r2, [r2]
 5540 00ac 1A83     		strh	r2, [r3, #24]
1428:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 5541              		.loc 1 1428 0
 5542 00ae BD46     		mov	sp, r7
 5543 00b0 04B0     		add	sp, sp, #16
 5544              		@ sp needed
 5545 00b2 80BD     		pop	{r7, pc}
 5546              	.L231:
 5547              		.align	2
 5548              	.L230:
 5549 00b4 002C0140 		.word	1073818624
 5550 00b8 00040040 		.word	1073742848
 5551 00bc 00200040 		.word	1073750016
 5552 00c0 00400140 		.word	1073823744
 5553 00c4 00440140 		.word	1073824768
 5554 00c8 00480140 		.word	1073825792
 5555 00cc 00000000 		.word	.LC0
 5556 00d0 89050000 		.word	1417
 5557 00d4 8A050000 		.word	1418
 5558              		.cfi_endproc
 5559              	.LFE69:
 5561              		.section	.text.TIM_OC2FastConfig,"ax",%progbits
 5562              		.align	2
 5563              		.global	TIM_OC2FastConfig
 5564              		.code	16
 5565              		.thumb_func
 5567              	TIM_OC2FastConfig:
 5568              	.LFB70:
1429:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1430:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1431:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Configures the TIMx Output Compare 2 Fast feature.
1432:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3 or 15 to select the TIM peripheral.
1433:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1434:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
1435:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCFast_Enable: TIM output compare fast enable
1436:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCFast_Disable: TIM output compare fast disable
1437:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1438:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1439:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_OC2FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1440:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 5569              		.loc 1 1440 0
 5570              		.cfi_startproc
 5571 0000 80B5     		push	{r7, lr}
 5572              		.cfi_def_cfa_offset 8
 5573              		.cfi_offset 7, -8
 5574              		.cfi_offset 14, -4
 5575 0002 84B0     		sub	sp, sp, #16
 5576              		.cfi_def_cfa_offset 24
 5577 0004 00AF     		add	r7, sp, #0
 5578              		.cfi_def_cfa_register 7
 5579 0006 7860     		str	r0, [r7, #4]
 5580 0008 0A1C     		mov	r2, r1
 5581 000a BB1C     		add	r3, r7, #2
 5582 000c 1A80     		strh	r2, [r3]
1441:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccmr1 = 0;
 5583              		.loc 1 1441 0
 5584 000e 3B1C     		mov	r3, r7
 5585 0010 0E33     		add	r3, r3, #14
 5586 0012 0022     		mov	r2, #0
 5587 0014 1A80     		strh	r2, [r3]
1442:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1443:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1444:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 5588              		.loc 1 1444 0
 5589 0016 7A68     		ldr	r2, [r7, #4]
 5590 0018 214B     		ldr	r3, .L235
 5591 001a 9A42     		cmp	r2, r3
 5592 001c 12D0     		beq	.L233
 5593              		.loc 1 1444 0 is_stmt 0 discriminator 1
 5594 001e 7A68     		ldr	r2, [r7, #4]
 5595 0020 8023     		mov	r3, #128
 5596 0022 DB05     		lsl	r3, r3, #23
 5597 0024 9A42     		cmp	r2, r3
 5598 0026 0DD0     		beq	.L233
 5599 0028 7A68     		ldr	r2, [r7, #4]
 5600 002a 1E4B     		ldr	r3, .L235+4
 5601 002c 9A42     		cmp	r2, r3
 5602 002e 09D0     		beq	.L233
 5603 0030 7A68     		ldr	r2, [r7, #4]
 5604 0032 1D4B     		ldr	r3, .L235+8
 5605 0034 9A42     		cmp	r2, r3
 5606 0036 05D0     		beq	.L233
 5607 0038 1C4A     		ldr	r2, .L235+12
 5608 003a 1D4B     		ldr	r3, .L235+16
 5609 003c 101C     		mov	r0, r2
 5610 003e 191C     		mov	r1, r3
 5611 0040 FFF7FEFF 		bl	assert_failed
 5612              	.L233:
1445:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
 5613              		.loc 1 1445 0 is_stmt 1
 5614 0044 BB1C     		add	r3, r7, #2
 5615 0046 1B88     		ldrh	r3, [r3]
 5616 0048 042B     		cmp	r3, #4
 5617 004a 09D0     		beq	.L234
 5618              		.loc 1 1445 0 is_stmt 0 discriminator 1
 5619 004c BB1C     		add	r3, r7, #2
 5620 004e 1B88     		ldrh	r3, [r3]
 5621 0050 002B     		cmp	r3, #0
 5622 0052 05D0     		beq	.L234
 5623 0054 154A     		ldr	r2, .L235+12
 5624 0056 174B     		ldr	r3, .L235+20
 5625 0058 101C     		mov	r0, r2
 5626 005a 191C     		mov	r1, r3
 5627 005c FFF7FEFF 		bl	assert_failed
 5628              	.L234:
1446:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1447:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1448:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5629              		.loc 1 1448 0 is_stmt 1
 5630 0060 3B1C     		mov	r3, r7
 5631 0062 0E33     		add	r3, r3, #14
 5632 0064 7A68     		ldr	r2, [r7, #4]
 5633 0066 128B     		ldrh	r2, [r2, #24]
 5634 0068 1A80     		strh	r2, [r3]
1449:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the OC2FE Bit */
1450:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2FE);
 5635              		.loc 1 1450 0
 5636 006a 3B1C     		mov	r3, r7
 5637 006c 0E33     		add	r3, r3, #14
 5638 006e 3A1C     		mov	r2, r7
 5639 0070 0E32     		add	r2, r2, #14
 5640 0072 1188     		ldrh	r1, [r2]
 5641 0074 104A     		ldr	r2, .L235+24
 5642 0076 0A40     		and	r2, r1
 5643 0078 1A80     		strh	r2, [r3]
1451:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1452:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCFast << 8);
 5644              		.loc 1 1452 0
 5645 007a BB1C     		add	r3, r7, #2
 5646 007c 1B88     		ldrh	r3, [r3]
 5647 007e 1B02     		lsl	r3, r3, #8
 5648 0080 99B2     		uxth	r1, r3
 5649 0082 3B1C     		mov	r3, r7
 5650 0084 0E33     		add	r3, r3, #14
 5651 0086 3A1C     		mov	r2, r7
 5652 0088 0E32     		add	r2, r2, #14
 5653 008a 1288     		ldrh	r2, [r2]
 5654 008c 0A43     		orr	r2, r1
 5655 008e 1A80     		strh	r2, [r3]
1453:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCMR1 */
1454:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 5656              		.loc 1 1454 0
 5657 0090 7B68     		ldr	r3, [r7, #4]
 5658 0092 3A1C     		mov	r2, r7
 5659 0094 0E32     		add	r2, r2, #14
 5660 0096 1288     		ldrh	r2, [r2]
 5661 0098 1A83     		strh	r2, [r3, #24]
1455:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 5662              		.loc 1 1455 0
 5663 009a BD46     		mov	sp, r7
 5664 009c 04B0     		add	sp, sp, #16
 5665              		@ sp needed
 5666 009e 80BD     		pop	{r7, pc}
 5667              	.L236:
 5668              		.align	2
 5669              	.L235:
 5670 00a0 002C0140 		.word	1073818624
 5671 00a4 00040040 		.word	1073742848
 5672 00a8 00400140 		.word	1073823744
 5673 00ac 00000000 		.word	.LC0
 5674 00b0 A4050000 		.word	1444
 5675 00b4 A5050000 		.word	1445
 5676 00b8 FFFBFFFF 		.word	-1025
 5677              		.cfi_endproc
 5678              	.LFE70:
 5680              		.section	.text.TIM_OC3FastConfig,"ax",%progbits
 5681              		.align	2
 5682              		.global	TIM_OC3FastConfig
 5683              		.code	16
 5684              		.thumb_func
 5686              	TIM_OC3FastConfig:
 5687              	.LFB71:
1456:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1457:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1458:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Configures the TIMx Output Compare 3 Fast feature.
1459:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2 or 3 to select the TIM peripheral.
1460:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1461:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
1462:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCFast_Enable: TIM output compare fast enable
1463:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCFast_Disable: TIM output compare fast disable
1464:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1465:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1466:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_OC3FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1467:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 5688              		.loc 1 1467 0
 5689              		.cfi_startproc
 5690 0000 80B5     		push	{r7, lr}
 5691              		.cfi_def_cfa_offset 8
 5692              		.cfi_offset 7, -8
 5693              		.cfi_offset 14, -4
 5694 0002 84B0     		sub	sp, sp, #16
 5695              		.cfi_def_cfa_offset 24
 5696 0004 00AF     		add	r7, sp, #0
 5697              		.cfi_def_cfa_register 7
 5698 0006 7860     		str	r0, [r7, #4]
 5699 0008 0A1C     		mov	r2, r1
 5700 000a BB1C     		add	r3, r7, #2
 5701 000c 1A80     		strh	r2, [r3]
1468:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccmr2 = 0;
 5702              		.loc 1 1468 0
 5703 000e 3B1C     		mov	r3, r7
 5704 0010 0E33     		add	r3, r3, #14
 5705 0012 0022     		mov	r2, #0
 5706 0014 1A80     		strh	r2, [r3]
1469:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1470:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1471:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 5707              		.loc 1 1471 0
 5708 0016 7A68     		ldr	r2, [r7, #4]
 5709 0018 1F4B     		ldr	r3, .L240
 5710 001a 9A42     		cmp	r2, r3
 5711 001c 0ED0     		beq	.L238
 5712              		.loc 1 1471 0 is_stmt 0 discriminator 1
 5713 001e 7A68     		ldr	r2, [r7, #4]
 5714 0020 8023     		mov	r3, #128
 5715 0022 DB05     		lsl	r3, r3, #23
 5716 0024 9A42     		cmp	r2, r3
 5717 0026 09D0     		beq	.L238
 5718 0028 7A68     		ldr	r2, [r7, #4]
 5719 002a 1C4B     		ldr	r3, .L240+4
 5720 002c 9A42     		cmp	r2, r3
 5721 002e 05D0     		beq	.L238
 5722 0030 1B4A     		ldr	r2, .L240+8
 5723 0032 1C4B     		ldr	r3, .L240+12
 5724 0034 101C     		mov	r0, r2
 5725 0036 191C     		mov	r1, r3
 5726 0038 FFF7FEFF 		bl	assert_failed
 5727              	.L238:
1472:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
 5728              		.loc 1 1472 0 is_stmt 1
 5729 003c BB1C     		add	r3, r7, #2
 5730 003e 1B88     		ldrh	r3, [r3]
 5731 0040 042B     		cmp	r3, #4
 5732 0042 0AD0     		beq	.L239
 5733              		.loc 1 1472 0 is_stmt 0 discriminator 1
 5734 0044 BB1C     		add	r3, r7, #2
 5735 0046 1B88     		ldrh	r3, [r3]
 5736 0048 002B     		cmp	r3, #0
 5737 004a 06D0     		beq	.L239
 5738 004c 144A     		ldr	r2, .L240+8
 5739 004e B823     		mov	r3, #184
 5740 0050 DB00     		lsl	r3, r3, #3
 5741 0052 101C     		mov	r0, r2
 5742 0054 191C     		mov	r1, r3
 5743 0056 FFF7FEFF 		bl	assert_failed
 5744              	.L239:
1473:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1474:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1475:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 5745              		.loc 1 1475 0 is_stmt 1
 5746 005a 3B1C     		mov	r3, r7
 5747 005c 0E33     		add	r3, r3, #14
 5748 005e 7A68     		ldr	r2, [r7, #4]
 5749 0060 928B     		ldrh	r2, [r2, #28]
 5750 0062 1A80     		strh	r2, [r3]
1476:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the OC3FE Bit */
1477:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3FE);
 5751              		.loc 1 1477 0
 5752 0064 3B1C     		mov	r3, r7
 5753 0066 0E33     		add	r3, r3, #14
 5754 0068 3A1C     		mov	r2, r7
 5755 006a 0E32     		add	r2, r2, #14
 5756 006c 1288     		ldrh	r2, [r2]
 5757 006e 0421     		mov	r1, #4
 5758 0070 8A43     		bic	r2, r1
 5759 0072 1A80     		strh	r2, [r3]
1478:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1479:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 |= TIM_OCFast;
 5760              		.loc 1 1479 0
 5761 0074 3B1C     		mov	r3, r7
 5762 0076 0E33     		add	r3, r3, #14
 5763 0078 391C     		mov	r1, r7
 5764 007a 0E31     		add	r1, r1, #14
 5765 007c BA1C     		add	r2, r7, #2
 5766 007e 0988     		ldrh	r1, [r1]
 5767 0080 1288     		ldrh	r2, [r2]
 5768 0082 0A43     		orr	r2, r1
 5769 0084 1A80     		strh	r2, [r3]
1480:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCMR2 */
1481:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 5770              		.loc 1 1481 0
 5771 0086 7B68     		ldr	r3, [r7, #4]
 5772 0088 3A1C     		mov	r2, r7
 5773 008a 0E32     		add	r2, r2, #14
 5774 008c 1288     		ldrh	r2, [r2]
 5775 008e 9A83     		strh	r2, [r3, #28]
1482:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 5776              		.loc 1 1482 0
 5777 0090 BD46     		mov	sp, r7
 5778 0092 04B0     		add	sp, sp, #16
 5779              		@ sp needed
 5780 0094 80BD     		pop	{r7, pc}
 5781              	.L241:
 5782 0096 C046     		.align	2
 5783              	.L240:
 5784 0098 002C0140 		.word	1073818624
 5785 009c 00040040 		.word	1073742848
 5786 00a0 00000000 		.word	.LC0
 5787 00a4 BF050000 		.word	1471
 5788              		.cfi_endproc
 5789              	.LFE71:
 5791              		.section	.text.TIM_OC4FastConfig,"ax",%progbits
 5792              		.align	2
 5793              		.global	TIM_OC4FastConfig
 5794              		.code	16
 5795              		.thumb_func
 5797              	TIM_OC4FastConfig:
 5798              	.LFB72:
1483:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1484:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1485:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Configures the TIMx Output Compare 4 Fast feature.
1486:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2 or 3 to select the TIM peripheral.
1487:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1488:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
1489:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCFast_Enable: TIM output compare fast enable
1490:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCFast_Disable: TIM output compare fast disable
1491:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1492:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1493:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_OC4FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1494:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 5799              		.loc 1 1494 0
 5800              		.cfi_startproc
 5801 0000 80B5     		push	{r7, lr}
 5802              		.cfi_def_cfa_offset 8
 5803              		.cfi_offset 7, -8
 5804              		.cfi_offset 14, -4
 5805 0002 84B0     		sub	sp, sp, #16
 5806              		.cfi_def_cfa_offset 24
 5807 0004 00AF     		add	r7, sp, #0
 5808              		.cfi_def_cfa_register 7
 5809 0006 7860     		str	r0, [r7, #4]
 5810 0008 0A1C     		mov	r2, r1
 5811 000a BB1C     		add	r3, r7, #2
 5812 000c 1A80     		strh	r2, [r3]
1495:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccmr2 = 0;
 5813              		.loc 1 1495 0
 5814 000e 3B1C     		mov	r3, r7
 5815 0010 0E33     		add	r3, r3, #14
 5816 0012 0022     		mov	r2, #0
 5817 0014 1A80     		strh	r2, [r3]
1496:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1497:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1498:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 5818              		.loc 1 1498 0
 5819 0016 7A68     		ldr	r2, [r7, #4]
 5820 0018 1F4B     		ldr	r3, .L245
 5821 001a 9A42     		cmp	r2, r3
 5822 001c 0ED0     		beq	.L243
 5823              		.loc 1 1498 0 is_stmt 0 discriminator 1
 5824 001e 7A68     		ldr	r2, [r7, #4]
 5825 0020 8023     		mov	r3, #128
 5826 0022 DB05     		lsl	r3, r3, #23
 5827 0024 9A42     		cmp	r2, r3
 5828 0026 09D0     		beq	.L243
 5829 0028 7A68     		ldr	r2, [r7, #4]
 5830 002a 1C4B     		ldr	r3, .L245+4
 5831 002c 9A42     		cmp	r2, r3
 5832 002e 05D0     		beq	.L243
 5833 0030 1B4A     		ldr	r2, .L245+8
 5834 0032 1C4B     		ldr	r3, .L245+12
 5835 0034 101C     		mov	r0, r2
 5836 0036 191C     		mov	r1, r3
 5837 0038 FFF7FEFF 		bl	assert_failed
 5838              	.L243:
1499:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
 5839              		.loc 1 1499 0 is_stmt 1
 5840 003c BB1C     		add	r3, r7, #2
 5841 003e 1B88     		ldrh	r3, [r3]
 5842 0040 042B     		cmp	r3, #4
 5843 0042 09D0     		beq	.L244
 5844              		.loc 1 1499 0 is_stmt 0 discriminator 1
 5845 0044 BB1C     		add	r3, r7, #2
 5846 0046 1B88     		ldrh	r3, [r3]
 5847 0048 002B     		cmp	r3, #0
 5848 004a 05D0     		beq	.L244
 5849 004c 144A     		ldr	r2, .L245+8
 5850 004e 164B     		ldr	r3, .L245+16
 5851 0050 101C     		mov	r0, r2
 5852 0052 191C     		mov	r1, r3
 5853 0054 FFF7FEFF 		bl	assert_failed
 5854              	.L244:
1500:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1501:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1502:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 5855              		.loc 1 1502 0 is_stmt 1
 5856 0058 3B1C     		mov	r3, r7
 5857 005a 0E33     		add	r3, r3, #14
 5858 005c 7A68     		ldr	r2, [r7, #4]
 5859 005e 928B     		ldrh	r2, [r2, #28]
 5860 0060 1A80     		strh	r2, [r3]
1503:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the OC4FE Bit */
1504:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4FE);
 5861              		.loc 1 1504 0
 5862 0062 3B1C     		mov	r3, r7
 5863 0064 0E33     		add	r3, r3, #14
 5864 0066 3A1C     		mov	r2, r7
 5865 0068 0E32     		add	r2, r2, #14
 5866 006a 1188     		ldrh	r1, [r2]
 5867 006c 0F4A     		ldr	r2, .L245+20
 5868 006e 0A40     		and	r2, r1
 5869 0070 1A80     		strh	r2, [r3]
1505:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1506:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCFast << 8);
 5870              		.loc 1 1506 0
 5871 0072 BB1C     		add	r3, r7, #2
 5872 0074 1B88     		ldrh	r3, [r3]
 5873 0076 1B02     		lsl	r3, r3, #8
 5874 0078 99B2     		uxth	r1, r3
 5875 007a 3B1C     		mov	r3, r7
 5876 007c 0E33     		add	r3, r3, #14
 5877 007e 3A1C     		mov	r2, r7
 5878 0080 0E32     		add	r2, r2, #14
 5879 0082 1288     		ldrh	r2, [r2]
 5880 0084 0A43     		orr	r2, r1
 5881 0086 1A80     		strh	r2, [r3]
1507:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCMR2 */
1508:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 5882              		.loc 1 1508 0
 5883 0088 7B68     		ldr	r3, [r7, #4]
 5884 008a 3A1C     		mov	r2, r7
 5885 008c 0E32     		add	r2, r2, #14
 5886 008e 1288     		ldrh	r2, [r2]
 5887 0090 9A83     		strh	r2, [r3, #28]
1509:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 5888              		.loc 1 1509 0
 5889 0092 BD46     		mov	sp, r7
 5890 0094 04B0     		add	sp, sp, #16
 5891              		@ sp needed
 5892 0096 80BD     		pop	{r7, pc}
 5893              	.L246:
 5894              		.align	2
 5895              	.L245:
 5896 0098 002C0140 		.word	1073818624
 5897 009c 00040040 		.word	1073742848
 5898 00a0 00000000 		.word	.LC0
 5899 00a4 DA050000 		.word	1498
 5900 00a8 DB050000 		.word	1499
 5901 00ac FFFBFFFF 		.word	-1025
 5902              		.cfi_endproc
 5903              	.LFE72:
 5905              		.section	.text.TIM_ClearOC1Ref,"ax",%progbits
 5906              		.align	2
 5907              		.global	TIM_ClearOC1Ref
 5908              		.code	16
 5909              		.thumb_func
 5911              	TIM_ClearOC1Ref:
 5912              	.LFB73:
1510:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1511:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1512:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Clears or safeguards the OCREF1 signal on an external event
1513:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 14, 15, 16 or 17 to select the TIM peripheral.
1514:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1515:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
1516:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCClear_Enable: TIM Output clear enable
1517:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCClear_Disable: TIM Output clear disable
1518:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1519:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1520:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_ClearOC1Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1521:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 5913              		.loc 1 1521 0
 5914              		.cfi_startproc
 5915 0000 80B5     		push	{r7, lr}
 5916              		.cfi_def_cfa_offset 8
 5917              		.cfi_offset 7, -8
 5918              		.cfi_offset 14, -4
 5919 0002 84B0     		sub	sp, sp, #16
 5920              		.cfi_def_cfa_offset 24
 5921 0004 00AF     		add	r7, sp, #0
 5922              		.cfi_def_cfa_register 7
 5923 0006 7860     		str	r0, [r7, #4]
 5924 0008 0A1C     		mov	r2, r1
 5925 000a BB1C     		add	r3, r7, #2
 5926 000c 1A80     		strh	r2, [r3]
1522:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccmr1 = 0;
 5927              		.loc 1 1522 0
 5928 000e 3B1C     		mov	r3, r7
 5929 0010 0E33     		add	r3, r3, #14
 5930 0012 0022     		mov	r2, #0
 5931 0014 1A80     		strh	r2, [r3]
1523:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1524:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1525:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
 5932              		.loc 1 1525 0
 5933 0016 7A68     		ldr	r2, [r7, #4]
 5934 0018 264B     		ldr	r3, .L250
 5935 001a 9A42     		cmp	r2, r3
 5936 001c 1ED0     		beq	.L248
 5937              		.loc 1 1525 0 is_stmt 0 discriminator 1
 5938 001e 7A68     		ldr	r2, [r7, #4]
 5939 0020 8023     		mov	r3, #128
 5940 0022 DB05     		lsl	r3, r3, #23
 5941 0024 9A42     		cmp	r2, r3
 5942 0026 19D0     		beq	.L248
 5943 0028 7A68     		ldr	r2, [r7, #4]
 5944 002a 234B     		ldr	r3, .L250+4
 5945 002c 9A42     		cmp	r2, r3
 5946 002e 15D0     		beq	.L248
 5947 0030 7A68     		ldr	r2, [r7, #4]
 5948 0032 224B     		ldr	r3, .L250+8
 5949 0034 9A42     		cmp	r2, r3
 5950 0036 11D0     		beq	.L248
 5951 0038 7A68     		ldr	r2, [r7, #4]
 5952 003a 214B     		ldr	r3, .L250+12
 5953 003c 9A42     		cmp	r2, r3
 5954 003e 0DD0     		beq	.L248
 5955 0040 7A68     		ldr	r2, [r7, #4]
 5956 0042 204B     		ldr	r3, .L250+16
 5957 0044 9A42     		cmp	r2, r3
 5958 0046 09D0     		beq	.L248
 5959 0048 7A68     		ldr	r2, [r7, #4]
 5960 004a 1F4B     		ldr	r3, .L250+20
 5961 004c 9A42     		cmp	r2, r3
 5962 004e 05D0     		beq	.L248
 5963 0050 1E4A     		ldr	r2, .L250+24
 5964 0052 1F4B     		ldr	r3, .L250+28
 5965 0054 101C     		mov	r0, r2
 5966 0056 191C     		mov	r1, r3
 5967 0058 FFF7FEFF 		bl	assert_failed
 5968              	.L248:
1526:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
 5969              		.loc 1 1526 0 is_stmt 1
 5970 005c BB1C     		add	r3, r7, #2
 5971 005e 1B88     		ldrh	r3, [r3]
 5972 0060 802B     		cmp	r3, #128
 5973 0062 09D0     		beq	.L249
 5974              		.loc 1 1526 0 is_stmt 0 discriminator 1
 5975 0064 BB1C     		add	r3, r7, #2
 5976 0066 1B88     		ldrh	r3, [r3]
 5977 0068 002B     		cmp	r3, #0
 5978 006a 05D0     		beq	.L249
 5979 006c 174A     		ldr	r2, .L250+24
 5980 006e 194B     		ldr	r3, .L250+32
 5981 0070 101C     		mov	r0, r2
 5982 0072 191C     		mov	r1, r3
 5983 0074 FFF7FEFF 		bl	assert_failed
 5984              	.L249:
1527:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1528:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5985              		.loc 1 1528 0 is_stmt 1
 5986 0078 3B1C     		mov	r3, r7
 5987 007a 0E33     		add	r3, r3, #14
 5988 007c 7A68     		ldr	r2, [r7, #4]
 5989 007e 128B     		ldrh	r2, [r2, #24]
 5990 0080 1A80     		strh	r2, [r3]
1529:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the OC1CE Bit */
1530:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1CE);
 5991              		.loc 1 1530 0
 5992 0082 3B1C     		mov	r3, r7
 5993 0084 0E33     		add	r3, r3, #14
 5994 0086 3A1C     		mov	r2, r7
 5995 0088 0E32     		add	r2, r2, #14
 5996 008a 1288     		ldrh	r2, [r2]
 5997 008c 8021     		mov	r1, #128
 5998 008e 8A43     		bic	r2, r1
 5999 0090 1A80     		strh	r2, [r3]
1531:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1532:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 |= TIM_OCClear;
 6000              		.loc 1 1532 0
 6001 0092 3B1C     		mov	r3, r7
 6002 0094 0E33     		add	r3, r3, #14
 6003 0096 391C     		mov	r1, r7
 6004 0098 0E31     		add	r1, r1, #14
 6005 009a BA1C     		add	r2, r7, #2
 6006 009c 0988     		ldrh	r1, [r1]
 6007 009e 1288     		ldrh	r2, [r2]
 6008 00a0 0A43     		orr	r2, r1
 6009 00a2 1A80     		strh	r2, [r3]
1533:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCMR1 register */
1534:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 6010              		.loc 1 1534 0
 6011 00a4 7B68     		ldr	r3, [r7, #4]
 6012 00a6 3A1C     		mov	r2, r7
 6013 00a8 0E32     		add	r2, r2, #14
 6014 00aa 1288     		ldrh	r2, [r2]
 6015 00ac 1A83     		strh	r2, [r3, #24]
1535:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 6016              		.loc 1 1535 0
 6017 00ae BD46     		mov	sp, r7
 6018 00b0 04B0     		add	sp, sp, #16
 6019              		@ sp needed
 6020 00b2 80BD     		pop	{r7, pc}
 6021              	.L251:
 6022              		.align	2
 6023              	.L250:
 6024 00b4 002C0140 		.word	1073818624
 6025 00b8 00040040 		.word	1073742848
 6026 00bc 00200040 		.word	1073750016
 6027 00c0 00400140 		.word	1073823744
 6028 00c4 00440140 		.word	1073824768
 6029 00c8 00480140 		.word	1073825792
 6030 00cc 00000000 		.word	.LC0
 6031 00d0 F5050000 		.word	1525
 6032 00d4 F6050000 		.word	1526
 6033              		.cfi_endproc
 6034              	.LFE73:
 6036              		.section	.text.TIM_ClearOC2Ref,"ax",%progbits
 6037              		.align	2
 6038              		.global	TIM_ClearOC2Ref
 6039              		.code	16
 6040              		.thumb_func
 6042              	TIM_ClearOC2Ref:
 6043              	.LFB74:
1536:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1537:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1538:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Clears or safeguards the OCREF2 signal on an external event
1539:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3 or 15 to select the TIM peripheral.
1540:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1541:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1542:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
1543:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCClear_Enable: TIM Output clear enable
1544:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCClear_Disable: TIM Output clear disable
1545:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1546:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1547:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_ClearOC2Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1548:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 6044              		.loc 1 1548 0
 6045              		.cfi_startproc
 6046 0000 80B5     		push	{r7, lr}
 6047              		.cfi_def_cfa_offset 8
 6048              		.cfi_offset 7, -8
 6049              		.cfi_offset 14, -4
 6050 0002 84B0     		sub	sp, sp, #16
 6051              		.cfi_def_cfa_offset 24
 6052 0004 00AF     		add	r7, sp, #0
 6053              		.cfi_def_cfa_register 7
 6054 0006 7860     		str	r0, [r7, #4]
 6055 0008 0A1C     		mov	r2, r1
 6056 000a BB1C     		add	r3, r7, #2
 6057 000c 1A80     		strh	r2, [r3]
1549:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccmr1 = 0;
 6058              		.loc 1 1549 0
 6059 000e 3B1C     		mov	r3, r7
 6060 0010 0E33     		add	r3, r3, #14
 6061 0012 0022     		mov	r2, #0
 6062 0014 1A80     		strh	r2, [r3]
1550:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1551:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1552:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 6063              		.loc 1 1552 0
 6064 0016 7A68     		ldr	r2, [r7, #4]
 6065 0018 224B     		ldr	r3, .L255
 6066 001a 9A42     		cmp	r2, r3
 6067 001c 13D0     		beq	.L253
 6068              		.loc 1 1552 0 is_stmt 0 discriminator 1
 6069 001e 7A68     		ldr	r2, [r7, #4]
 6070 0020 8023     		mov	r3, #128
 6071 0022 DB05     		lsl	r3, r3, #23
 6072 0024 9A42     		cmp	r2, r3
 6073 0026 0ED0     		beq	.L253
 6074 0028 7A68     		ldr	r2, [r7, #4]
 6075 002a 1F4B     		ldr	r3, .L255+4
 6076 002c 9A42     		cmp	r2, r3
 6077 002e 0AD0     		beq	.L253
 6078 0030 7A68     		ldr	r2, [r7, #4]
 6079 0032 1E4B     		ldr	r3, .L255+8
 6080 0034 9A42     		cmp	r2, r3
 6081 0036 06D0     		beq	.L253
 6082 0038 1D4A     		ldr	r2, .L255+12
 6083 003a C223     		mov	r3, #194
 6084 003c DB00     		lsl	r3, r3, #3
 6085 003e 101C     		mov	r0, r2
 6086 0040 191C     		mov	r1, r3
 6087 0042 FFF7FEFF 		bl	assert_failed
 6088              	.L253:
1553:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
 6089              		.loc 1 1553 0 is_stmt 1
 6090 0046 BB1C     		add	r3, r7, #2
 6091 0048 1B88     		ldrh	r3, [r3]
 6092 004a 802B     		cmp	r3, #128
 6093 004c 09D0     		beq	.L254
 6094              		.loc 1 1553 0 is_stmt 0 discriminator 1
 6095 004e BB1C     		add	r3, r7, #2
 6096 0050 1B88     		ldrh	r3, [r3]
 6097 0052 002B     		cmp	r3, #0
 6098 0054 05D0     		beq	.L254
 6099 0056 164A     		ldr	r2, .L255+12
 6100 0058 164B     		ldr	r3, .L255+16
 6101 005a 101C     		mov	r0, r2
 6102 005c 191C     		mov	r1, r3
 6103 005e FFF7FEFF 		bl	assert_failed
 6104              	.L254:
1554:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1555:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 6105              		.loc 1 1555 0 is_stmt 1
 6106 0062 3B1C     		mov	r3, r7
 6107 0064 0E33     		add	r3, r3, #14
 6108 0066 7A68     		ldr	r2, [r7, #4]
 6109 0068 128B     		ldrh	r2, [r2, #24]
 6110 006a 1A80     		strh	r2, [r3]
1556:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the OC2CE Bit */
1557:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2CE);
 6111              		.loc 1 1557 0
 6112 006c 3B1C     		mov	r3, r7
 6113 006e 0E33     		add	r3, r3, #14
 6114 0070 3A1C     		mov	r2, r7
 6115 0072 0E32     		add	r2, r2, #14
 6116 0074 1288     		ldrh	r2, [r2]
 6117 0076 5204     		lsl	r2, r2, #17
 6118 0078 520C     		lsr	r2, r2, #17
 6119 007a 1A80     		strh	r2, [r3]
1558:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1559:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCClear << 8);
 6120              		.loc 1 1559 0
 6121 007c BB1C     		add	r3, r7, #2
 6122 007e 1B88     		ldrh	r3, [r3]
 6123 0080 1B02     		lsl	r3, r3, #8
 6124 0082 99B2     		uxth	r1, r3
 6125 0084 3B1C     		mov	r3, r7
 6126 0086 0E33     		add	r3, r3, #14
 6127 0088 3A1C     		mov	r2, r7
 6128 008a 0E32     		add	r2, r2, #14
 6129 008c 1288     		ldrh	r2, [r2]
 6130 008e 0A43     		orr	r2, r1
 6131 0090 1A80     		strh	r2, [r3]
1560:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCMR1 register */
1561:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 6132              		.loc 1 1561 0
 6133 0092 7B68     		ldr	r3, [r7, #4]
 6134 0094 3A1C     		mov	r2, r7
 6135 0096 0E32     		add	r2, r2, #14
 6136 0098 1288     		ldrh	r2, [r2]
 6137 009a 1A83     		strh	r2, [r3, #24]
1562:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 6138              		.loc 1 1562 0
 6139 009c BD46     		mov	sp, r7
 6140 009e 04B0     		add	sp, sp, #16
 6141              		@ sp needed
 6142 00a0 80BD     		pop	{r7, pc}
 6143              	.L256:
 6144 00a2 C046     		.align	2
 6145              	.L255:
 6146 00a4 002C0140 		.word	1073818624
 6147 00a8 00040040 		.word	1073742848
 6148 00ac 00400140 		.word	1073823744
 6149 00b0 00000000 		.word	.LC0
 6150 00b4 11060000 		.word	1553
 6151              		.cfi_endproc
 6152              	.LFE74:
 6154              		.section	.text.TIM_ClearOC3Ref,"ax",%progbits
 6155              		.align	2
 6156              		.global	TIM_ClearOC3Ref
 6157              		.code	16
 6158              		.thumb_func
 6160              	TIM_ClearOC3Ref:
 6161              	.LFB75:
1563:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1564:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1565:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Clears or safeguards the OCREF3 signal on an external event
1566:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2 or 3 to select the TIM peripheral.
1567:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1568:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
1569:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCClear_Enable: TIM Output clear enable
1570:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCClear_Disable: TIM Output clear disable
1571:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1572:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1573:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_ClearOC3Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1574:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 6162              		.loc 1 1574 0
 6163              		.cfi_startproc
 6164 0000 80B5     		push	{r7, lr}
 6165              		.cfi_def_cfa_offset 8
 6166              		.cfi_offset 7, -8
 6167              		.cfi_offset 14, -4
 6168 0002 84B0     		sub	sp, sp, #16
 6169              		.cfi_def_cfa_offset 24
 6170 0004 00AF     		add	r7, sp, #0
 6171              		.cfi_def_cfa_register 7
 6172 0006 7860     		str	r0, [r7, #4]
 6173 0008 0A1C     		mov	r2, r1
 6174 000a BB1C     		add	r3, r7, #2
 6175 000c 1A80     		strh	r2, [r3]
1575:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccmr2 = 0;
 6176              		.loc 1 1575 0
 6177 000e 3B1C     		mov	r3, r7
 6178 0010 0E33     		add	r3, r3, #14
 6179 0012 0022     		mov	r2, #0
 6180 0014 1A80     		strh	r2, [r3]
1576:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1577:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1578:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 6181              		.loc 1 1578 0
 6182 0016 7A68     		ldr	r2, [r7, #4]
 6183 0018 1E4B     		ldr	r3, .L260
 6184 001a 9A42     		cmp	r2, r3
 6185 001c 0ED0     		beq	.L258
 6186              		.loc 1 1578 0 is_stmt 0 discriminator 1
 6187 001e 7A68     		ldr	r2, [r7, #4]
 6188 0020 8023     		mov	r3, #128
 6189 0022 DB05     		lsl	r3, r3, #23
 6190 0024 9A42     		cmp	r2, r3
 6191 0026 09D0     		beq	.L258
 6192 0028 7A68     		ldr	r2, [r7, #4]
 6193 002a 1B4B     		ldr	r3, .L260+4
 6194 002c 9A42     		cmp	r2, r3
 6195 002e 05D0     		beq	.L258
 6196 0030 1A4A     		ldr	r2, .L260+8
 6197 0032 1B4B     		ldr	r3, .L260+12
 6198 0034 101C     		mov	r0, r2
 6199 0036 191C     		mov	r1, r3
 6200 0038 FFF7FEFF 		bl	assert_failed
 6201              	.L258:
1579:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
 6202              		.loc 1 1579 0 is_stmt 1
 6203 003c BB1C     		add	r3, r7, #2
 6204 003e 1B88     		ldrh	r3, [r3]
 6205 0040 802B     		cmp	r3, #128
 6206 0042 09D0     		beq	.L259
 6207              		.loc 1 1579 0 is_stmt 0 discriminator 1
 6208 0044 BB1C     		add	r3, r7, #2
 6209 0046 1B88     		ldrh	r3, [r3]
 6210 0048 002B     		cmp	r3, #0
 6211 004a 05D0     		beq	.L259
 6212 004c 134A     		ldr	r2, .L260+8
 6213 004e 154B     		ldr	r3, .L260+16
 6214 0050 101C     		mov	r0, r2
 6215 0052 191C     		mov	r1, r3
 6216 0054 FFF7FEFF 		bl	assert_failed
 6217              	.L259:
1580:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1581:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 6218              		.loc 1 1581 0 is_stmt 1
 6219 0058 3B1C     		mov	r3, r7
 6220 005a 0E33     		add	r3, r3, #14
 6221 005c 7A68     		ldr	r2, [r7, #4]
 6222 005e 928B     		ldrh	r2, [r2, #28]
 6223 0060 1A80     		strh	r2, [r3]
1582:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the OC3CE Bit */
1583:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3CE);
 6224              		.loc 1 1583 0
 6225 0062 3B1C     		mov	r3, r7
 6226 0064 0E33     		add	r3, r3, #14
 6227 0066 3A1C     		mov	r2, r7
 6228 0068 0E32     		add	r2, r2, #14
 6229 006a 1288     		ldrh	r2, [r2]
 6230 006c 8021     		mov	r1, #128
 6231 006e 8A43     		bic	r2, r1
 6232 0070 1A80     		strh	r2, [r3]
1584:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1585:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 |= TIM_OCClear;
 6233              		.loc 1 1585 0
 6234 0072 3B1C     		mov	r3, r7
 6235 0074 0E33     		add	r3, r3, #14
 6236 0076 391C     		mov	r1, r7
 6237 0078 0E31     		add	r1, r1, #14
 6238 007a BA1C     		add	r2, r7, #2
 6239 007c 0988     		ldrh	r1, [r1]
 6240 007e 1288     		ldrh	r2, [r2]
 6241 0080 0A43     		orr	r2, r1
 6242 0082 1A80     		strh	r2, [r3]
1586:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCMR2 register */
1587:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 6243              		.loc 1 1587 0
 6244 0084 7B68     		ldr	r3, [r7, #4]
 6245 0086 3A1C     		mov	r2, r7
 6246 0088 0E32     		add	r2, r2, #14
 6247 008a 1288     		ldrh	r2, [r2]
 6248 008c 9A83     		strh	r2, [r3, #28]
1588:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 6249              		.loc 1 1588 0
 6250 008e BD46     		mov	sp, r7
 6251 0090 04B0     		add	sp, sp, #16
 6252              		@ sp needed
 6253 0092 80BD     		pop	{r7, pc}
 6254              	.L261:
 6255              		.align	2
 6256              	.L260:
 6257 0094 002C0140 		.word	1073818624
 6258 0098 00040040 		.word	1073742848
 6259 009c 00000000 		.word	.LC0
 6260 00a0 2A060000 		.word	1578
 6261 00a4 2B060000 		.word	1579
 6262              		.cfi_endproc
 6263              	.LFE75:
 6265              		.section	.text.TIM_ClearOC4Ref,"ax",%progbits
 6266              		.align	2
 6267              		.global	TIM_ClearOC4Ref
 6268              		.code	16
 6269              		.thumb_func
 6271              	TIM_ClearOC4Ref:
 6272              	.LFB76:
1589:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1590:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1591:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Clears or safeguards the OCREF4 signal on an external event
1592:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2 or 3 to select the TIM peripheral.
1593:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1594:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
1595:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCClear_Enable: TIM Output clear enable
1596:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCClear_Disable: TIM Output clear disable
1597:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1598:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1599:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_ClearOC4Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1600:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 6273              		.loc 1 1600 0
 6274              		.cfi_startproc
 6275 0000 80B5     		push	{r7, lr}
 6276              		.cfi_def_cfa_offset 8
 6277              		.cfi_offset 7, -8
 6278              		.cfi_offset 14, -4
 6279 0002 84B0     		sub	sp, sp, #16
 6280              		.cfi_def_cfa_offset 24
 6281 0004 00AF     		add	r7, sp, #0
 6282              		.cfi_def_cfa_register 7
 6283 0006 7860     		str	r0, [r7, #4]
 6284 0008 0A1C     		mov	r2, r1
 6285 000a BB1C     		add	r3, r7, #2
 6286 000c 1A80     		strh	r2, [r3]
1601:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccmr2 = 0;
 6287              		.loc 1 1601 0
 6288 000e 3B1C     		mov	r3, r7
 6289 0010 0E33     		add	r3, r3, #14
 6290 0012 0022     		mov	r2, #0
 6291 0014 1A80     		strh	r2, [r3]
1602:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1603:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1604:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 6292              		.loc 1 1604 0
 6293 0016 7A68     		ldr	r2, [r7, #4]
 6294 0018 1F4B     		ldr	r3, .L265
 6295 001a 9A42     		cmp	r2, r3
 6296 001c 0ED0     		beq	.L263
 6297              		.loc 1 1604 0 is_stmt 0 discriminator 1
 6298 001e 7A68     		ldr	r2, [r7, #4]
 6299 0020 8023     		mov	r3, #128
 6300 0022 DB05     		lsl	r3, r3, #23
 6301 0024 9A42     		cmp	r2, r3
 6302 0026 09D0     		beq	.L263
 6303 0028 7A68     		ldr	r2, [r7, #4]
 6304 002a 1C4B     		ldr	r3, .L265+4
 6305 002c 9A42     		cmp	r2, r3
 6306 002e 05D0     		beq	.L263
 6307 0030 1B4A     		ldr	r2, .L265+8
 6308 0032 1C4B     		ldr	r3, .L265+12
 6309 0034 101C     		mov	r0, r2
 6310 0036 191C     		mov	r1, r3
 6311 0038 FFF7FEFF 		bl	assert_failed
 6312              	.L263:
1605:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
 6313              		.loc 1 1605 0 is_stmt 1
 6314 003c BB1C     		add	r3, r7, #2
 6315 003e 1B88     		ldrh	r3, [r3]
 6316 0040 802B     		cmp	r3, #128
 6317 0042 09D0     		beq	.L264
 6318              		.loc 1 1605 0 is_stmt 0 discriminator 1
 6319 0044 BB1C     		add	r3, r7, #2
 6320 0046 1B88     		ldrh	r3, [r3]
 6321 0048 002B     		cmp	r3, #0
 6322 004a 05D0     		beq	.L264
 6323 004c 144A     		ldr	r2, .L265+8
 6324 004e 164B     		ldr	r3, .L265+16
 6325 0050 101C     		mov	r0, r2
 6326 0052 191C     		mov	r1, r3
 6327 0054 FFF7FEFF 		bl	assert_failed
 6328              	.L264:
1606:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1607:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 6329              		.loc 1 1607 0 is_stmt 1
 6330 0058 3B1C     		mov	r3, r7
 6331 005a 0E33     		add	r3, r3, #14
 6332 005c 7A68     		ldr	r2, [r7, #4]
 6333 005e 928B     		ldrh	r2, [r2, #28]
 6334 0060 1A80     		strh	r2, [r3]
1608:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the OC4CE Bit */
1609:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4CE);
 6335              		.loc 1 1609 0
 6336 0062 3B1C     		mov	r3, r7
 6337 0064 0E33     		add	r3, r3, #14
 6338 0066 3A1C     		mov	r2, r7
 6339 0068 0E32     		add	r2, r2, #14
 6340 006a 1288     		ldrh	r2, [r2]
 6341 006c 5204     		lsl	r2, r2, #17
 6342 006e 520C     		lsr	r2, r2, #17
 6343 0070 1A80     		strh	r2, [r3]
1610:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1611:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCClear << 8);
 6344              		.loc 1 1611 0
 6345 0072 BB1C     		add	r3, r7, #2
 6346 0074 1B88     		ldrh	r3, [r3]
 6347 0076 1B02     		lsl	r3, r3, #8
 6348 0078 99B2     		uxth	r1, r3
 6349 007a 3B1C     		mov	r3, r7
 6350 007c 0E33     		add	r3, r3, #14
 6351 007e 3A1C     		mov	r2, r7
 6352 0080 0E32     		add	r2, r2, #14
 6353 0082 1288     		ldrh	r2, [r2]
 6354 0084 0A43     		orr	r2, r1
 6355 0086 1A80     		strh	r2, [r3]
1612:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCMR2 register */
1613:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 6356              		.loc 1 1613 0
 6357 0088 7B68     		ldr	r3, [r7, #4]
 6358 008a 3A1C     		mov	r2, r7
 6359 008c 0E32     		add	r2, r2, #14
 6360 008e 1288     		ldrh	r2, [r2]
 6361 0090 9A83     		strh	r2, [r3, #28]
1614:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 6362              		.loc 1 1614 0
 6363 0092 BD46     		mov	sp, r7
 6364 0094 04B0     		add	sp, sp, #16
 6365              		@ sp needed
 6366 0096 80BD     		pop	{r7, pc}
 6367              	.L266:
 6368              		.align	2
 6369              	.L265:
 6370 0098 002C0140 		.word	1073818624
 6371 009c 00040040 		.word	1073742848
 6372 00a0 00000000 		.word	.LC0
 6373 00a4 44060000 		.word	1604
 6374 00a8 45060000 		.word	1605
 6375              		.cfi_endproc
 6376              	.LFE76:
 6378              		.section	.text.TIM_OC1PolarityConfig,"ax",%progbits
 6379              		.align	2
 6380              		.global	TIM_OC1PolarityConfig
 6381              		.code	16
 6382              		.thumb_func
 6384              	TIM_OC1PolarityConfig:
 6385              	.LFB77:
1615:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1616:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1617:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Configures the TIMx channel 1 polarity.
1618:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 14, 15, 16 or 17 to select the TIM peripheral.
1619:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC1 Polarity
1620:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parmeter can be one of the following values:
1621:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCPolarity_High: Output Compare active high
1622:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCPolarity_Low: Output Compare active low
1623:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1624:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1625:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_OC1PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1626:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 6386              		.loc 1 1626 0
 6387              		.cfi_startproc
 6388 0000 80B5     		push	{r7, lr}
 6389              		.cfi_def_cfa_offset 8
 6390              		.cfi_offset 7, -8
 6391              		.cfi_offset 14, -4
 6392 0002 84B0     		sub	sp, sp, #16
 6393              		.cfi_def_cfa_offset 24
 6394 0004 00AF     		add	r7, sp, #0
 6395              		.cfi_def_cfa_register 7
 6396 0006 7860     		str	r0, [r7, #4]
 6397 0008 0A1C     		mov	r2, r1
 6398 000a BB1C     		add	r3, r7, #2
 6399 000c 1A80     		strh	r2, [r3]
1627:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccer = 0;
 6400              		.loc 1 1627 0
 6401 000e 3B1C     		mov	r3, r7
 6402 0010 0E33     		add	r3, r3, #14
 6403 0012 0022     		mov	r2, #0
 6404 0014 1A80     		strh	r2, [r3]
1628:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1629:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1630:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
 6405              		.loc 1 1630 0
 6406 0016 7A68     		ldr	r2, [r7, #4]
 6407 0018 264B     		ldr	r3, .L270
 6408 001a 9A42     		cmp	r2, r3
 6409 001c 1ED0     		beq	.L268
 6410              		.loc 1 1630 0 is_stmt 0 discriminator 1
 6411 001e 7A68     		ldr	r2, [r7, #4]
 6412 0020 8023     		mov	r3, #128
 6413 0022 DB05     		lsl	r3, r3, #23
 6414 0024 9A42     		cmp	r2, r3
 6415 0026 19D0     		beq	.L268
 6416 0028 7A68     		ldr	r2, [r7, #4]
 6417 002a 234B     		ldr	r3, .L270+4
 6418 002c 9A42     		cmp	r2, r3
 6419 002e 15D0     		beq	.L268
 6420 0030 7A68     		ldr	r2, [r7, #4]
 6421 0032 224B     		ldr	r3, .L270+8
 6422 0034 9A42     		cmp	r2, r3
 6423 0036 11D0     		beq	.L268
 6424 0038 7A68     		ldr	r2, [r7, #4]
 6425 003a 214B     		ldr	r3, .L270+12
 6426 003c 9A42     		cmp	r2, r3
 6427 003e 0DD0     		beq	.L268
 6428 0040 7A68     		ldr	r2, [r7, #4]
 6429 0042 204B     		ldr	r3, .L270+16
 6430 0044 9A42     		cmp	r2, r3
 6431 0046 09D0     		beq	.L268
 6432 0048 7A68     		ldr	r2, [r7, #4]
 6433 004a 1F4B     		ldr	r3, .L270+20
 6434 004c 9A42     		cmp	r2, r3
 6435 004e 05D0     		beq	.L268
 6436 0050 1E4A     		ldr	r2, .L270+24
 6437 0052 1F4B     		ldr	r3, .L270+28
 6438 0054 101C     		mov	r0, r2
 6439 0056 191C     		mov	r1, r3
 6440 0058 FFF7FEFF 		bl	assert_failed
 6441              	.L268:
1631:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
 6442              		.loc 1 1631 0 is_stmt 1
 6443 005c BB1C     		add	r3, r7, #2
 6444 005e 1B88     		ldrh	r3, [r3]
 6445 0060 002B     		cmp	r3, #0
 6446 0062 09D0     		beq	.L269
 6447              		.loc 1 1631 0 is_stmt 0 discriminator 1
 6448 0064 BB1C     		add	r3, r7, #2
 6449 0066 1B88     		ldrh	r3, [r3]
 6450 0068 022B     		cmp	r3, #2
 6451 006a 05D0     		beq	.L269
 6452 006c 174A     		ldr	r2, .L270+24
 6453 006e 194B     		ldr	r3, .L270+32
 6454 0070 101C     		mov	r0, r2
 6455 0072 191C     		mov	r1, r3
 6456 0074 FFF7FEFF 		bl	assert_failed
 6457              	.L269:
1632:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1633:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer = TIMx->CCER;
 6458              		.loc 1 1633 0 is_stmt 1
 6459 0078 3B1C     		mov	r3, r7
 6460 007a 0E33     		add	r3, r3, #14
 6461 007c 7A68     		ldr	r2, [r7, #4]
 6462 007e 128C     		ldrh	r2, [r2, #32]
 6463 0080 1A80     		strh	r2, [r3]
1634:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set or Reset the CC1P Bit */
1635:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC1P);
 6464              		.loc 1 1635 0
 6465 0082 3B1C     		mov	r3, r7
 6466 0084 0E33     		add	r3, r3, #14
 6467 0086 3A1C     		mov	r2, r7
 6468 0088 0E32     		add	r2, r2, #14
 6469 008a 1288     		ldrh	r2, [r2]
 6470 008c 0221     		mov	r1, #2
 6471 008e 8A43     		bic	r2, r1
 6472 0090 1A80     		strh	r2, [r3]
1636:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer |= TIM_OCPolarity;
 6473              		.loc 1 1636 0
 6474 0092 3B1C     		mov	r3, r7
 6475 0094 0E33     		add	r3, r3, #14
 6476 0096 391C     		mov	r1, r7
 6477 0098 0E31     		add	r1, r1, #14
 6478 009a BA1C     		add	r2, r7, #2
 6479 009c 0988     		ldrh	r1, [r1]
 6480 009e 1288     		ldrh	r2, [r2]
 6481 00a0 0A43     		orr	r2, r1
 6482 00a2 1A80     		strh	r2, [r3]
1637:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCER register */
1638:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCER = tmpccer;
 6483              		.loc 1 1638 0
 6484 00a4 7B68     		ldr	r3, [r7, #4]
 6485 00a6 3A1C     		mov	r2, r7
 6486 00a8 0E32     		add	r2, r2, #14
 6487 00aa 1288     		ldrh	r2, [r2]
 6488 00ac 1A84     		strh	r2, [r3, #32]
1639:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 6489              		.loc 1 1639 0
 6490 00ae BD46     		mov	sp, r7
 6491 00b0 04B0     		add	sp, sp, #16
 6492              		@ sp needed
 6493 00b2 80BD     		pop	{r7, pc}
 6494              	.L271:
 6495              		.align	2
 6496              	.L270:
 6497 00b4 002C0140 		.word	1073818624
 6498 00b8 00040040 		.word	1073742848
 6499 00bc 00200040 		.word	1073750016
 6500 00c0 00400140 		.word	1073823744
 6501 00c4 00440140 		.word	1073824768
 6502 00c8 00480140 		.word	1073825792
 6503 00cc 00000000 		.word	.LC0
 6504 00d0 5E060000 		.word	1630
 6505 00d4 5F060000 		.word	1631
 6506              		.cfi_endproc
 6507              	.LFE77:
 6509              		.section	.text.TIM_OC1NPolarityConfig,"ax",%progbits
 6510              		.align	2
 6511              		.global	TIM_OC1NPolarityConfig
 6512              		.code	16
 6513              		.thumb_func
 6515              	TIM_OC1NPolarityConfig:
 6516              	.LFB78:
1640:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1641:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1642:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Configures the TIMx Channel 1N polarity.
1643:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 15, 16 or 17 to select the TIM peripheral.
1644:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC1N Polarity
1645:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parmeter can be one of the following values:
1646:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCNPolarity_High: Output Compare active high
1647:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCNPolarity_Low: Output Compare active low
1648:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1649:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1650:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_OC1NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1651:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 6517              		.loc 1 1651 0
 6518              		.cfi_startproc
 6519 0000 80B5     		push	{r7, lr}
 6520              		.cfi_def_cfa_offset 8
 6521              		.cfi_offset 7, -8
 6522              		.cfi_offset 14, -4
 6523 0002 84B0     		sub	sp, sp, #16
 6524              		.cfi_def_cfa_offset 24
 6525 0004 00AF     		add	r7, sp, #0
 6526              		.cfi_def_cfa_register 7
 6527 0006 7860     		str	r0, [r7, #4]
 6528 0008 0A1C     		mov	r2, r1
 6529 000a BB1C     		add	r3, r7, #2
 6530 000c 1A80     		strh	r2, [r3]
1652:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccer = 0;
 6531              		.loc 1 1652 0
 6532 000e 3B1C     		mov	r3, r7
 6533 0010 0E33     		add	r3, r3, #14
 6534 0012 0022     		mov	r2, #0
 6535 0014 1A80     		strh	r2, [r3]
1653:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1654:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
 6536              		.loc 1 1654 0
 6537 0016 7A68     		ldr	r2, [r7, #4]
 6538 0018 204B     		ldr	r3, .L275
 6539 001a 9A42     		cmp	r2, r3
 6540 001c 11D0     		beq	.L273
 6541              		.loc 1 1654 0 is_stmt 0 discriminator 1
 6542 001e 7A68     		ldr	r2, [r7, #4]
 6543 0020 1F4B     		ldr	r3, .L275+4
 6544 0022 9A42     		cmp	r2, r3
 6545 0024 0DD0     		beq	.L273
 6546 0026 7A68     		ldr	r2, [r7, #4]
 6547 0028 1E4B     		ldr	r3, .L275+8
 6548 002a 9A42     		cmp	r2, r3
 6549 002c 09D0     		beq	.L273
 6550 002e 7A68     		ldr	r2, [r7, #4]
 6551 0030 1D4B     		ldr	r3, .L275+12
 6552 0032 9A42     		cmp	r2, r3
 6553 0034 05D0     		beq	.L273
 6554 0036 1D4A     		ldr	r2, .L275+16
 6555 0038 1D4B     		ldr	r3, .L275+20
 6556 003a 101C     		mov	r0, r2
 6557 003c 191C     		mov	r1, r3
 6558 003e FFF7FEFF 		bl	assert_failed
 6559              	.L273:
1655:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
 6560              		.loc 1 1655 0 is_stmt 1
 6561 0042 BB1C     		add	r3, r7, #2
 6562 0044 1B88     		ldrh	r3, [r3]
 6563 0046 002B     		cmp	r3, #0
 6564 0048 09D0     		beq	.L274
 6565              		.loc 1 1655 0 is_stmt 0 discriminator 1
 6566 004a BB1C     		add	r3, r7, #2
 6567 004c 1B88     		ldrh	r3, [r3]
 6568 004e 082B     		cmp	r3, #8
 6569 0050 05D0     		beq	.L274
 6570 0052 164A     		ldr	r2, .L275+16
 6571 0054 174B     		ldr	r3, .L275+24
 6572 0056 101C     		mov	r0, r2
 6573 0058 191C     		mov	r1, r3
 6574 005a FFF7FEFF 		bl	assert_failed
 6575              	.L274:
1656:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****    
1657:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer = TIMx->CCER;
 6576              		.loc 1 1657 0 is_stmt 1
 6577 005e 3B1C     		mov	r3, r7
 6578 0060 0E33     		add	r3, r3, #14
 6579 0062 7A68     		ldr	r2, [r7, #4]
 6580 0064 128C     		ldrh	r2, [r2, #32]
 6581 0066 1A80     		strh	r2, [r3]
1658:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set or Reset the CC1NP Bit */
1659:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC1NP);
 6582              		.loc 1 1659 0
 6583 0068 3B1C     		mov	r3, r7
 6584 006a 0E33     		add	r3, r3, #14
 6585 006c 3A1C     		mov	r2, r7
 6586 006e 0E32     		add	r2, r2, #14
 6587 0070 1288     		ldrh	r2, [r2]
 6588 0072 0821     		mov	r1, #8
 6589 0074 8A43     		bic	r2, r1
 6590 0076 1A80     		strh	r2, [r3]
1660:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer |= TIM_OCNPolarity;
 6591              		.loc 1 1660 0
 6592 0078 3B1C     		mov	r3, r7
 6593 007a 0E33     		add	r3, r3, #14
 6594 007c 391C     		mov	r1, r7
 6595 007e 0E31     		add	r1, r1, #14
 6596 0080 BA1C     		add	r2, r7, #2
 6597 0082 0988     		ldrh	r1, [r1]
 6598 0084 1288     		ldrh	r2, [r2]
 6599 0086 0A43     		orr	r2, r1
 6600 0088 1A80     		strh	r2, [r3]
1661:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCER register */
1662:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCER = tmpccer;
 6601              		.loc 1 1662 0
 6602 008a 7B68     		ldr	r3, [r7, #4]
 6603 008c 3A1C     		mov	r2, r7
 6604 008e 0E32     		add	r2, r2, #14
 6605 0090 1288     		ldrh	r2, [r2]
 6606 0092 1A84     		strh	r2, [r3, #32]
1663:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 6607              		.loc 1 1663 0
 6608 0094 BD46     		mov	sp, r7
 6609 0096 04B0     		add	sp, sp, #16
 6610              		@ sp needed
 6611 0098 80BD     		pop	{r7, pc}
 6612              	.L276:
 6613 009a C046     		.align	2
 6614              	.L275:
 6615 009c 002C0140 		.word	1073818624
 6616 00a0 00400140 		.word	1073823744
 6617 00a4 00440140 		.word	1073824768
 6618 00a8 00480140 		.word	1073825792
 6619 00ac 00000000 		.word	.LC0
 6620 00b0 76060000 		.word	1654
 6621 00b4 77060000 		.word	1655
 6622              		.cfi_endproc
 6623              	.LFE78:
 6625              		.section	.text.TIM_OC2PolarityConfig,"ax",%progbits
 6626              		.align	2
 6627              		.global	TIM_OC2PolarityConfig
 6628              		.code	16
 6629              		.thumb_func
 6631              	TIM_OC2PolarityConfig:
 6632              	.LFB79:
1664:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1665:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1666:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Configures the TIMx channel 2 polarity.
1667:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, or 15 to select the TIM peripheral.
1668:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC2 Polarity
1669:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parmeter can be one of the following values:
1670:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCPolarity_High: Output Compare active high
1671:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCPolarity_Low: Output Compare active low
1672:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1673:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1674:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_OC2PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1675:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 6633              		.loc 1 1675 0
 6634              		.cfi_startproc
 6635 0000 80B5     		push	{r7, lr}
 6636              		.cfi_def_cfa_offset 8
 6637              		.cfi_offset 7, -8
 6638              		.cfi_offset 14, -4
 6639 0002 84B0     		sub	sp, sp, #16
 6640              		.cfi_def_cfa_offset 24
 6641 0004 00AF     		add	r7, sp, #0
 6642              		.cfi_def_cfa_register 7
 6643 0006 7860     		str	r0, [r7, #4]
 6644 0008 0A1C     		mov	r2, r1
 6645 000a BB1C     		add	r3, r7, #2
 6646 000c 1A80     		strh	r2, [r3]
1676:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccer = 0;
 6647              		.loc 1 1676 0
 6648 000e 3B1C     		mov	r3, r7
 6649 0010 0E33     		add	r3, r3, #14
 6650 0012 0022     		mov	r2, #0
 6651 0014 1A80     		strh	r2, [r3]
1677:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1678:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1679:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 6652              		.loc 1 1679 0
 6653 0016 7A68     		ldr	r2, [r7, #4]
 6654 0018 224B     		ldr	r3, .L280
 6655 001a 9A42     		cmp	r2, r3
 6656 001c 12D0     		beq	.L278
 6657              		.loc 1 1679 0 is_stmt 0 discriminator 1
 6658 001e 7A68     		ldr	r2, [r7, #4]
 6659 0020 8023     		mov	r3, #128
 6660 0022 DB05     		lsl	r3, r3, #23
 6661 0024 9A42     		cmp	r2, r3
 6662 0026 0DD0     		beq	.L278
 6663 0028 7A68     		ldr	r2, [r7, #4]
 6664 002a 1F4B     		ldr	r3, .L280+4
 6665 002c 9A42     		cmp	r2, r3
 6666 002e 09D0     		beq	.L278
 6667 0030 7A68     		ldr	r2, [r7, #4]
 6668 0032 1E4B     		ldr	r3, .L280+8
 6669 0034 9A42     		cmp	r2, r3
 6670 0036 05D0     		beq	.L278
 6671 0038 1D4A     		ldr	r2, .L280+12
 6672 003a 1E4B     		ldr	r3, .L280+16
 6673 003c 101C     		mov	r0, r2
 6674 003e 191C     		mov	r1, r3
 6675 0040 FFF7FEFF 		bl	assert_failed
 6676              	.L278:
1680:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
 6677              		.loc 1 1680 0 is_stmt 1
 6678 0044 BB1C     		add	r3, r7, #2
 6679 0046 1B88     		ldrh	r3, [r3]
 6680 0048 002B     		cmp	r3, #0
 6681 004a 0AD0     		beq	.L279
 6682              		.loc 1 1680 0 is_stmt 0 discriminator 1
 6683 004c BB1C     		add	r3, r7, #2
 6684 004e 1B88     		ldrh	r3, [r3]
 6685 0050 022B     		cmp	r3, #2
 6686 0052 06D0     		beq	.L279
 6687 0054 164A     		ldr	r2, .L280+12
 6688 0056 D223     		mov	r3, #210
 6689 0058 DB00     		lsl	r3, r3, #3
 6690 005a 101C     		mov	r0, r2
 6691 005c 191C     		mov	r1, r3
 6692 005e FFF7FEFF 		bl	assert_failed
 6693              	.L279:
1681:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1682:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer = TIMx->CCER;
 6694              		.loc 1 1682 0 is_stmt 1
 6695 0062 3B1C     		mov	r3, r7
 6696 0064 0E33     		add	r3, r3, #14
 6697 0066 7A68     		ldr	r2, [r7, #4]
 6698 0068 128C     		ldrh	r2, [r2, #32]
 6699 006a 1A80     		strh	r2, [r3]
1683:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set or Reset the CC2P Bit */
1684:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC2P);
 6700              		.loc 1 1684 0
 6701 006c 3B1C     		mov	r3, r7
 6702 006e 0E33     		add	r3, r3, #14
 6703 0070 3A1C     		mov	r2, r7
 6704 0072 0E32     		add	r2, r2, #14
 6705 0074 1288     		ldrh	r2, [r2]
 6706 0076 2021     		mov	r1, #32
 6707 0078 8A43     		bic	r2, r1
 6708 007a 1A80     		strh	r2, [r3]
1685:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
 6709              		.loc 1 1685 0
 6710 007c BB1C     		add	r3, r7, #2
 6711 007e 1B88     		ldrh	r3, [r3]
 6712 0080 1B01     		lsl	r3, r3, #4
 6713 0082 99B2     		uxth	r1, r3
 6714 0084 3B1C     		mov	r3, r7
 6715 0086 0E33     		add	r3, r3, #14
 6716 0088 3A1C     		mov	r2, r7
 6717 008a 0E32     		add	r2, r2, #14
 6718 008c 1288     		ldrh	r2, [r2]
 6719 008e 0A43     		orr	r2, r1
 6720 0090 1A80     		strh	r2, [r3]
1686:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCER register */
1687:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCER = tmpccer;
 6721              		.loc 1 1687 0
 6722 0092 7B68     		ldr	r3, [r7, #4]
 6723 0094 3A1C     		mov	r2, r7
 6724 0096 0E32     		add	r2, r2, #14
 6725 0098 1288     		ldrh	r2, [r2]
 6726 009a 1A84     		strh	r2, [r3, #32]
1688:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 6727              		.loc 1 1688 0
 6728 009c BD46     		mov	sp, r7
 6729 009e 04B0     		add	sp, sp, #16
 6730              		@ sp needed
 6731 00a0 80BD     		pop	{r7, pc}
 6732              	.L281:
 6733 00a2 C046     		.align	2
 6734              	.L280:
 6735 00a4 002C0140 		.word	1073818624
 6736 00a8 00040040 		.word	1073742848
 6737 00ac 00400140 		.word	1073823744
 6738 00b0 00000000 		.word	.LC0
 6739 00b4 8F060000 		.word	1679
 6740              		.cfi_endproc
 6741              	.LFE79:
 6743              		.section	.text.TIM_OC2NPolarityConfig,"ax",%progbits
 6744              		.align	2
 6745              		.global	TIM_OC2NPolarityConfig
 6746              		.code	16
 6747              		.thumb_func
 6749              	TIM_OC2NPolarityConfig:
 6750              	.LFB80:
1689:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1690:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1691:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Configures the TIMx Channel 2N polarity.
1692:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1 to select the TIM peripheral.
1693:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC2N Polarity
1694:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parmeter can be one of the following values:
1695:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCNPolarity_High: Output Compare active high
1696:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCNPolarity_Low: Output Compare active low
1697:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1698:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1699:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_OC2NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1700:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 6751              		.loc 1 1700 0
 6752              		.cfi_startproc
 6753 0000 80B5     		push	{r7, lr}
 6754              		.cfi_def_cfa_offset 8
 6755              		.cfi_offset 7, -8
 6756              		.cfi_offset 14, -4
 6757 0002 84B0     		sub	sp, sp, #16
 6758              		.cfi_def_cfa_offset 24
 6759 0004 00AF     		add	r7, sp, #0
 6760              		.cfi_def_cfa_register 7
 6761 0006 7860     		str	r0, [r7, #4]
 6762 0008 0A1C     		mov	r2, r1
 6763 000a BB1C     		add	r3, r7, #2
 6764 000c 1A80     		strh	r2, [r3]
1701:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccer = 0;
 6765              		.loc 1 1701 0
 6766 000e 3B1C     		mov	r3, r7
 6767 0010 0E33     		add	r3, r3, #14
 6768 0012 0022     		mov	r2, #0
 6769 0014 1A80     		strh	r2, [r3]
1702:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1703:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
 6770              		.loc 1 1703 0
 6771 0016 7A68     		ldr	r2, [r7, #4]
 6772 0018 1B4B     		ldr	r3, .L285
 6773 001a 9A42     		cmp	r2, r3
 6774 001c 05D0     		beq	.L283
 6775              		.loc 1 1703 0 is_stmt 0 discriminator 1
 6776 001e 1B4A     		ldr	r2, .L285+4
 6777 0020 1B4B     		ldr	r3, .L285+8
 6778 0022 101C     		mov	r0, r2
 6779 0024 191C     		mov	r1, r3
 6780 0026 FFF7FEFF 		bl	assert_failed
 6781              	.L283:
1704:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
 6782              		.loc 1 1704 0 is_stmt 1
 6783 002a BB1C     		add	r3, r7, #2
 6784 002c 1B88     		ldrh	r3, [r3]
 6785 002e 002B     		cmp	r3, #0
 6786 0030 0AD0     		beq	.L284
 6787              		.loc 1 1704 0 is_stmt 0 discriminator 1
 6788 0032 BB1C     		add	r3, r7, #2
 6789 0034 1B88     		ldrh	r3, [r3]
 6790 0036 082B     		cmp	r3, #8
 6791 0038 06D0     		beq	.L284
 6792 003a 144A     		ldr	r2, .L285+4
 6793 003c D523     		mov	r3, #213
 6794 003e DB00     		lsl	r3, r3, #3
 6795 0040 101C     		mov	r0, r2
 6796 0042 191C     		mov	r1, r3
 6797 0044 FFF7FEFF 		bl	assert_failed
 6798              	.L284:
1705:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1706:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer = TIMx->CCER;
 6799              		.loc 1 1706 0 is_stmt 1
 6800 0048 3B1C     		mov	r3, r7
 6801 004a 0E33     		add	r3, r3, #14
 6802 004c 7A68     		ldr	r2, [r7, #4]
 6803 004e 128C     		ldrh	r2, [r2, #32]
 6804 0050 1A80     		strh	r2, [r3]
1707:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set or Reset the CC2NP Bit */
1708:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC2NP);
 6805              		.loc 1 1708 0
 6806 0052 3B1C     		mov	r3, r7
 6807 0054 0E33     		add	r3, r3, #14
 6808 0056 3A1C     		mov	r2, r7
 6809 0058 0E32     		add	r2, r2, #14
 6810 005a 1288     		ldrh	r2, [r2]
 6811 005c 8021     		mov	r1, #128
 6812 005e 8A43     		bic	r2, r1
 6813 0060 1A80     		strh	r2, [r3]
1709:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
 6814              		.loc 1 1709 0
 6815 0062 BB1C     		add	r3, r7, #2
 6816 0064 1B88     		ldrh	r3, [r3]
 6817 0066 1B01     		lsl	r3, r3, #4
 6818 0068 99B2     		uxth	r1, r3
 6819 006a 3B1C     		mov	r3, r7
 6820 006c 0E33     		add	r3, r3, #14
 6821 006e 3A1C     		mov	r2, r7
 6822 0070 0E32     		add	r2, r2, #14
 6823 0072 1288     		ldrh	r2, [r2]
 6824 0074 0A43     		orr	r2, r1
 6825 0076 1A80     		strh	r2, [r3]
1710:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCER register */
1711:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCER = tmpccer;
 6826              		.loc 1 1711 0
 6827 0078 7B68     		ldr	r3, [r7, #4]
 6828 007a 3A1C     		mov	r2, r7
 6829 007c 0E32     		add	r2, r2, #14
 6830 007e 1288     		ldrh	r2, [r2]
 6831 0080 1A84     		strh	r2, [r3, #32]
1712:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 6832              		.loc 1 1712 0
 6833 0082 BD46     		mov	sp, r7
 6834 0084 04B0     		add	sp, sp, #16
 6835              		@ sp needed
 6836 0086 80BD     		pop	{r7, pc}
 6837              	.L286:
 6838              		.align	2
 6839              	.L285:
 6840 0088 002C0140 		.word	1073818624
 6841 008c 00000000 		.word	.LC0
 6842 0090 A7060000 		.word	1703
 6843              		.cfi_endproc
 6844              	.LFE80:
 6846              		.section	.text.TIM_OC3PolarityConfig,"ax",%progbits
 6847              		.align	2
 6848              		.global	TIM_OC3PolarityConfig
 6849              		.code	16
 6850              		.thumb_func
 6852              	TIM_OC3PolarityConfig:
 6853              	.LFB81:
1713:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1714:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1715:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Configures the TIMx channel 3 polarity.
1716:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2 or 3 to select the TIM peripheral.
1717:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC3 Polarity
1718:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parmeter can be one of the following values:
1719:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCPolarity_High: Output Compare active high
1720:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCPolarity_Low: Output Compare active low
1721:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1722:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1723:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_OC3PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1724:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 6854              		.loc 1 1724 0
 6855              		.cfi_startproc
 6856 0000 80B5     		push	{r7, lr}
 6857              		.cfi_def_cfa_offset 8
 6858              		.cfi_offset 7, -8
 6859              		.cfi_offset 14, -4
 6860 0002 84B0     		sub	sp, sp, #16
 6861              		.cfi_def_cfa_offset 24
 6862 0004 00AF     		add	r7, sp, #0
 6863              		.cfi_def_cfa_register 7
 6864 0006 7860     		str	r0, [r7, #4]
 6865 0008 0A1C     		mov	r2, r1
 6866 000a BB1C     		add	r3, r7, #2
 6867 000c 1A80     		strh	r2, [r3]
1725:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccer = 0;
 6868              		.loc 1 1725 0
 6869 000e 3B1C     		mov	r3, r7
 6870 0010 0E33     		add	r3, r3, #14
 6871 0012 0022     		mov	r2, #0
 6872 0014 1A80     		strh	r2, [r3]
1726:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1727:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1728:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 6873              		.loc 1 1728 0
 6874 0016 7A68     		ldr	r2, [r7, #4]
 6875 0018 204B     		ldr	r3, .L290
 6876 001a 9A42     		cmp	r2, r3
 6877 001c 0FD0     		beq	.L288
 6878              		.loc 1 1728 0 is_stmt 0 discriminator 1
 6879 001e 7A68     		ldr	r2, [r7, #4]
 6880 0020 8023     		mov	r3, #128
 6881 0022 DB05     		lsl	r3, r3, #23
 6882 0024 9A42     		cmp	r2, r3
 6883 0026 0AD0     		beq	.L288
 6884 0028 7A68     		ldr	r2, [r7, #4]
 6885 002a 1D4B     		ldr	r3, .L290+4
 6886 002c 9A42     		cmp	r2, r3
 6887 002e 06D0     		beq	.L288
 6888 0030 1C4A     		ldr	r2, .L290+8
 6889 0032 D823     		mov	r3, #216
 6890 0034 DB00     		lsl	r3, r3, #3
 6891 0036 101C     		mov	r0, r2
 6892 0038 191C     		mov	r1, r3
 6893 003a FFF7FEFF 		bl	assert_failed
 6894              	.L288:
1729:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
 6895              		.loc 1 1729 0 is_stmt 1
 6896 003e BB1C     		add	r3, r7, #2
 6897 0040 1B88     		ldrh	r3, [r3]
 6898 0042 002B     		cmp	r3, #0
 6899 0044 09D0     		beq	.L289
 6900              		.loc 1 1729 0 is_stmt 0 discriminator 1
 6901 0046 BB1C     		add	r3, r7, #2
 6902 0048 1B88     		ldrh	r3, [r3]
 6903 004a 022B     		cmp	r3, #2
 6904 004c 05D0     		beq	.L289
 6905 004e 154A     		ldr	r2, .L290+8
 6906 0050 154B     		ldr	r3, .L290+12
 6907 0052 101C     		mov	r0, r2
 6908 0054 191C     		mov	r1, r3
 6909 0056 FFF7FEFF 		bl	assert_failed
 6910              	.L289:
1730:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1731:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer = TIMx->CCER;
 6911              		.loc 1 1731 0 is_stmt 1
 6912 005a 3B1C     		mov	r3, r7
 6913 005c 0E33     		add	r3, r3, #14
 6914 005e 7A68     		ldr	r2, [r7, #4]
 6915 0060 128C     		ldrh	r2, [r2, #32]
 6916 0062 1A80     		strh	r2, [r3]
1732:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set or Reset the CC3P Bit */
1733:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC3P);
 6917              		.loc 1 1733 0
 6918 0064 3B1C     		mov	r3, r7
 6919 0066 0E33     		add	r3, r3, #14
 6920 0068 3A1C     		mov	r2, r7
 6921 006a 0E32     		add	r2, r2, #14
 6922 006c 1188     		ldrh	r1, [r2]
 6923 006e 0F4A     		ldr	r2, .L290+16
 6924 0070 0A40     		and	r2, r1
 6925 0072 1A80     		strh	r2, [r3]
1734:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
 6926              		.loc 1 1734 0
 6927 0074 BB1C     		add	r3, r7, #2
 6928 0076 1B88     		ldrh	r3, [r3]
 6929 0078 1B02     		lsl	r3, r3, #8
 6930 007a 99B2     		uxth	r1, r3
 6931 007c 3B1C     		mov	r3, r7
 6932 007e 0E33     		add	r3, r3, #14
 6933 0080 3A1C     		mov	r2, r7
 6934 0082 0E32     		add	r2, r2, #14
 6935 0084 1288     		ldrh	r2, [r2]
 6936 0086 0A43     		orr	r2, r1
 6937 0088 1A80     		strh	r2, [r3]
1735:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCER register */
1736:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCER = tmpccer;
 6938              		.loc 1 1736 0
 6939 008a 7B68     		ldr	r3, [r7, #4]
 6940 008c 3A1C     		mov	r2, r7
 6941 008e 0E32     		add	r2, r2, #14
 6942 0090 1288     		ldrh	r2, [r2]
 6943 0092 1A84     		strh	r2, [r3, #32]
1737:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 6944              		.loc 1 1737 0
 6945 0094 BD46     		mov	sp, r7
 6946 0096 04B0     		add	sp, sp, #16
 6947              		@ sp needed
 6948 0098 80BD     		pop	{r7, pc}
 6949              	.L291:
 6950 009a C046     		.align	2
 6951              	.L290:
 6952 009c 002C0140 		.word	1073818624
 6953 00a0 00040040 		.word	1073742848
 6954 00a4 00000000 		.word	.LC0
 6955 00a8 C1060000 		.word	1729
 6956 00ac FFFDFFFF 		.word	-513
 6957              		.cfi_endproc
 6958              	.LFE81:
 6960              		.section	.text.TIM_OC3NPolarityConfig,"ax",%progbits
 6961              		.align	2
 6962              		.global	TIM_OC3NPolarityConfig
 6963              		.code	16
 6964              		.thumb_func
 6966              	TIM_OC3NPolarityConfig:
 6967              	.LFB82:
1738:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1739:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1740:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Configures the TIMx Channel 3N polarity.
1741:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1 to select the TIM peripheral.
1742:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC3N Polarity
1743:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parmeter can be one of the following values:
1744:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCNPolarity_High: Output Compare active high
1745:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCNPolarity_Low: Output Compare active low
1746:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1747:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1748:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_OC3NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1749:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 6968              		.loc 1 1749 0
 6969              		.cfi_startproc
 6970 0000 80B5     		push	{r7, lr}
 6971              		.cfi_def_cfa_offset 8
 6972              		.cfi_offset 7, -8
 6973              		.cfi_offset 14, -4
 6974 0002 84B0     		sub	sp, sp, #16
 6975              		.cfi_def_cfa_offset 24
 6976 0004 00AF     		add	r7, sp, #0
 6977              		.cfi_def_cfa_register 7
 6978 0006 7860     		str	r0, [r7, #4]
 6979 0008 0A1C     		mov	r2, r1
 6980 000a BB1C     		add	r3, r7, #2
 6981 000c 1A80     		strh	r2, [r3]
1750:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccer = 0;
 6982              		.loc 1 1750 0
 6983 000e 3B1C     		mov	r3, r7
 6984 0010 0E33     		add	r3, r3, #14
 6985 0012 0022     		mov	r2, #0
 6986 0014 1A80     		strh	r2, [r3]
1751:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  
1752:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1753:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
 6987              		.loc 1 1753 0
 6988 0016 7A68     		ldr	r2, [r7, #4]
 6989 0018 1B4B     		ldr	r3, .L295
 6990 001a 9A42     		cmp	r2, r3
 6991 001c 05D0     		beq	.L293
 6992              		.loc 1 1753 0 is_stmt 0 discriminator 1
 6993 001e 1B4A     		ldr	r2, .L295+4
 6994 0020 1B4B     		ldr	r3, .L295+8
 6995 0022 101C     		mov	r0, r2
 6996 0024 191C     		mov	r1, r3
 6997 0026 FFF7FEFF 		bl	assert_failed
 6998              	.L293:
1754:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
 6999              		.loc 1 1754 0 is_stmt 1
 7000 002a BB1C     		add	r3, r7, #2
 7001 002c 1B88     		ldrh	r3, [r3]
 7002 002e 002B     		cmp	r3, #0
 7003 0030 09D0     		beq	.L294
 7004              		.loc 1 1754 0 is_stmt 0 discriminator 1
 7005 0032 BB1C     		add	r3, r7, #2
 7006 0034 1B88     		ldrh	r3, [r3]
 7007 0036 082B     		cmp	r3, #8
 7008 0038 05D0     		beq	.L294
 7009 003a 144A     		ldr	r2, .L295+4
 7010 003c 154B     		ldr	r3, .L295+12
 7011 003e 101C     		mov	r0, r2
 7012 0040 191C     		mov	r1, r3
 7013 0042 FFF7FEFF 		bl	assert_failed
 7014              	.L294:
1755:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     
1756:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer = TIMx->CCER;
 7015              		.loc 1 1756 0 is_stmt 1
 7016 0046 3B1C     		mov	r3, r7
 7017 0048 0E33     		add	r3, r3, #14
 7018 004a 7A68     		ldr	r2, [r7, #4]
 7019 004c 128C     		ldrh	r2, [r2, #32]
 7020 004e 1A80     		strh	r2, [r3]
1757:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set or Reset the CC3NP Bit */
1758:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC3NP);
 7021              		.loc 1 1758 0
 7022 0050 3B1C     		mov	r3, r7
 7023 0052 0E33     		add	r3, r3, #14
 7024 0054 3A1C     		mov	r2, r7
 7025 0056 0E32     		add	r2, r2, #14
 7026 0058 1188     		ldrh	r1, [r2]
 7027 005a 0F4A     		ldr	r2, .L295+16
 7028 005c 0A40     		and	r2, r1
 7029 005e 1A80     		strh	r2, [r3]
1759:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
 7030              		.loc 1 1759 0
 7031 0060 BB1C     		add	r3, r7, #2
 7032 0062 1B88     		ldrh	r3, [r3]
 7033 0064 1B02     		lsl	r3, r3, #8
 7034 0066 99B2     		uxth	r1, r3
 7035 0068 3B1C     		mov	r3, r7
 7036 006a 0E33     		add	r3, r3, #14
 7037 006c 3A1C     		mov	r2, r7
 7038 006e 0E32     		add	r2, r2, #14
 7039 0070 1288     		ldrh	r2, [r2]
 7040 0072 0A43     		orr	r2, r1
 7041 0074 1A80     		strh	r2, [r3]
1760:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCER register */
1761:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCER = tmpccer;
 7042              		.loc 1 1761 0
 7043 0076 7B68     		ldr	r3, [r7, #4]
 7044 0078 3A1C     		mov	r2, r7
 7045 007a 0E32     		add	r2, r2, #14
 7046 007c 1288     		ldrh	r2, [r2]
 7047 007e 1A84     		strh	r2, [r3, #32]
1762:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 7048              		.loc 1 1762 0
 7049 0080 BD46     		mov	sp, r7
 7050 0082 04B0     		add	sp, sp, #16
 7051              		@ sp needed
 7052 0084 80BD     		pop	{r7, pc}
 7053              	.L296:
 7054 0086 C046     		.align	2
 7055              	.L295:
 7056 0088 002C0140 		.word	1073818624
 7057 008c 00000000 		.word	.LC0
 7058 0090 D9060000 		.word	1753
 7059 0094 DA060000 		.word	1754
 7060 0098 FFF7FFFF 		.word	-2049
 7061              		.cfi_endproc
 7062              	.LFE82:
 7064              		.section	.text.TIM_OC4PolarityConfig,"ax",%progbits
 7065              		.align	2
 7066              		.global	TIM_OC4PolarityConfig
 7067              		.code	16
 7068              		.thumb_func
 7070              	TIM_OC4PolarityConfig:
 7071              	.LFB83:
1763:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1764:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1765:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1766:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Configures the TIMx channel 4 polarity.
1767:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2 or 3 to select the TIM peripheral.
1768:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC4 Polarity
1769:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parmeter can be one of the following values:
1770:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCPolarity_High: Output Compare active high
1771:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCPolarity_Low: Output Compare active low
1772:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1773:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1774:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_OC4PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1775:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 7072              		.loc 1 1775 0
 7073              		.cfi_startproc
 7074 0000 80B5     		push	{r7, lr}
 7075              		.cfi_def_cfa_offset 8
 7076              		.cfi_offset 7, -8
 7077              		.cfi_offset 14, -4
 7078 0002 84B0     		sub	sp, sp, #16
 7079              		.cfi_def_cfa_offset 24
 7080 0004 00AF     		add	r7, sp, #0
 7081              		.cfi_def_cfa_register 7
 7082 0006 7860     		str	r0, [r7, #4]
 7083 0008 0A1C     		mov	r2, r1
 7084 000a BB1C     		add	r3, r7, #2
 7085 000c 1A80     		strh	r2, [r3]
1776:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccer = 0;
 7086              		.loc 1 1776 0
 7087 000e 3B1C     		mov	r3, r7
 7088 0010 0E33     		add	r3, r3, #14
 7089 0012 0022     		mov	r2, #0
 7090 0014 1A80     		strh	r2, [r3]
1777:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1778:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1779:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 7091              		.loc 1 1779 0
 7092 0016 7A68     		ldr	r2, [r7, #4]
 7093 0018 1F4B     		ldr	r3, .L300
 7094 001a 9A42     		cmp	r2, r3
 7095 001c 0ED0     		beq	.L298
 7096              		.loc 1 1779 0 is_stmt 0 discriminator 1
 7097 001e 7A68     		ldr	r2, [r7, #4]
 7098 0020 8023     		mov	r3, #128
 7099 0022 DB05     		lsl	r3, r3, #23
 7100 0024 9A42     		cmp	r2, r3
 7101 0026 09D0     		beq	.L298
 7102 0028 7A68     		ldr	r2, [r7, #4]
 7103 002a 1C4B     		ldr	r3, .L300+4
 7104 002c 9A42     		cmp	r2, r3
 7105 002e 05D0     		beq	.L298
 7106 0030 1B4A     		ldr	r2, .L300+8
 7107 0032 1C4B     		ldr	r3, .L300+12
 7108 0034 101C     		mov	r0, r2
 7109 0036 191C     		mov	r1, r3
 7110 0038 FFF7FEFF 		bl	assert_failed
 7111              	.L298:
1780:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
 7112              		.loc 1 1780 0 is_stmt 1
 7113 003c BB1C     		add	r3, r7, #2
 7114 003e 1B88     		ldrh	r3, [r3]
 7115 0040 002B     		cmp	r3, #0
 7116 0042 09D0     		beq	.L299
 7117              		.loc 1 1780 0 is_stmt 0 discriminator 1
 7118 0044 BB1C     		add	r3, r7, #2
 7119 0046 1B88     		ldrh	r3, [r3]
 7120 0048 022B     		cmp	r3, #2
 7121 004a 05D0     		beq	.L299
 7122 004c 144A     		ldr	r2, .L300+8
 7123 004e 164B     		ldr	r3, .L300+16
 7124 0050 101C     		mov	r0, r2
 7125 0052 191C     		mov	r1, r3
 7126 0054 FFF7FEFF 		bl	assert_failed
 7127              	.L299:
1781:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
1782:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer = TIMx->CCER;
 7128              		.loc 1 1782 0 is_stmt 1
 7129 0058 3B1C     		mov	r3, r7
 7130 005a 0E33     		add	r3, r3, #14
 7131 005c 7A68     		ldr	r2, [r7, #4]
 7132 005e 128C     		ldrh	r2, [r2, #32]
 7133 0060 1A80     		strh	r2, [r3]
1783:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set or Reset the CC4P Bit */
1784:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC4P);
 7134              		.loc 1 1784 0
 7135 0062 3B1C     		mov	r3, r7
 7136 0064 0E33     		add	r3, r3, #14
 7137 0066 3A1C     		mov	r2, r7
 7138 0068 0E32     		add	r2, r2, #14
 7139 006a 1188     		ldrh	r1, [r2]
 7140 006c 0F4A     		ldr	r2, .L300+20
 7141 006e 0A40     		and	r2, r1
 7142 0070 1A80     		strh	r2, [r3]
1785:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
 7143              		.loc 1 1785 0
 7144 0072 BB1C     		add	r3, r7, #2
 7145 0074 1B88     		ldrh	r3, [r3]
 7146 0076 1B03     		lsl	r3, r3, #12
 7147 0078 99B2     		uxth	r1, r3
 7148 007a 3B1C     		mov	r3, r7
 7149 007c 0E33     		add	r3, r3, #14
 7150 007e 3A1C     		mov	r2, r7
 7151 0080 0E32     		add	r2, r2, #14
 7152 0082 1288     		ldrh	r2, [r2]
 7153 0084 0A43     		orr	r2, r1
 7154 0086 1A80     		strh	r2, [r3]
1786:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCER register */
1787:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCER = tmpccer;
 7155              		.loc 1 1787 0
 7156 0088 7B68     		ldr	r3, [r7, #4]
 7157 008a 3A1C     		mov	r2, r7
 7158 008c 0E32     		add	r2, r2, #14
 7159 008e 1288     		ldrh	r2, [r2]
 7160 0090 1A84     		strh	r2, [r3, #32]
1788:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 7161              		.loc 1 1788 0
 7162 0092 BD46     		mov	sp, r7
 7163 0094 04B0     		add	sp, sp, #16
 7164              		@ sp needed
 7165 0096 80BD     		pop	{r7, pc}
 7166              	.L301:
 7167              		.align	2
 7168              	.L300:
 7169 0098 002C0140 		.word	1073818624
 7170 009c 00040040 		.word	1073742848
 7171 00a0 00000000 		.word	.LC0
 7172 00a4 F3060000 		.word	1779
 7173 00a8 F4060000 		.word	1780
 7174 00ac FFDFFFFF 		.word	-8193
 7175              		.cfi_endproc
 7176              	.LFE83:
 7178              		.section	.text.TIM_SelectOCREFClear,"ax",%progbits
 7179              		.align	2
 7180              		.global	TIM_SelectOCREFClear
 7181              		.code	16
 7182              		.thumb_func
 7184              	TIM_SelectOCREFClear:
 7185              	.LFB84:
1789:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1790:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1791:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Selects the OCReference Clear source.
1792:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2 or 3 to select the TIM peripheral.
1793:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_OCReferenceClear: specifies the OCReference Clear source.
1794:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
1795:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCReferenceClear_ETRF: The internal OCreference clear input is connected to ETRF.
1796:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_OCReferenceClear_OCREFCLR: The internal OCreference clear input is connected to OC
1797:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1798:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1799:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_SelectOCREFClear(TIM_TypeDef* TIMx, uint16_t TIM_OCReferenceClear)
1800:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 7186              		.loc 1 1800 0
 7187              		.cfi_startproc
 7188 0000 80B5     		push	{r7, lr}
 7189              		.cfi_def_cfa_offset 8
 7190              		.cfi_offset 7, -8
 7191              		.cfi_offset 14, -4
 7192 0002 82B0     		sub	sp, sp, #8
 7193              		.cfi_def_cfa_offset 16
 7194 0004 00AF     		add	r7, sp, #0
 7195              		.cfi_def_cfa_register 7
 7196 0006 7860     		str	r0, [r7, #4]
 7197 0008 0A1C     		mov	r2, r1
 7198 000a BB1C     		add	r3, r7, #2
 7199 000c 1A80     		strh	r2, [r3]
1801:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1802:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 7200              		.loc 1 1802 0
 7201 000e 7A68     		ldr	r2, [r7, #4]
 7202 0010 194B     		ldr	r3, .L305
 7203 0012 9A42     		cmp	r2, r3
 7204 0014 0ED0     		beq	.L303
 7205              		.loc 1 1802 0 is_stmt 0 discriminator 1
 7206 0016 7A68     		ldr	r2, [r7, #4]
 7207 0018 8023     		mov	r3, #128
 7208 001a DB05     		lsl	r3, r3, #23
 7209 001c 9A42     		cmp	r2, r3
 7210 001e 09D0     		beq	.L303
 7211 0020 7A68     		ldr	r2, [r7, #4]
 7212 0022 164B     		ldr	r3, .L305+4
 7213 0024 9A42     		cmp	r2, r3
 7214 0026 05D0     		beq	.L303
 7215 0028 154A     		ldr	r2, .L305+8
 7216 002a 164B     		ldr	r3, .L305+12
 7217 002c 101C     		mov	r0, r2
 7218 002e 191C     		mov	r1, r3
 7219 0030 FFF7FEFF 		bl	assert_failed
 7220              	.L303:
1803:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(TIM_OCREFERENCECECLEAR_SOURCE(TIM_OCReferenceClear));
 7221              		.loc 1 1803 0 is_stmt 1
 7222 0034 BB1C     		add	r3, r7, #2
 7223 0036 1B88     		ldrh	r3, [r3]
 7224 0038 082B     		cmp	r3, #8
 7225 003a 09D0     		beq	.L304
 7226              		.loc 1 1803 0 is_stmt 0 discriminator 1
 7227 003c BB1C     		add	r3, r7, #2
 7228 003e 1B88     		ldrh	r3, [r3]
 7229 0040 002B     		cmp	r3, #0
 7230 0042 05D0     		beq	.L304
 7231 0044 0E4A     		ldr	r2, .L305+8
 7232 0046 104B     		ldr	r3, .L305+16
 7233 0048 101C     		mov	r0, r2
 7234 004a 191C     		mov	r1, r3
 7235 004c FFF7FEFF 		bl	assert_failed
 7236              	.L304:
1804:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1805:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the TIM_OCReferenceClear source */
1806:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->SMCR &=  (uint16_t)~((uint16_t)TIM_SMCR_OCCS);
 7237              		.loc 1 1806 0 is_stmt 1
 7238 0050 7B68     		ldr	r3, [r7, #4]
 7239 0052 1B89     		ldrh	r3, [r3, #8]
 7240 0054 9BB2     		uxth	r3, r3
 7241 0056 0822     		mov	r2, #8
 7242 0058 9343     		bic	r3, r2
 7243 005a 9AB2     		uxth	r2, r3
 7244 005c 7B68     		ldr	r3, [r7, #4]
 7245 005e 1A81     		strh	r2, [r3, #8]
1807:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->SMCR |=  TIM_OCReferenceClear;
 7246              		.loc 1 1807 0
 7247 0060 7B68     		ldr	r3, [r7, #4]
 7248 0062 1B89     		ldrh	r3, [r3, #8]
 7249 0064 9AB2     		uxth	r2, r3
 7250 0066 BB1C     		add	r3, r7, #2
 7251 0068 1B88     		ldrh	r3, [r3]
 7252 006a 1343     		orr	r3, r2
 7253 006c 9AB2     		uxth	r2, r3
 7254 006e 7B68     		ldr	r3, [r7, #4]
 7255 0070 1A81     		strh	r2, [r3, #8]
1808:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 7256              		.loc 1 1808 0
 7257 0072 BD46     		mov	sp, r7
 7258 0074 02B0     		add	sp, sp, #8
 7259              		@ sp needed
 7260 0076 80BD     		pop	{r7, pc}
 7261              	.L306:
 7262              		.align	2
 7263              	.L305:
 7264 0078 002C0140 		.word	1073818624
 7265 007c 00040040 		.word	1073742848
 7266 0080 00000000 		.word	.LC0
 7267 0084 0A070000 		.word	1802
 7268 0088 0B070000 		.word	1803
 7269              		.cfi_endproc
 7270              	.LFE84:
 7272              		.section	.text.TIM_CCxCmd,"ax",%progbits
 7273              		.align	2
 7274              		.global	TIM_CCxCmd
 7275              		.code	16
 7276              		.thumb_func
 7278              	TIM_CCxCmd:
 7279              	.LFB85:
1809:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1810:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1811:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel x.
1812:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 14, 15, 16 or 17 to select the TIM peripheral.
1813:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1814:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
1815:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_Channel_1: TIM Channel 1
1816:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_Channel_2: TIM Channel 2
1817:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_Channel_3: TIM Channel 3
1818:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_Channel_4: TIM Channel 4
1819:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_CCx: specifies the TIM Channel CCxE bit new state.
1820:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be: TIM_CCx_Enable or TIM_CCx_Disable. 
1821:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1822:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1823:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx)
1824:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 7280              		.loc 1 1824 0
 7281              		.cfi_startproc
 7282 0000 80B5     		push	{r7, lr}
 7283              		.cfi_def_cfa_offset 8
 7284              		.cfi_offset 7, -8
 7285              		.cfi_offset 14, -4
 7286 0002 84B0     		sub	sp, sp, #16
 7287              		.cfi_def_cfa_offset 24
 7288 0004 00AF     		add	r7, sp, #0
 7289              		.cfi_def_cfa_register 7
 7290 0006 7860     		str	r0, [r7, #4]
 7291 0008 BB1C     		add	r3, r7, #2
 7292 000a 1980     		strh	r1, [r3]
 7293 000c 3B1C     		mov	r3, r7
 7294 000e 1A80     		strh	r2, [r3]
1825:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmp = 0;
 7295              		.loc 1 1825 0
 7296 0010 3B1C     		mov	r3, r7
 7297 0012 0E33     		add	r3, r3, #14
 7298 0014 0022     		mov	r2, #0
 7299 0016 1A80     		strh	r2, [r3]
1826:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1827:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1828:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx)); 
 7300              		.loc 1 1828 0
 7301 0018 7A68     		ldr	r2, [r7, #4]
 7302 001a 2A4B     		ldr	r3, .L310
 7303 001c 9A42     		cmp	r2, r3
 7304 001e 1ED0     		beq	.L308
 7305              		.loc 1 1828 0 is_stmt 0 discriminator 1
 7306 0020 7A68     		ldr	r2, [r7, #4]
 7307 0022 8023     		mov	r3, #128
 7308 0024 DB05     		lsl	r3, r3, #23
 7309 0026 9A42     		cmp	r2, r3
 7310 0028 19D0     		beq	.L308
 7311 002a 7A68     		ldr	r2, [r7, #4]
 7312 002c 264B     		ldr	r3, .L310+4
 7313 002e 9A42     		cmp	r2, r3
 7314 0030 15D0     		beq	.L308
 7315 0032 7A68     		ldr	r2, [r7, #4]
 7316 0034 254B     		ldr	r3, .L310+8
 7317 0036 9A42     		cmp	r2, r3
 7318 0038 11D0     		beq	.L308
 7319 003a 7A68     		ldr	r2, [r7, #4]
 7320 003c 244B     		ldr	r3, .L310+12
 7321 003e 9A42     		cmp	r2, r3
 7322 0040 0DD0     		beq	.L308
 7323 0042 7A68     		ldr	r2, [r7, #4]
 7324 0044 234B     		ldr	r3, .L310+16
 7325 0046 9A42     		cmp	r2, r3
 7326 0048 09D0     		beq	.L308
 7327 004a 7A68     		ldr	r2, [r7, #4]
 7328 004c 224B     		ldr	r3, .L310+20
 7329 004e 9A42     		cmp	r2, r3
 7330 0050 05D0     		beq	.L308
 7331 0052 224A     		ldr	r2, .L310+24
 7332 0054 224B     		ldr	r3, .L310+28
 7333 0056 101C     		mov	r0, r2
 7334 0058 191C     		mov	r1, r3
 7335 005a FFF7FEFF 		bl	assert_failed
 7336              	.L308:
1829:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_CCX(TIM_CCx));
 7337              		.loc 1 1829 0 is_stmt 1
 7338 005e 3B1C     		mov	r3, r7
 7339 0060 1B88     		ldrh	r3, [r3]
 7340 0062 012B     		cmp	r3, #1
 7341 0064 09D0     		beq	.L309
 7342              		.loc 1 1829 0 is_stmt 0 discriminator 1
 7343 0066 3B1C     		mov	r3, r7
 7344 0068 1B88     		ldrh	r3, [r3]
 7345 006a 002B     		cmp	r3, #0
 7346 006c 05D0     		beq	.L309
 7347 006e 1B4A     		ldr	r2, .L310+24
 7348 0070 1C4B     		ldr	r3, .L310+32
 7349 0072 101C     		mov	r0, r2
 7350 0074 191C     		mov	r1, r3
 7351 0076 FFF7FEFF 		bl	assert_failed
 7352              	.L309:
1830:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1831:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmp = CCER_CCE_SET << TIM_Channel;
 7353              		.loc 1 1831 0 is_stmt 1
 7354 007a BB1C     		add	r3, r7, #2
 7355 007c 1B88     		ldrh	r3, [r3]
 7356 007e 0122     		mov	r2, #1
 7357 0080 9A40     		lsl	r2, r2, r3
 7358 0082 3B1C     		mov	r3, r7
 7359 0084 0E33     		add	r3, r3, #14
 7360 0086 1A80     		strh	r2, [r3]
1832:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1833:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the CCxE Bit */
1834:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCER &= (uint16_t)~ tmp;
 7361              		.loc 1 1834 0
 7362 0088 7B68     		ldr	r3, [r7, #4]
 7363 008a 1B8C     		ldrh	r3, [r3, #32]
 7364 008c 9BB2     		uxth	r3, r3
 7365 008e 3A1C     		mov	r2, r7
 7366 0090 0E32     		add	r2, r2, #14
 7367 0092 1288     		ldrh	r2, [r2]
 7368 0094 D243     		mvn	r2, r2
 7369 0096 92B2     		uxth	r2, r2
 7370 0098 1340     		and	r3, r2
 7371 009a 9AB2     		uxth	r2, r3
 7372 009c 7B68     		ldr	r3, [r7, #4]
 7373 009e 1A84     		strh	r2, [r3, #32]
1835:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1836:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set or reset the CCxE Bit */ 
1837:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCx << TIM_Channel);
 7374              		.loc 1 1837 0
 7375 00a0 7B68     		ldr	r3, [r7, #4]
 7376 00a2 1B8C     		ldrh	r3, [r3, #32]
 7377 00a4 9AB2     		uxth	r2, r3
 7378 00a6 3B1C     		mov	r3, r7
 7379 00a8 1988     		ldrh	r1, [r3]
 7380 00aa BB1C     		add	r3, r7, #2
 7381 00ac 1B88     		ldrh	r3, [r3]
 7382 00ae 081C     		mov	r0, r1
 7383 00b0 9840     		lsl	r0, r0, r3
 7384 00b2 031C     		mov	r3, r0
 7385 00b4 9BB2     		uxth	r3, r3
 7386 00b6 1343     		orr	r3, r2
 7387 00b8 9AB2     		uxth	r2, r3
 7388 00ba 7B68     		ldr	r3, [r7, #4]
 7389 00bc 1A84     		strh	r2, [r3, #32]
1838:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 7390              		.loc 1 1838 0
 7391 00be BD46     		mov	sp, r7
 7392 00c0 04B0     		add	sp, sp, #16
 7393              		@ sp needed
 7394 00c2 80BD     		pop	{r7, pc}
 7395              	.L311:
 7396              		.align	2
 7397              	.L310:
 7398 00c4 002C0140 		.word	1073818624
 7399 00c8 00040040 		.word	1073742848
 7400 00cc 00200040 		.word	1073750016
 7401 00d0 00400140 		.word	1073823744
 7402 00d4 00440140 		.word	1073824768
 7403 00d8 00480140 		.word	1073825792
 7404 00dc 00000000 		.word	.LC0
 7405 00e0 24070000 		.word	1828
 7406 00e4 25070000 		.word	1829
 7407              		.cfi_endproc
 7408              	.LFE85:
 7410              		.section	.text.TIM_CCxNCmd,"ax",%progbits
 7411              		.align	2
 7412              		.global	TIM_CCxNCmd
 7413              		.code	16
 7414              		.thumb_func
 7416              	TIM_CCxNCmd:
 7417              	.LFB86:
1839:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1840:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1841:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel xN.
1842:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 15, 16 or 17 to select the TIM peripheral.
1843:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1844:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parmeter can be one of the following values:
1845:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_Channel_1: TIM Channel 1
1846:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_Channel_2: TIM Channel 2
1847:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_Channel_3: TIM Channel 3
1848:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_CCxN: specifies the TIM Channel CCxNE bit new state.
1849:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be: TIM_CCxN_Enable or TIM_CCxN_Disable. 
1850:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1851:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1852:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN)
1853:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 7418              		.loc 1 1853 0
 7419              		.cfi_startproc
 7420 0000 80B5     		push	{r7, lr}
 7421              		.cfi_def_cfa_offset 8
 7422              		.cfi_offset 7, -8
 7423              		.cfi_offset 14, -4
 7424 0002 84B0     		sub	sp, sp, #16
 7425              		.cfi_def_cfa_offset 24
 7426 0004 00AF     		add	r7, sp, #0
 7427              		.cfi_def_cfa_register 7
 7428 0006 7860     		str	r0, [r7, #4]
 7429 0008 BB1C     		add	r3, r7, #2
 7430 000a 1980     		strh	r1, [r3]
 7431 000c 3B1C     		mov	r3, r7
 7432 000e 1A80     		strh	r2, [r3]
1854:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmp = 0;
 7433              		.loc 1 1854 0
 7434 0010 3B1C     		mov	r3, r7
 7435 0012 0E33     		add	r3, r3, #14
 7436 0014 0022     		mov	r2, #0
 7437 0016 1A80     		strh	r2, [r3]
1855:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1856:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1857:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
 7438              		.loc 1 1857 0
 7439 0018 7A68     		ldr	r2, [r7, #4]
 7440 001a 2D4B     		ldr	r3, .L316
 7441 001c 9A42     		cmp	r2, r3
 7442 001e 11D0     		beq	.L313
 7443              		.loc 1 1857 0 is_stmt 0 discriminator 1
 7444 0020 7A68     		ldr	r2, [r7, #4]
 7445 0022 2C4B     		ldr	r3, .L316+4
 7446 0024 9A42     		cmp	r2, r3
 7447 0026 0DD0     		beq	.L313
 7448 0028 7A68     		ldr	r2, [r7, #4]
 7449 002a 2B4B     		ldr	r3, .L316+8
 7450 002c 9A42     		cmp	r2, r3
 7451 002e 09D0     		beq	.L313
 7452 0030 7A68     		ldr	r2, [r7, #4]
 7453 0032 2A4B     		ldr	r3, .L316+12
 7454 0034 9A42     		cmp	r2, r3
 7455 0036 05D0     		beq	.L313
 7456 0038 294A     		ldr	r2, .L316+16
 7457 003a 2A4B     		ldr	r3, .L316+20
 7458 003c 101C     		mov	r0, r2
 7459 003e 191C     		mov	r1, r3
 7460 0040 FFF7FEFF 		bl	assert_failed
 7461              	.L313:
1858:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_COMPLEMENTARY_CHANNEL(TIM_Channel));
 7462              		.loc 1 1858 0 is_stmt 1
 7463 0044 BB1C     		add	r3, r7, #2
 7464 0046 1B88     		ldrh	r3, [r3]
 7465 0048 002B     		cmp	r3, #0
 7466 004a 0DD0     		beq	.L314
 7467              		.loc 1 1858 0 is_stmt 0 discriminator 1
 7468 004c BB1C     		add	r3, r7, #2
 7469 004e 1B88     		ldrh	r3, [r3]
 7470 0050 042B     		cmp	r3, #4
 7471 0052 09D0     		beq	.L314
 7472 0054 BB1C     		add	r3, r7, #2
 7473 0056 1B88     		ldrh	r3, [r3]
 7474 0058 082B     		cmp	r3, #8
 7475 005a 05D0     		beq	.L314
 7476 005c 204A     		ldr	r2, .L316+16
 7477 005e 224B     		ldr	r3, .L316+24
 7478 0060 101C     		mov	r0, r2
 7479 0062 191C     		mov	r1, r3
 7480 0064 FFF7FEFF 		bl	assert_failed
 7481              	.L314:
1859:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_CCXN(TIM_CCxN));
 7482              		.loc 1 1859 0 is_stmt 1
 7483 0068 3B1C     		mov	r3, r7
 7484 006a 1B88     		ldrh	r3, [r3]
 7485 006c 042B     		cmp	r3, #4
 7486 006e 09D0     		beq	.L315
 7487              		.loc 1 1859 0 is_stmt 0 discriminator 1
 7488 0070 3B1C     		mov	r3, r7
 7489 0072 1B88     		ldrh	r3, [r3]
 7490 0074 002B     		cmp	r3, #0
 7491 0076 05D0     		beq	.L315
 7492 0078 194A     		ldr	r2, .L316+16
 7493 007a 1C4B     		ldr	r3, .L316+28
 7494 007c 101C     		mov	r0, r2
 7495 007e 191C     		mov	r1, r3
 7496 0080 FFF7FEFF 		bl	assert_failed
 7497              	.L315:
1860:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1861:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmp = CCER_CCNE_SET << TIM_Channel;
 7498              		.loc 1 1861 0 is_stmt 1
 7499 0084 BB1C     		add	r3, r7, #2
 7500 0086 1B88     		ldrh	r3, [r3]
 7501 0088 0422     		mov	r2, #4
 7502 008a 9A40     		lsl	r2, r2, r3
 7503 008c 3B1C     		mov	r3, r7
 7504 008e 0E33     		add	r3, r3, #14
 7505 0090 1A80     		strh	r2, [r3]
1862:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1863:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the CCxNE Bit */
1864:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp;
 7506              		.loc 1 1864 0
 7507 0092 7B68     		ldr	r3, [r7, #4]
 7508 0094 1B8C     		ldrh	r3, [r3, #32]
 7509 0096 9BB2     		uxth	r3, r3
 7510 0098 3A1C     		mov	r2, r7
 7511 009a 0E32     		add	r2, r2, #14
 7512 009c 1288     		ldrh	r2, [r2]
 7513 009e D243     		mvn	r2, r2
 7514 00a0 92B2     		uxth	r2, r2
 7515 00a2 1340     		and	r3, r2
 7516 00a4 9AB2     		uxth	r2, r3
 7517 00a6 7B68     		ldr	r3, [r7, #4]
 7518 00a8 1A84     		strh	r2, [r3, #32]
1865:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1866:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set or reset the CCxNE Bit */ 
1867:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCxN << TIM_Channel);
 7519              		.loc 1 1867 0
 7520 00aa 7B68     		ldr	r3, [r7, #4]
 7521 00ac 1B8C     		ldrh	r3, [r3, #32]
 7522 00ae 9AB2     		uxth	r2, r3
 7523 00b0 3B1C     		mov	r3, r7
 7524 00b2 1988     		ldrh	r1, [r3]
 7525 00b4 BB1C     		add	r3, r7, #2
 7526 00b6 1B88     		ldrh	r3, [r3]
 7527 00b8 081C     		mov	r0, r1
 7528 00ba 9840     		lsl	r0, r0, r3
 7529 00bc 031C     		mov	r3, r0
 7530 00be 9BB2     		uxth	r3, r3
 7531 00c0 1343     		orr	r3, r2
 7532 00c2 9AB2     		uxth	r2, r3
 7533 00c4 7B68     		ldr	r3, [r7, #4]
 7534 00c6 1A84     		strh	r2, [r3, #32]
1868:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 7535              		.loc 1 1868 0
 7536 00c8 BD46     		mov	sp, r7
 7537 00ca 04B0     		add	sp, sp, #16
 7538              		@ sp needed
 7539 00cc 80BD     		pop	{r7, pc}
 7540              	.L317:
 7541 00ce C046     		.align	2
 7542              	.L316:
 7543 00d0 002C0140 		.word	1073818624
 7544 00d4 00400140 		.word	1073823744
 7545 00d8 00440140 		.word	1073824768
 7546 00dc 00480140 		.word	1073825792
 7547 00e0 00000000 		.word	.LC0
 7548 00e4 41070000 		.word	1857
 7549 00e8 42070000 		.word	1858
 7550 00ec 43070000 		.word	1859
 7551              		.cfi_endproc
 7552              	.LFE86:
 7554              		.section	.text.TIM_SelectCOM,"ax",%progbits
 7555              		.align	2
 7556              		.global	TIM_SelectCOM
 7557              		.code	16
 7558              		.thumb_func
 7560              	TIM_SelectCOM:
 7561              	.LFB87:
1869:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1870:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1871:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Selects the TIM peripheral Commutation event.
1872:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be  1, 15, 16 or 17 to select the TIMx peripheral
1873:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  NewState: new state of the Commutation event.
1874:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
1875:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1876:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1877:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_SelectCOM(TIM_TypeDef* TIMx, FunctionalState NewState)
1878:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 7562              		.loc 1 1878 0
 7563              		.cfi_startproc
 7564 0000 80B5     		push	{r7, lr}
 7565              		.cfi_def_cfa_offset 8
 7566              		.cfi_offset 7, -8
 7567              		.cfi_offset 14, -4
 7568 0002 82B0     		sub	sp, sp, #8
 7569              		.cfi_def_cfa_offset 16
 7570 0004 00AF     		add	r7, sp, #0
 7571              		.cfi_def_cfa_register 7
 7572 0006 7860     		str	r0, [r7, #4]
 7573 0008 0A1C     		mov	r2, r1
 7574 000a FB1C     		add	r3, r7, #3
 7575 000c 1A70     		strb	r2, [r3]
1879:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1880:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
 7576              		.loc 1 1880 0
 7577 000e 7A68     		ldr	r2, [r7, #4]
 7578 0010 1D4B     		ldr	r3, .L323
 7579 0012 9A42     		cmp	r2, r3
 7580 0014 12D0     		beq	.L319
 7581              		.loc 1 1880 0 is_stmt 0 discriminator 1
 7582 0016 7A68     		ldr	r2, [r7, #4]
 7583 0018 1C4B     		ldr	r3, .L323+4
 7584 001a 9A42     		cmp	r2, r3
 7585 001c 0ED0     		beq	.L319
 7586 001e 7A68     		ldr	r2, [r7, #4]
 7587 0020 1B4B     		ldr	r3, .L323+8
 7588 0022 9A42     		cmp	r2, r3
 7589 0024 0AD0     		beq	.L319
 7590 0026 7A68     		ldr	r2, [r7, #4]
 7591 0028 1A4B     		ldr	r3, .L323+12
 7592 002a 9A42     		cmp	r2, r3
 7593 002c 06D0     		beq	.L319
 7594 002e 1A4A     		ldr	r2, .L323+16
 7595 0030 EB23     		mov	r3, #235
 7596 0032 DB00     		lsl	r3, r3, #3
 7597 0034 101C     		mov	r0, r2
 7598 0036 191C     		mov	r1, r3
 7599 0038 FFF7FEFF 		bl	assert_failed
 7600              	.L319:
1881:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 7601              		.loc 1 1881 0 is_stmt 1
 7602 003c FB1C     		add	r3, r7, #3
 7603 003e 1B78     		ldrb	r3, [r3]
 7604 0040 002B     		cmp	r3, #0
 7605 0042 09D0     		beq	.L320
 7606              		.loc 1 1881 0 is_stmt 0 discriminator 1
 7607 0044 FB1C     		add	r3, r7, #3
 7608 0046 1B78     		ldrb	r3, [r3]
 7609 0048 012B     		cmp	r3, #1
 7610 004a 05D0     		beq	.L320
 7611 004c 124A     		ldr	r2, .L323+16
 7612 004e 134B     		ldr	r3, .L323+20
 7613 0050 101C     		mov	r0, r2
 7614 0052 191C     		mov	r1, r3
 7615 0054 FFF7FEFF 		bl	assert_failed
 7616              	.L320:
1882:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   if (NewState != DISABLE)
 7617              		.loc 1 1882 0 is_stmt 1
 7618 0058 FB1C     		add	r3, r7, #3
 7619 005a 1B78     		ldrb	r3, [r3]
 7620 005c 002B     		cmp	r3, #0
 7621 005e 08D0     		beq	.L321
1883:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
1884:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the COM Bit */
1885:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCUS;
 7622              		.loc 1 1885 0
 7623 0060 7B68     		ldr	r3, [r7, #4]
 7624 0062 9B88     		ldrh	r3, [r3, #4]
 7625 0064 9BB2     		uxth	r3, r3
 7626 0066 0422     		mov	r2, #4
 7627 0068 1343     		orr	r3, r2
 7628 006a 9AB2     		uxth	r2, r3
 7629 006c 7B68     		ldr	r3, [r7, #4]
 7630 006e 9A80     		strh	r2, [r3, #4]
 7631 0070 07E0     		b	.L318
 7632              	.L321:
1886:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
1887:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   else
1888:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
1889:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Reset the COM Bit */
1890:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_CCUS);
 7633              		.loc 1 1890 0
 7634 0072 7B68     		ldr	r3, [r7, #4]
 7635 0074 9B88     		ldrh	r3, [r3, #4]
 7636 0076 9BB2     		uxth	r3, r3
 7637 0078 0422     		mov	r2, #4
 7638 007a 9343     		bic	r3, r2
 7639 007c 9AB2     		uxth	r2, r3
 7640 007e 7B68     		ldr	r3, [r7, #4]
 7641 0080 9A80     		strh	r2, [r3, #4]
 7642              	.L318:
1891:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
1892:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 7643              		.loc 1 1892 0
 7644 0082 BD46     		mov	sp, r7
 7645 0084 02B0     		add	sp, sp, #8
 7646              		@ sp needed
 7647 0086 80BD     		pop	{r7, pc}
 7648              	.L324:
 7649              		.align	2
 7650              	.L323:
 7651 0088 002C0140 		.word	1073818624
 7652 008c 00400140 		.word	1073823744
 7653 0090 00440140 		.word	1073824768
 7654 0094 00480140 		.word	1073825792
 7655 0098 00000000 		.word	.LC0
 7656 009c 59070000 		.word	1881
 7657              		.cfi_endproc
 7658              	.LFE87:
 7660              		.section	.text.TIM_ICInit,"ax",%progbits
 7661              		.align	2
 7662              		.global	TIM_ICInit
 7663              		.code	16
 7664              		.thumb_func
 7666              	TIM_ICInit:
 7667              	.LFB88:
1893:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1894:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1895:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @}
1896:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1897:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1898:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /** @defgroup TIM_Group4 Input Capture management functions
1899:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  *  @brief    Input Capture management functions 
1900:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  *
1901:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** @verbatim
1902:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  ===============================================================================
1903:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                ##### Input Capture management functions #####
1904:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  ===============================================================================
1905:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****    
1906:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****           *** TIM Driver: how to use it in Input Capture Mode ***
1907:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  ===============================================================================
1908:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     [..] To use the Timer in Input Capture mode, the following steps are mandatory:
1909:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) 
1910:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              function.
1911:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) Configure the TIM pins by configuring the corresponding GPIO pins.
1912:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) Configure the Time base unit as described in the first part of this 
1913:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              driver, if needed, else the Timer will run with the default configuration:
1914:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Autoreload value = 0xFFFF.
1915:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Prescaler value = 0x0000.
1916:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Counter mode = Up counting.
1917:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) Clock Division = TIM_CKD_DIV1.
1918:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) Fill the TIM_ICInitStruct with the desired parameters including:
1919:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) TIM Channel: TIM_Channel.
1920:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) TIM Input Capture polarity: TIM_ICPolarity.
1921:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) TIM Input Capture selection: TIM_ICSelection.
1922:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) TIM Input Capture Prescaler: TIM_ICPrescaler.
1923:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) TIM Input CApture filter value: TIM_ICFilter.
1924:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) Call TIM_ICInit(TIMx, &TIM_ICInitStruct) to configure the desired 
1925:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              channel with the corresponding configuration and to measure only 
1926:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              frequency or duty cycle of the input signal,or, Call 
1927:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              TIM_PWMIConfig(TIMx, &TIM_ICInitStruct) to configure the desired 
1928:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              channels with the corresponding configuration and to measure the 
1929:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              frequency and the duty cycle of the input signal.
1930:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) Enable the NVIC or the DMA to read the measured frequency.
1931:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) Enable the corresponding interrupt (or DMA request) to read 
1932:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              the Captured value, using the function TIM_ITConfig(TIMx, TIM_IT_CCx)
1933:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx)).
1934:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
1935:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) Use TIM_GetCapturex(TIMx); to read the captured value.
1936:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     [..]
1937:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****         (@) All other functions can be used separately to modify, if needed,
1938:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****             a specific feature of the Timer. 
1939:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1940:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** @endverbatim
1941:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @{
1942:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1943:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1944:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
1945:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Initializes the TIM peripheral according to the specified
1946:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         parameters in the TIM_ICInitStruct.
1947:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 14, 15, 16 or 17 to select the TIM peripheral.
1948:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure
1949:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         that contains the configuration information for the specified TIM 
1950:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         peripheral.
1951:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
1952:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
1953:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_ICInit(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
1954:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 7668              		.loc 1 1954 0
 7669              		.cfi_startproc
 7670 0000 80B5     		push	{r7, lr}
 7671              		.cfi_def_cfa_offset 8
 7672              		.cfi_offset 7, -8
 7673              		.cfi_offset 14, -4
 7674 0002 82B0     		sub	sp, sp, #8
 7675              		.cfi_def_cfa_offset 16
 7676 0004 00AF     		add	r7, sp, #0
 7677              		.cfi_def_cfa_register 7
 7678 0006 7860     		str	r0, [r7, #4]
 7679 0008 3960     		str	r1, [r7]
1955:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
1956:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
 7680              		.loc 1 1956 0
 7681 000a 7A68     		ldr	r2, [r7, #4]
 7682 000c 974B     		ldr	r3, .L340
 7683 000e 9A42     		cmp	r2, r3
 7684 0010 1ED0     		beq	.L326
 7685              		.loc 1 1956 0 is_stmt 0 discriminator 1
 7686 0012 7A68     		ldr	r2, [r7, #4]
 7687 0014 8023     		mov	r3, #128
 7688 0016 DB05     		lsl	r3, r3, #23
 7689 0018 9A42     		cmp	r2, r3
 7690 001a 19D0     		beq	.L326
 7691 001c 7A68     		ldr	r2, [r7, #4]
 7692 001e 944B     		ldr	r3, .L340+4
 7693 0020 9A42     		cmp	r2, r3
 7694 0022 15D0     		beq	.L326
 7695 0024 7A68     		ldr	r2, [r7, #4]
 7696 0026 934B     		ldr	r3, .L340+8
 7697 0028 9A42     		cmp	r2, r3
 7698 002a 11D0     		beq	.L326
 7699 002c 7A68     		ldr	r2, [r7, #4]
 7700 002e 924B     		ldr	r3, .L340+12
 7701 0030 9A42     		cmp	r2, r3
 7702 0032 0DD0     		beq	.L326
 7703 0034 7A68     		ldr	r2, [r7, #4]
 7704 0036 914B     		ldr	r3, .L340+16
 7705 0038 9A42     		cmp	r2, r3
 7706 003a 09D0     		beq	.L326
 7707 003c 7A68     		ldr	r2, [r7, #4]
 7708 003e 904B     		ldr	r3, .L340+20
 7709 0040 9A42     		cmp	r2, r3
 7710 0042 05D0     		beq	.L326
 7711 0044 8F4A     		ldr	r2, .L340+24
 7712 0046 904B     		ldr	r3, .L340+28
 7713 0048 101C     		mov	r0, r2
 7714 004a 191C     		mov	r1, r3
 7715 004c FFF7FEFF 		bl	assert_failed
 7716              	.L326:
1957:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_ICInitStruct->TIM_Channel));  
 7717              		.loc 1 1957 0 is_stmt 1
 7718 0050 3B68     		ldr	r3, [r7]
 7719 0052 1B88     		ldrh	r3, [r3]
 7720 0054 002B     		cmp	r3, #0
 7721 0056 11D0     		beq	.L327
 7722              		.loc 1 1957 0 is_stmt 0 discriminator 1
 7723 0058 3B68     		ldr	r3, [r7]
 7724 005a 1B88     		ldrh	r3, [r3]
 7725 005c 042B     		cmp	r3, #4
 7726 005e 0DD0     		beq	.L327
 7727 0060 3B68     		ldr	r3, [r7]
 7728 0062 1B88     		ldrh	r3, [r3]
 7729 0064 082B     		cmp	r3, #8
 7730 0066 09D0     		beq	.L327
 7731 0068 3B68     		ldr	r3, [r7]
 7732 006a 1B88     		ldrh	r3, [r3]
 7733 006c 0C2B     		cmp	r3, #12
 7734 006e 05D0     		beq	.L327
 7735 0070 844A     		ldr	r2, .L340+24
 7736 0072 864B     		ldr	r3, .L340+32
 7737 0074 101C     		mov	r0, r2
 7738 0076 191C     		mov	r1, r3
 7739 0078 FFF7FEFF 		bl	assert_failed
 7740              	.L327:
1958:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_IC_SELECTION(TIM_ICInitStruct->TIM_ICSelection));
 7741              		.loc 1 1958 0 is_stmt 1
 7742 007c 3B68     		ldr	r3, [r7]
 7743 007e 9B88     		ldrh	r3, [r3, #4]
 7744 0080 012B     		cmp	r3, #1
 7745 0082 0DD0     		beq	.L328
 7746              		.loc 1 1958 0 is_stmt 0 discriminator 1
 7747 0084 3B68     		ldr	r3, [r7]
 7748 0086 9B88     		ldrh	r3, [r3, #4]
 7749 0088 022B     		cmp	r3, #2
 7750 008a 09D0     		beq	.L328
 7751 008c 3B68     		ldr	r3, [r7]
 7752 008e 9B88     		ldrh	r3, [r3, #4]
 7753 0090 032B     		cmp	r3, #3
 7754 0092 05D0     		beq	.L328
 7755 0094 7B4A     		ldr	r2, .L340+24
 7756 0096 7E4B     		ldr	r3, .L340+36
 7757 0098 101C     		mov	r0, r2
 7758 009a 191C     		mov	r1, r3
 7759 009c FFF7FEFF 		bl	assert_failed
 7760              	.L328:
1959:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICInitStruct->TIM_ICPrescaler));
 7761              		.loc 1 1959 0 is_stmt 1
 7762 00a0 3B68     		ldr	r3, [r7]
 7763 00a2 DB88     		ldrh	r3, [r3, #6]
 7764 00a4 002B     		cmp	r3, #0
 7765 00a6 11D0     		beq	.L329
 7766              		.loc 1 1959 0 is_stmt 0 discriminator 1
 7767 00a8 3B68     		ldr	r3, [r7]
 7768 00aa DB88     		ldrh	r3, [r3, #6]
 7769 00ac 042B     		cmp	r3, #4
 7770 00ae 0DD0     		beq	.L329
 7771 00b0 3B68     		ldr	r3, [r7]
 7772 00b2 DB88     		ldrh	r3, [r3, #6]
 7773 00b4 082B     		cmp	r3, #8
 7774 00b6 09D0     		beq	.L329
 7775 00b8 3B68     		ldr	r3, [r7]
 7776 00ba DB88     		ldrh	r3, [r3, #6]
 7777 00bc 0C2B     		cmp	r3, #12
 7778 00be 05D0     		beq	.L329
 7779 00c0 704A     		ldr	r2, .L340+24
 7780 00c2 744B     		ldr	r3, .L340+40
 7781 00c4 101C     		mov	r0, r2
 7782 00c6 191C     		mov	r1, r3
 7783 00c8 FFF7FEFF 		bl	assert_failed
 7784              	.L329:
1960:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(TIM_ICInitStruct->TIM_ICFilter));
 7785              		.loc 1 1960 0 is_stmt 1
 7786 00cc 3B68     		ldr	r3, [r7]
 7787 00ce 1B89     		ldrh	r3, [r3, #8]
 7788 00d0 0F2B     		cmp	r3, #15
 7789 00d2 06D9     		bls	.L330
 7790              		.loc 1 1960 0 is_stmt 0 discriminator 1
 7791 00d4 6B4A     		ldr	r2, .L340+24
 7792 00d6 F523     		mov	r3, #245
 7793 00d8 DB00     		lsl	r3, r3, #3
 7794 00da 101C     		mov	r0, r2
 7795 00dc 191C     		mov	r1, r3
 7796 00de FFF7FEFF 		bl	assert_failed
 7797              	.L330:
1961:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICInitStruct->TIM_ICPolarity));
 7798              		.loc 1 1961 0 is_stmt 1
 7799 00e2 3B68     		ldr	r3, [r7]
 7800 00e4 5B88     		ldrh	r3, [r3, #2]
 7801 00e6 002B     		cmp	r3, #0
 7802 00e8 0DD0     		beq	.L331
 7803              		.loc 1 1961 0 is_stmt 0 discriminator 1
 7804 00ea 3B68     		ldr	r3, [r7]
 7805 00ec 5B88     		ldrh	r3, [r3, #2]
 7806 00ee 022B     		cmp	r3, #2
 7807 00f0 09D0     		beq	.L331
 7808 00f2 3B68     		ldr	r3, [r7]
 7809 00f4 5B88     		ldrh	r3, [r3, #2]
 7810 00f6 0A2B     		cmp	r3, #10
 7811 00f8 05D0     		beq	.L331
 7812 00fa 624A     		ldr	r2, .L340+24
 7813 00fc 664B     		ldr	r3, .L340+44
 7814 00fe 101C     		mov	r0, r2
 7815 0100 191C     		mov	r1, r3
 7816 0102 FFF7FEFF 		bl	assert_failed
 7817              	.L331:
1962:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
1963:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 7818              		.loc 1 1963 0 is_stmt 1
 7819 0106 3B68     		ldr	r3, [r7]
 7820 0108 1B88     		ldrh	r3, [r3]
 7821 010a 002B     		cmp	r3, #0
 7822 010c 33D1     		bne	.L332
1964:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
1965:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     assert_param(IS_TIM_LIST4_PERIPH(TIMx));
 7823              		.loc 1 1965 0
 7824 010e 7A68     		ldr	r2, [r7, #4]
 7825 0110 564B     		ldr	r3, .L340
 7826 0112 9A42     		cmp	r2, r3
 7827 0114 1ED0     		beq	.L333
 7828              		.loc 1 1965 0 is_stmt 0 discriminator 1
 7829 0116 7A68     		ldr	r2, [r7, #4]
 7830 0118 8023     		mov	r3, #128
 7831 011a DB05     		lsl	r3, r3, #23
 7832 011c 9A42     		cmp	r2, r3
 7833 011e 19D0     		beq	.L333
 7834 0120 7A68     		ldr	r2, [r7, #4]
 7835 0122 534B     		ldr	r3, .L340+4
 7836 0124 9A42     		cmp	r2, r3
 7837 0126 15D0     		beq	.L333
 7838 0128 7A68     		ldr	r2, [r7, #4]
 7839 012a 524B     		ldr	r3, .L340+8
 7840 012c 9A42     		cmp	r2, r3
 7841 012e 11D0     		beq	.L333
 7842 0130 7A68     		ldr	r2, [r7, #4]
 7843 0132 514B     		ldr	r3, .L340+12
 7844 0134 9A42     		cmp	r2, r3
 7845 0136 0DD0     		beq	.L333
 7846 0138 7A68     		ldr	r2, [r7, #4]
 7847 013a 504B     		ldr	r3, .L340+16
 7848 013c 9A42     		cmp	r2, r3
 7849 013e 09D0     		beq	.L333
 7850 0140 7A68     		ldr	r2, [r7, #4]
 7851 0142 4F4B     		ldr	r3, .L340+20
 7852 0144 9A42     		cmp	r2, r3
 7853 0146 05D0     		beq	.L333
 7854 0148 4E4A     		ldr	r2, .L340+24
 7855 014a 544B     		ldr	r3, .L340+48
 7856 014c 101C     		mov	r0, r2
 7857 014e 191C     		mov	r1, r3
 7858 0150 FFF7FEFF 		bl	assert_failed
 7859              	.L333:
1966:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* TI1 Configuration */
1967:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 7860              		.loc 1 1967 0 is_stmt 1 discriminator 1
 7861 0154 3B68     		ldr	r3, [r7]
 7862 0156 5988     		ldrh	r1, [r3, #2]
 7863 0158 3B68     		ldr	r3, [r7]
 7864 015a 9A88     		ldrh	r2, [r3, #4]
 7865 015c 3B68     		ldr	r3, [r7]
 7866 015e 1B89     		ldrh	r3, [r3, #8]
 7867 0160 7868     		ldr	r0, [r7, #4]
 7868 0162 FFF7FEFF 		bl	TI1_Config
1968:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
1969:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1970:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the Input Capture Prescaler value */
1971:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 7869              		.loc 1 1971 0 discriminator 1
 7870 0166 3B68     		ldr	r3, [r7]
 7871 0168 DB88     		ldrh	r3, [r3, #6]
 7872 016a 7A68     		ldr	r2, [r7, #4]
 7873 016c 101C     		mov	r0, r2
 7874 016e 191C     		mov	r1, r3
 7875 0170 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 7876 0174 76E0     		b	.L325
 7877              	.L332:
1972:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
1973:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_2)
 7878              		.loc 1 1973 0
 7879 0176 3B68     		ldr	r3, [r7]
 7880 0178 1B88     		ldrh	r3, [r3]
 7881 017a 042B     		cmp	r3, #4
 7882 017c 27D1     		bne	.L335
1974:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
1975:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 7883              		.loc 1 1975 0
 7884 017e 7A68     		ldr	r2, [r7, #4]
 7885 0180 3A4B     		ldr	r3, .L340
 7886 0182 9A42     		cmp	r2, r3
 7887 0184 12D0     		beq	.L336
 7888              		.loc 1 1975 0 is_stmt 0 discriminator 1
 7889 0186 7A68     		ldr	r2, [r7, #4]
 7890 0188 8023     		mov	r3, #128
 7891 018a DB05     		lsl	r3, r3, #23
 7892 018c 9A42     		cmp	r2, r3
 7893 018e 0DD0     		beq	.L336
 7894 0190 7A68     		ldr	r2, [r7, #4]
 7895 0192 374B     		ldr	r3, .L340+4
 7896 0194 9A42     		cmp	r2, r3
 7897 0196 09D0     		beq	.L336
 7898 0198 7A68     		ldr	r2, [r7, #4]
 7899 019a 374B     		ldr	r3, .L340+12
 7900 019c 9A42     		cmp	r2, r3
 7901 019e 05D0     		beq	.L336
 7902 01a0 384A     		ldr	r2, .L340+24
 7903 01a2 3F4B     		ldr	r3, .L340+52
 7904 01a4 101C     		mov	r0, r2
 7905 01a6 191C     		mov	r1, r3
 7906 01a8 FFF7FEFF 		bl	assert_failed
 7907              	.L336:
1976:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* TI2 Configuration */
1977:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 7908              		.loc 1 1977 0 is_stmt 1 discriminator 2
 7909 01ac 3B68     		ldr	r3, [r7]
 7910 01ae 5988     		ldrh	r1, [r3, #2]
 7911 01b0 3B68     		ldr	r3, [r7]
 7912 01b2 9A88     		ldrh	r2, [r3, #4]
 7913 01b4 3B68     		ldr	r3, [r7]
 7914 01b6 1B89     		ldrh	r3, [r3, #8]
 7915 01b8 7868     		ldr	r0, [r7, #4]
 7916 01ba FFF7FEFF 		bl	TI2_Config
1978:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
1979:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1980:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the Input Capture Prescaler value */
1981:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 7917              		.loc 1 1981 0 discriminator 2
 7918 01be 3B68     		ldr	r3, [r7]
 7919 01c0 DB88     		ldrh	r3, [r3, #6]
 7920 01c2 7A68     		ldr	r2, [r7, #4]
 7921 01c4 101C     		mov	r0, r2
 7922 01c6 191C     		mov	r1, r3
 7923 01c8 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 7924 01cc 4AE0     		b	.L325
 7925              	.L335:
1982:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
1983:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
 7926              		.loc 1 1983 0
 7927 01ce 3B68     		ldr	r3, [r7]
 7928 01d0 1B88     		ldrh	r3, [r3]
 7929 01d2 082B     		cmp	r3, #8
 7930 01d4 23D1     		bne	.L337
1984:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
1985:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 7931              		.loc 1 1985 0
 7932 01d6 7A68     		ldr	r2, [r7, #4]
 7933 01d8 244B     		ldr	r3, .L340
 7934 01da 9A42     		cmp	r2, r3
 7935 01dc 0ED0     		beq	.L338
 7936              		.loc 1 1985 0 is_stmt 0 discriminator 1
 7937 01de 7A68     		ldr	r2, [r7, #4]
 7938 01e0 8023     		mov	r3, #128
 7939 01e2 DB05     		lsl	r3, r3, #23
 7940 01e4 9A42     		cmp	r2, r3
 7941 01e6 09D0     		beq	.L338
 7942 01e8 7A68     		ldr	r2, [r7, #4]
 7943 01ea 214B     		ldr	r3, .L340+4
 7944 01ec 9A42     		cmp	r2, r3
 7945 01ee 05D0     		beq	.L338
 7946 01f0 244A     		ldr	r2, .L340+24
 7947 01f2 2C4B     		ldr	r3, .L340+56
 7948 01f4 101C     		mov	r0, r2
 7949 01f6 191C     		mov	r1, r3
 7950 01f8 FFF7FEFF 		bl	assert_failed
 7951              	.L338:
1986:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* TI3 Configuration */
1987:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 7952              		.loc 1 1987 0 is_stmt 1 discriminator 3
 7953 01fc 3B68     		ldr	r3, [r7]
 7954 01fe 5988     		ldrh	r1, [r3, #2]
 7955 0200 3B68     		ldr	r3, [r7]
 7956 0202 9A88     		ldrh	r2, [r3, #4]
 7957 0204 3B68     		ldr	r3, [r7]
 7958 0206 1B89     		ldrh	r3, [r3, #8]
 7959 0208 7868     		ldr	r0, [r7, #4]
 7960 020a FFF7FEFF 		bl	TI3_Config
1988:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
1989:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1990:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the Input Capture Prescaler value */
1991:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 7961              		.loc 1 1991 0 discriminator 3
 7962 020e 3B68     		ldr	r3, [r7]
 7963 0210 DB88     		ldrh	r3, [r3, #6]
 7964 0212 7A68     		ldr	r2, [r7, #4]
 7965 0214 101C     		mov	r0, r2
 7966 0216 191C     		mov	r1, r3
 7967 0218 FFF7FEFF 		bl	TIM_SetIC3Prescaler
 7968 021c 22E0     		b	.L325
 7969              	.L337:
1992:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
1993:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   else
1994:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
1995:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 7970              		.loc 1 1995 0
 7971 021e 7A68     		ldr	r2, [r7, #4]
 7972 0220 124B     		ldr	r3, .L340
 7973 0222 9A42     		cmp	r2, r3
 7974 0224 0ED0     		beq	.L339
 7975              		.loc 1 1995 0 is_stmt 0 discriminator 1
 7976 0226 7A68     		ldr	r2, [r7, #4]
 7977 0228 8023     		mov	r3, #128
 7978 022a DB05     		lsl	r3, r3, #23
 7979 022c 9A42     		cmp	r2, r3
 7980 022e 09D0     		beq	.L339
 7981 0230 7A68     		ldr	r2, [r7, #4]
 7982 0232 0F4B     		ldr	r3, .L340+4
 7983 0234 9A42     		cmp	r2, r3
 7984 0236 05D0     		beq	.L339
 7985 0238 124A     		ldr	r2, .L340+24
 7986 023a 1B4B     		ldr	r3, .L340+60
 7987 023c 101C     		mov	r0, r2
 7988 023e 191C     		mov	r1, r3
 7989 0240 FFF7FEFF 		bl	assert_failed
 7990              	.L339:
1996:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* TI4 Configuration */
1997:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 7991              		.loc 1 1997 0 is_stmt 1
 7992 0244 3B68     		ldr	r3, [r7]
 7993 0246 5988     		ldrh	r1, [r3, #2]
 7994 0248 3B68     		ldr	r3, [r7]
 7995 024a 9A88     		ldrh	r2, [r3, #4]
 7996 024c 3B68     		ldr	r3, [r7]
 7997 024e 1B89     		ldrh	r3, [r3, #8]
 7998 0250 7868     		ldr	r0, [r7, #4]
 7999 0252 FFF7FEFF 		bl	TI4_Config
1998:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
1999:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
2000:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the Input Capture Prescaler value */
2001:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 8000              		.loc 1 2001 0
 8001 0256 3B68     		ldr	r3, [r7]
 8002 0258 DB88     		ldrh	r3, [r3, #6]
 8003 025a 7A68     		ldr	r2, [r7, #4]
 8004 025c 101C     		mov	r0, r2
 8005 025e 191C     		mov	r1, r3
 8006 0260 FFF7FEFF 		bl	TIM_SetIC4Prescaler
 8007              	.L325:
2002:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
2003:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 8008              		.loc 1 2003 0
 8009 0264 BD46     		mov	sp, r7
 8010 0266 02B0     		add	sp, sp, #8
 8011              		@ sp needed
 8012 0268 80BD     		pop	{r7, pc}
 8013              	.L341:
 8014 026a C046     		.align	2
 8015              	.L340:
 8016 026c 002C0140 		.word	1073818624
 8017 0270 00040040 		.word	1073742848
 8018 0274 00200040 		.word	1073750016
 8019 0278 00400140 		.word	1073823744
 8020 027c 00440140 		.word	1073824768
 8021 0280 00480140 		.word	1073825792
 8022 0284 00000000 		.word	.LC0
 8023 0288 A4070000 		.word	1956
 8024 028c A5070000 		.word	1957
 8025 0290 A6070000 		.word	1958
 8026 0294 A7070000 		.word	1959
 8027 0298 A9070000 		.word	1961
 8028 029c AD070000 		.word	1965
 8029 02a0 B7070000 		.word	1975
 8030 02a4 C1070000 		.word	1985
 8031 02a8 CB070000 		.word	1995
 8032              		.cfi_endproc
 8033              	.LFE88:
 8035              		.section	.text.TIM_ICStructInit,"ax",%progbits
 8036              		.align	2
 8037              		.global	TIM_ICStructInit
 8038              		.code	16
 8039              		.thumb_func
 8041              	TIM_ICStructInit:
 8042              	.LFB89:
2004:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2005:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2006:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Fills each TIM_ICInitStruct member with its default value.
2007:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ICInitStruct : pointer to a TIM_ICInitTypeDef structure which will
2008:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         be initialized.
2009:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
2010:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2011:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct)
2012:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 8043              		.loc 1 2012 0
 8044              		.cfi_startproc
 8045 0000 80B5     		push	{r7, lr}
 8046              		.cfi_def_cfa_offset 8
 8047              		.cfi_offset 7, -8
 8048              		.cfi_offset 14, -4
 8049 0002 82B0     		sub	sp, sp, #8
 8050              		.cfi_def_cfa_offset 16
 8051 0004 00AF     		add	r7, sp, #0
 8052              		.cfi_def_cfa_register 7
 8053 0006 7860     		str	r0, [r7, #4]
2013:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the default configuration */
2014:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
 8054              		.loc 1 2014 0
 8055 0008 7B68     		ldr	r3, [r7, #4]
 8056 000a 0022     		mov	r2, #0
 8057 000c 1A80     		strh	r2, [r3]
2015:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
 8058              		.loc 1 2015 0
 8059 000e 7B68     		ldr	r3, [r7, #4]
 8060 0010 0022     		mov	r2, #0
 8061 0012 5A80     		strh	r2, [r3, #2]
2016:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
 8062              		.loc 1 2016 0
 8063 0014 7B68     		ldr	r3, [r7, #4]
 8064 0016 0122     		mov	r2, #1
 8065 0018 9A80     		strh	r2, [r3, #4]
2017:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
 8066              		.loc 1 2017 0
 8067 001a 7B68     		ldr	r3, [r7, #4]
 8068 001c 0022     		mov	r2, #0
 8069 001e DA80     		strh	r2, [r3, #6]
2018:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
 8070              		.loc 1 2018 0
 8071 0020 7B68     		ldr	r3, [r7, #4]
 8072 0022 0022     		mov	r2, #0
 8073 0024 1A81     		strh	r2, [r3, #8]
2019:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 8074              		.loc 1 2019 0
 8075 0026 BD46     		mov	sp, r7
 8076 0028 02B0     		add	sp, sp, #8
 8077              		@ sp needed
 8078 002a 80BD     		pop	{r7, pc}
 8079              		.cfi_endproc
 8080              	.LFE89:
 8082              		.section	.text.TIM_PWMIConfig,"ax",%progbits
 8083              		.align	2
 8084              		.global	TIM_PWMIConfig
 8085              		.code	16
 8086              		.thumb_func
 8088              	TIM_PWMIConfig:
 8089              	.LFB90:
2020:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2021:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2022:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Configures the TIM peripheral according to the specified
2023:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         parameters in the TIM_ICInitStruct to measure an external PWM signal.
2024:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3 or 15 to select the TIM peripheral.
2025:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure
2026:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         that contains the configuration information for the specified TIM 
2027:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         peripheral.
2028:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
2029:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2030:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
2031:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 8090              		.loc 1 2031 0
 8091              		.cfi_startproc
 8092 0000 80B5     		push	{r7, lr}
 8093              		.cfi_def_cfa_offset 8
 8094              		.cfi_offset 7, -8
 8095              		.cfi_offset 14, -4
 8096 0002 84B0     		sub	sp, sp, #16
 8097              		.cfi_def_cfa_offset 24
 8098 0004 00AF     		add	r7, sp, #0
 8099              		.cfi_def_cfa_register 7
 8100 0006 7860     		str	r0, [r7, #4]
 8101 0008 3960     		str	r1, [r7]
2032:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t icoppositepolarity = TIM_ICPolarity_Rising;
 8102              		.loc 1 2032 0
 8103 000a 3B1C     		mov	r3, r7
 8104 000c 0E33     		add	r3, r3, #14
 8105 000e 0022     		mov	r2, #0
 8106 0010 1A80     		strh	r2, [r3]
2033:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t icoppositeselection = TIM_ICSelection_DirectTI;
 8107              		.loc 1 2033 0
 8108 0012 3B1C     		mov	r3, r7
 8109 0014 0C33     		add	r3, r3, #12
 8110 0016 0122     		mov	r2, #1
 8111 0018 1A80     		strh	r2, [r3]
2034:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2035:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 8112              		.loc 1 2035 0
 8113 001a 7A68     		ldr	r2, [r7, #4]
 8114 001c 3D4B     		ldr	r3, .L351
 8115 001e 9A42     		cmp	r2, r3
 8116 0020 12D0     		beq	.L344
 8117              		.loc 1 2035 0 is_stmt 0 discriminator 1
 8118 0022 7A68     		ldr	r2, [r7, #4]
 8119 0024 8023     		mov	r3, #128
 8120 0026 DB05     		lsl	r3, r3, #23
 8121 0028 9A42     		cmp	r2, r3
 8122 002a 0DD0     		beq	.L344
 8123 002c 7A68     		ldr	r2, [r7, #4]
 8124 002e 3A4B     		ldr	r3, .L351+4
 8125 0030 9A42     		cmp	r2, r3
 8126 0032 09D0     		beq	.L344
 8127 0034 7A68     		ldr	r2, [r7, #4]
 8128 0036 394B     		ldr	r3, .L351+8
 8129 0038 9A42     		cmp	r2, r3
 8130 003a 05D0     		beq	.L344
 8131 003c 384A     		ldr	r2, .L351+12
 8132 003e 394B     		ldr	r3, .L351+16
 8133 0040 101C     		mov	r0, r2
 8134 0042 191C     		mov	r1, r3
 8135 0044 FFF7FEFF 		bl	assert_failed
 8136              	.L344:
2036:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Select the Opposite Input Polarity */
2037:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICPolarity == TIM_ICPolarity_Rising)
 8137              		.loc 1 2037 0 is_stmt 1
 8138 0048 3B68     		ldr	r3, [r7]
 8139 004a 5B88     		ldrh	r3, [r3, #2]
 8140 004c 002B     		cmp	r3, #0
 8141 004e 04D1     		bne	.L345
2038:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
2039:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Falling;
 8142              		.loc 1 2039 0
 8143 0050 3B1C     		mov	r3, r7
 8144 0052 0E33     		add	r3, r3, #14
 8145 0054 0222     		mov	r2, #2
 8146 0056 1A80     		strh	r2, [r3]
 8147 0058 03E0     		b	.L346
 8148              	.L345:
2040:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
2041:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   else
2042:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
2043:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Rising;
 8149              		.loc 1 2043 0
 8150 005a 3B1C     		mov	r3, r7
 8151 005c 0E33     		add	r3, r3, #14
 8152 005e 0022     		mov	r2, #0
 8153 0060 1A80     		strh	r2, [r3]
 8154              	.L346:
2044:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
2045:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Select the Opposite Input */
2046:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICSelection == TIM_ICSelection_DirectTI)
 8155              		.loc 1 2046 0
 8156 0062 3B68     		ldr	r3, [r7]
 8157 0064 9B88     		ldrh	r3, [r3, #4]
 8158 0066 012B     		cmp	r3, #1
 8159 0068 04D1     		bne	.L347
2047:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
2048:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     icoppositeselection = TIM_ICSelection_IndirectTI;
 8160              		.loc 1 2048 0
 8161 006a 3B1C     		mov	r3, r7
 8162 006c 0C33     		add	r3, r3, #12
 8163 006e 0222     		mov	r2, #2
 8164 0070 1A80     		strh	r2, [r3]
 8165 0072 03E0     		b	.L348
 8166              	.L347:
2049:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
2050:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   else
2051:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
2052:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     icoppositeselection = TIM_ICSelection_DirectTI;
 8167              		.loc 1 2052 0
 8168 0074 3B1C     		mov	r3, r7
 8169 0076 0C33     		add	r3, r3, #12
 8170 0078 0122     		mov	r2, #1
 8171 007a 1A80     		strh	r2, [r3]
 8172              	.L348:
2053:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
2054:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 8173              		.loc 1 2054 0
 8174 007c 3B68     		ldr	r3, [r7]
 8175 007e 1B88     		ldrh	r3, [r3]
 8176 0080 002B     		cmp	r3, #0
 8177 0082 22D1     		bne	.L349
2055:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
2056:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* TI1 Configuration */
2057:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 8178              		.loc 1 2057 0
 8179 0084 3B68     		ldr	r3, [r7]
 8180 0086 5988     		ldrh	r1, [r3, #2]
 8181 0088 3B68     		ldr	r3, [r7]
 8182 008a 9A88     		ldrh	r2, [r3, #4]
 8183 008c 3B68     		ldr	r3, [r7]
 8184 008e 1B89     		ldrh	r3, [r3, #8]
 8185 0090 7868     		ldr	r0, [r7, #4]
 8186 0092 FFF7FEFF 		bl	TI1_Config
2058:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
2059:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the Input Capture Prescaler value */
2060:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 8187              		.loc 1 2060 0
 8188 0096 3B68     		ldr	r3, [r7]
 8189 0098 DB88     		ldrh	r3, [r3, #6]
 8190 009a 7A68     		ldr	r2, [r7, #4]
 8191 009c 101C     		mov	r0, r2
 8192 009e 191C     		mov	r1, r3
 8193 00a0 FFF7FEFF 		bl	TIM_SetIC1Prescaler
2061:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* TI2 Configuration */
2062:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TI2_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 8194              		.loc 1 2062 0
 8195 00a4 3B68     		ldr	r3, [r7]
 8196 00a6 1B89     		ldrh	r3, [r3, #8]
 8197 00a8 7868     		ldr	r0, [r7, #4]
 8198 00aa 3A1C     		mov	r2, r7
 8199 00ac 0E32     		add	r2, r2, #14
 8200 00ae 1188     		ldrh	r1, [r2]
 8201 00b0 3A1C     		mov	r2, r7
 8202 00b2 0C32     		add	r2, r2, #12
 8203 00b4 1288     		ldrh	r2, [r2]
 8204 00b6 FFF7FEFF 		bl	TI2_Config
2063:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the Input Capture Prescaler value */
2064:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 8205              		.loc 1 2064 0
 8206 00ba 3B68     		ldr	r3, [r7]
 8207 00bc DB88     		ldrh	r3, [r3, #6]
 8208 00be 7A68     		ldr	r2, [r7, #4]
 8209 00c0 101C     		mov	r0, r2
 8210 00c2 191C     		mov	r1, r3
 8211 00c4 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 8212 00c8 21E0     		b	.L343
 8213              	.L349:
2065:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
2066:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   else
2067:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   { 
2068:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* TI2 Configuration */
2069:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 8214              		.loc 1 2069 0
 8215 00ca 3B68     		ldr	r3, [r7]
 8216 00cc 5988     		ldrh	r1, [r3, #2]
 8217 00ce 3B68     		ldr	r3, [r7]
 8218 00d0 9A88     		ldrh	r2, [r3, #4]
 8219 00d2 3B68     		ldr	r3, [r7]
 8220 00d4 1B89     		ldrh	r3, [r3, #8]
 8221 00d6 7868     		ldr	r0, [r7, #4]
 8222 00d8 FFF7FEFF 		bl	TI2_Config
2070:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
2071:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the Input Capture Prescaler value */
2072:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 8223              		.loc 1 2072 0
 8224 00dc 3B68     		ldr	r3, [r7]
 8225 00de DB88     		ldrh	r3, [r3, #6]
 8226 00e0 7A68     		ldr	r2, [r7, #4]
 8227 00e2 101C     		mov	r0, r2
 8228 00e4 191C     		mov	r1, r3
 8229 00e6 FFF7FEFF 		bl	TIM_SetIC2Prescaler
2073:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* TI1 Configuration */
2074:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 8230              		.loc 1 2074 0
 8231 00ea 3B68     		ldr	r3, [r7]
 8232 00ec 1B89     		ldrh	r3, [r3, #8]
 8233 00ee 7868     		ldr	r0, [r7, #4]
 8234 00f0 3A1C     		mov	r2, r7
 8235 00f2 0E32     		add	r2, r2, #14
 8236 00f4 1188     		ldrh	r1, [r2]
 8237 00f6 3A1C     		mov	r2, r7
 8238 00f8 0C32     		add	r2, r2, #12
 8239 00fa 1288     		ldrh	r2, [r2]
 8240 00fc FFF7FEFF 		bl	TI1_Config
2075:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the Input Capture Prescaler value */
2076:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 8241              		.loc 1 2076 0
 8242 0100 3B68     		ldr	r3, [r7]
 8243 0102 DB88     		ldrh	r3, [r3, #6]
 8244 0104 7A68     		ldr	r2, [r7, #4]
 8245 0106 101C     		mov	r0, r2
 8246 0108 191C     		mov	r1, r3
 8247 010a FFF7FEFF 		bl	TIM_SetIC1Prescaler
 8248              	.L343:
2077:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
2078:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 8249              		.loc 1 2078 0
 8250 010e BD46     		mov	sp, r7
 8251 0110 04B0     		add	sp, sp, #16
 8252              		@ sp needed
 8253 0112 80BD     		pop	{r7, pc}
 8254              	.L352:
 8255              		.align	2
 8256              	.L351:
 8257 0114 002C0140 		.word	1073818624
 8258 0118 00040040 		.word	1073742848
 8259 011c 00400140 		.word	1073823744
 8260 0120 00000000 		.word	.LC0
 8261 0124 F3070000 		.word	2035
 8262              		.cfi_endproc
 8263              	.LFE90:
 8265              		.section	.text.TIM_GetCapture1,"ax",%progbits
 8266              		.align	2
 8267              		.global	TIM_GetCapture1
 8268              		.code	16
 8269              		.thumb_func
 8271              	TIM_GetCapture1:
 8272              	.LFB91:
2079:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2080:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2081:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Gets the TIMx Input Capture 1 value.
2082:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 14, 15, 16 or 17 to select the TIM peripheral.
2083:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval Capture Compare 1 Register value.
2084:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2085:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** uint32_t TIM_GetCapture1(TIM_TypeDef* TIMx)
2086:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 8273              		.loc 1 2086 0
 8274              		.cfi_startproc
 8275 0000 80B5     		push	{r7, lr}
 8276              		.cfi_def_cfa_offset 8
 8277              		.cfi_offset 7, -8
 8278              		.cfi_offset 14, -4
 8279 0002 82B0     		sub	sp, sp, #8
 8280              		.cfi_def_cfa_offset 16
 8281 0004 00AF     		add	r7, sp, #0
 8282              		.cfi_def_cfa_register 7
 8283 0006 7860     		str	r0, [r7, #4]
2087:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2088:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
 8284              		.loc 1 2088 0
 8285 0008 7A68     		ldr	r2, [r7, #4]
 8286 000a 144B     		ldr	r3, .L356
 8287 000c 9A42     		cmp	r2, r3
 8288 000e 1ED0     		beq	.L354
 8289              		.loc 1 2088 0 is_stmt 0 discriminator 1
 8290 0010 7A68     		ldr	r2, [r7, #4]
 8291 0012 8023     		mov	r3, #128
 8292 0014 DB05     		lsl	r3, r3, #23
 8293 0016 9A42     		cmp	r2, r3
 8294 0018 19D0     		beq	.L354
 8295 001a 7A68     		ldr	r2, [r7, #4]
 8296 001c 104B     		ldr	r3, .L356+4
 8297 001e 9A42     		cmp	r2, r3
 8298 0020 15D0     		beq	.L354
 8299 0022 7A68     		ldr	r2, [r7, #4]
 8300 0024 0F4B     		ldr	r3, .L356+8
 8301 0026 9A42     		cmp	r2, r3
 8302 0028 11D0     		beq	.L354
 8303 002a 7A68     		ldr	r2, [r7, #4]
 8304 002c 0E4B     		ldr	r3, .L356+12
 8305 002e 9A42     		cmp	r2, r3
 8306 0030 0DD0     		beq	.L354
 8307 0032 7A68     		ldr	r2, [r7, #4]
 8308 0034 0D4B     		ldr	r3, .L356+16
 8309 0036 9A42     		cmp	r2, r3
 8310 0038 09D0     		beq	.L354
 8311 003a 7A68     		ldr	r2, [r7, #4]
 8312 003c 0C4B     		ldr	r3, .L356+20
 8313 003e 9A42     		cmp	r2, r3
 8314 0040 05D0     		beq	.L354
 8315 0042 0C4A     		ldr	r2, .L356+24
 8316 0044 0C4B     		ldr	r3, .L356+28
 8317 0046 101C     		mov	r0, r2
 8318 0048 191C     		mov	r1, r3
 8319 004a FFF7FEFF 		bl	assert_failed
 8320              	.L354:
2089:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
2090:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Get the Capture 1 Register value */
2091:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   return TIMx->CCR1;
 8321              		.loc 1 2091 0 is_stmt 1
 8322 004e 7B68     		ldr	r3, [r7, #4]
 8323 0050 5B6B     		ldr	r3, [r3, #52]
2092:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 8324              		.loc 1 2092 0
 8325 0052 181C     		mov	r0, r3
 8326 0054 BD46     		mov	sp, r7
 8327 0056 02B0     		add	sp, sp, #8
 8328              		@ sp needed
 8329 0058 80BD     		pop	{r7, pc}
 8330              	.L357:
 8331 005a C046     		.align	2
 8332              	.L356:
 8333 005c 002C0140 		.word	1073818624
 8334 0060 00040040 		.word	1073742848
 8335 0064 00200040 		.word	1073750016
 8336 0068 00400140 		.word	1073823744
 8337 006c 00440140 		.word	1073824768
 8338 0070 00480140 		.word	1073825792
 8339 0074 00000000 		.word	.LC0
 8340 0078 28080000 		.word	2088
 8341              		.cfi_endproc
 8342              	.LFE91:
 8344              		.section	.text.TIM_GetCapture2,"ax",%progbits
 8345              		.align	2
 8346              		.global	TIM_GetCapture2
 8347              		.code	16
 8348              		.thumb_func
 8350              	TIM_GetCapture2:
 8351              	.LFB92:
2093:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2094:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2095:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Gets the TIMx Input Capture 2 value.
2096:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3 or 15 to select the TIM peripheral.
2097:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval Capture Compare 2 Register value.
2098:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2099:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** uint32_t TIM_GetCapture2(TIM_TypeDef* TIMx)
2100:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 8352              		.loc 1 2100 0
 8353              		.cfi_startproc
 8354 0000 80B5     		push	{r7, lr}
 8355              		.cfi_def_cfa_offset 8
 8356              		.cfi_offset 7, -8
 8357              		.cfi_offset 14, -4
 8358 0002 82B0     		sub	sp, sp, #8
 8359              		.cfi_def_cfa_offset 16
 8360 0004 00AF     		add	r7, sp, #0
 8361              		.cfi_def_cfa_register 7
 8362 0006 7860     		str	r0, [r7, #4]
2101:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2102:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 8363              		.loc 1 2102 0
 8364 0008 7A68     		ldr	r2, [r7, #4]
 8365 000a 0E4B     		ldr	r3, .L361
 8366 000c 9A42     		cmp	r2, r3
 8367 000e 12D0     		beq	.L359
 8368              		.loc 1 2102 0 is_stmt 0 discriminator 1
 8369 0010 7A68     		ldr	r2, [r7, #4]
 8370 0012 8023     		mov	r3, #128
 8371 0014 DB05     		lsl	r3, r3, #23
 8372 0016 9A42     		cmp	r2, r3
 8373 0018 0DD0     		beq	.L359
 8374 001a 7A68     		ldr	r2, [r7, #4]
 8375 001c 0A4B     		ldr	r3, .L361+4
 8376 001e 9A42     		cmp	r2, r3
 8377 0020 09D0     		beq	.L359
 8378 0022 7A68     		ldr	r2, [r7, #4]
 8379 0024 094B     		ldr	r3, .L361+8
 8380 0026 9A42     		cmp	r2, r3
 8381 0028 05D0     		beq	.L359
 8382 002a 094A     		ldr	r2, .L361+12
 8383 002c 094B     		ldr	r3, .L361+16
 8384 002e 101C     		mov	r0, r2
 8385 0030 191C     		mov	r1, r3
 8386 0032 FFF7FEFF 		bl	assert_failed
 8387              	.L359:
2103:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
2104:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Get the Capture 2 Register value */
2105:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   return TIMx->CCR2;
 8388              		.loc 1 2105 0 is_stmt 1
 8389 0036 7B68     		ldr	r3, [r7, #4]
 8390 0038 9B6B     		ldr	r3, [r3, #56]
2106:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 8391              		.loc 1 2106 0
 8392 003a 181C     		mov	r0, r3
 8393 003c BD46     		mov	sp, r7
 8394 003e 02B0     		add	sp, sp, #8
 8395              		@ sp needed
 8396 0040 80BD     		pop	{r7, pc}
 8397              	.L362:
 8398 0042 C046     		.align	2
 8399              	.L361:
 8400 0044 002C0140 		.word	1073818624
 8401 0048 00040040 		.word	1073742848
 8402 004c 00400140 		.word	1073823744
 8403 0050 00000000 		.word	.LC0
 8404 0054 36080000 		.word	2102
 8405              		.cfi_endproc
 8406              	.LFE92:
 8408              		.section	.text.TIM_GetCapture3,"ax",%progbits
 8409              		.align	2
 8410              		.global	TIM_GetCapture3
 8411              		.code	16
 8412              		.thumb_func
 8414              	TIM_GetCapture3:
 8415              	.LFB93:
2107:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2108:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2109:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Gets the TIMx Input Capture 3 value.
2110:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2 or 3 to select the TIM peripheral.
2111:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval Capture Compare 3 Register value.
2112:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2113:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** uint32_t TIM_GetCapture3(TIM_TypeDef* TIMx)
2114:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 8416              		.loc 1 2114 0
 8417              		.cfi_startproc
 8418 0000 80B5     		push	{r7, lr}
 8419              		.cfi_def_cfa_offset 8
 8420              		.cfi_offset 7, -8
 8421              		.cfi_offset 14, -4
 8422 0002 82B0     		sub	sp, sp, #8
 8423              		.cfi_def_cfa_offset 16
 8424 0004 00AF     		add	r7, sp, #0
 8425              		.cfi_def_cfa_register 7
 8426 0006 7860     		str	r0, [r7, #4]
2115:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2116:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 8427              		.loc 1 2116 0
 8428 0008 7A68     		ldr	r2, [r7, #4]
 8429 000a 0C4B     		ldr	r3, .L366
 8430 000c 9A42     		cmp	r2, r3
 8431 000e 0ED0     		beq	.L364
 8432              		.loc 1 2116 0 is_stmt 0 discriminator 1
 8433 0010 7A68     		ldr	r2, [r7, #4]
 8434 0012 8023     		mov	r3, #128
 8435 0014 DB05     		lsl	r3, r3, #23
 8436 0016 9A42     		cmp	r2, r3
 8437 0018 09D0     		beq	.L364
 8438 001a 7A68     		ldr	r2, [r7, #4]
 8439 001c 084B     		ldr	r3, .L366+4
 8440 001e 9A42     		cmp	r2, r3
 8441 0020 05D0     		beq	.L364
 8442 0022 084A     		ldr	r2, .L366+8
 8443 0024 084B     		ldr	r3, .L366+12
 8444 0026 101C     		mov	r0, r2
 8445 0028 191C     		mov	r1, r3
 8446 002a FFF7FEFF 		bl	assert_failed
 8447              	.L364:
2117:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
2118:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Get the Capture 3 Register value */
2119:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   return TIMx->CCR3;
 8448              		.loc 1 2119 0 is_stmt 1
 8449 002e 7B68     		ldr	r3, [r7, #4]
 8450 0030 DB6B     		ldr	r3, [r3, #60]
2120:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 8451              		.loc 1 2120 0
 8452 0032 181C     		mov	r0, r3
 8453 0034 BD46     		mov	sp, r7
 8454 0036 02B0     		add	sp, sp, #8
 8455              		@ sp needed
 8456 0038 80BD     		pop	{r7, pc}
 8457              	.L367:
 8458 003a C046     		.align	2
 8459              	.L366:
 8460 003c 002C0140 		.word	1073818624
 8461 0040 00040040 		.word	1073742848
 8462 0044 00000000 		.word	.LC0
 8463 0048 44080000 		.word	2116
 8464              		.cfi_endproc
 8465              	.LFE93:
 8467              		.section	.text.TIM_GetCapture4,"ax",%progbits
 8468              		.align	2
 8469              		.global	TIM_GetCapture4
 8470              		.code	16
 8471              		.thumb_func
 8473              	TIM_GetCapture4:
 8474              	.LFB94:
2121:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2122:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2123:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Gets the TIMx Input Capture 4 value.
2124:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2 or 3 to select the TIM peripheral.
2125:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval Capture Compare 4 Register value.
2126:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2127:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** uint32_t TIM_GetCapture4(TIM_TypeDef* TIMx)
2128:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 8475              		.loc 1 2128 0
 8476              		.cfi_startproc
 8477 0000 80B5     		push	{r7, lr}
 8478              		.cfi_def_cfa_offset 8
 8479              		.cfi_offset 7, -8
 8480              		.cfi_offset 14, -4
 8481 0002 82B0     		sub	sp, sp, #8
 8482              		.cfi_def_cfa_offset 16
 8483 0004 00AF     		add	r7, sp, #0
 8484              		.cfi_def_cfa_register 7
 8485 0006 7860     		str	r0, [r7, #4]
2129:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2130:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 8486              		.loc 1 2130 0
 8487 0008 7A68     		ldr	r2, [r7, #4]
 8488 000a 0C4B     		ldr	r3, .L371
 8489 000c 9A42     		cmp	r2, r3
 8490 000e 0ED0     		beq	.L369
 8491              		.loc 1 2130 0 is_stmt 0 discriminator 1
 8492 0010 7A68     		ldr	r2, [r7, #4]
 8493 0012 8023     		mov	r3, #128
 8494 0014 DB05     		lsl	r3, r3, #23
 8495 0016 9A42     		cmp	r2, r3
 8496 0018 09D0     		beq	.L369
 8497 001a 7A68     		ldr	r2, [r7, #4]
 8498 001c 084B     		ldr	r3, .L371+4
 8499 001e 9A42     		cmp	r2, r3
 8500 0020 05D0     		beq	.L369
 8501 0022 084A     		ldr	r2, .L371+8
 8502 0024 084B     		ldr	r3, .L371+12
 8503 0026 101C     		mov	r0, r2
 8504 0028 191C     		mov	r1, r3
 8505 002a FFF7FEFF 		bl	assert_failed
 8506              	.L369:
2131:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
2132:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Get the Capture 4 Register value */
2133:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   return TIMx->CCR4;
 8507              		.loc 1 2133 0 is_stmt 1
 8508 002e 7B68     		ldr	r3, [r7, #4]
 8509 0030 1B6C     		ldr	r3, [r3, #64]
2134:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 8510              		.loc 1 2134 0
 8511 0032 181C     		mov	r0, r3
 8512 0034 BD46     		mov	sp, r7
 8513 0036 02B0     		add	sp, sp, #8
 8514              		@ sp needed
 8515 0038 80BD     		pop	{r7, pc}
 8516              	.L372:
 8517 003a C046     		.align	2
 8518              	.L371:
 8519 003c 002C0140 		.word	1073818624
 8520 0040 00040040 		.word	1073742848
 8521 0044 00000000 		.word	.LC0
 8522 0048 52080000 		.word	2130
 8523              		.cfi_endproc
 8524              	.LFE94:
 8526              		.section	.text.TIM_SetIC1Prescaler,"ax",%progbits
 8527              		.align	2
 8528              		.global	TIM_SetIC1Prescaler
 8529              		.code	16
 8530              		.thumb_func
 8532              	TIM_SetIC1Prescaler:
 8533              	.LFB95:
2135:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2136:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2137:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Sets the TIMx Input Capture 1 prescaler.
2138:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 14, 15, 16 or 17 to select the TIM peripheral.
2139:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture1 prescaler new value.
2140:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
2141:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPSC_DIV1: no prescaler
2142:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2143:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2144:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2145:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
2146:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2147:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_SetIC1Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2148:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 8534              		.loc 1 2148 0
 8535              		.cfi_startproc
 8536 0000 80B5     		push	{r7, lr}
 8537              		.cfi_def_cfa_offset 8
 8538              		.cfi_offset 7, -8
 8539              		.cfi_offset 14, -4
 8540 0002 82B0     		sub	sp, sp, #8
 8541              		.cfi_def_cfa_offset 16
 8542 0004 00AF     		add	r7, sp, #0
 8543              		.cfi_def_cfa_register 7
 8544 0006 7860     		str	r0, [r7, #4]
 8545 0008 0A1C     		mov	r2, r1
 8546 000a BB1C     		add	r3, r7, #2
 8547 000c 1A80     		strh	r2, [r3]
2149:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2150:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
 8548              		.loc 1 2150 0
 8549 000e 7A68     		ldr	r2, [r7, #4]
 8550 0010 254B     		ldr	r3, .L376
 8551 0012 9A42     		cmp	r2, r3
 8552 0014 1ED0     		beq	.L374
 8553              		.loc 1 2150 0 is_stmt 0 discriminator 1
 8554 0016 7A68     		ldr	r2, [r7, #4]
 8555 0018 8023     		mov	r3, #128
 8556 001a DB05     		lsl	r3, r3, #23
 8557 001c 9A42     		cmp	r2, r3
 8558 001e 19D0     		beq	.L374
 8559 0020 7A68     		ldr	r2, [r7, #4]
 8560 0022 224B     		ldr	r3, .L376+4
 8561 0024 9A42     		cmp	r2, r3
 8562 0026 15D0     		beq	.L374
 8563 0028 7A68     		ldr	r2, [r7, #4]
 8564 002a 214B     		ldr	r3, .L376+8
 8565 002c 9A42     		cmp	r2, r3
 8566 002e 11D0     		beq	.L374
 8567 0030 7A68     		ldr	r2, [r7, #4]
 8568 0032 204B     		ldr	r3, .L376+12
 8569 0034 9A42     		cmp	r2, r3
 8570 0036 0DD0     		beq	.L374
 8571 0038 7A68     		ldr	r2, [r7, #4]
 8572 003a 1F4B     		ldr	r3, .L376+16
 8573 003c 9A42     		cmp	r2, r3
 8574 003e 09D0     		beq	.L374
 8575 0040 7A68     		ldr	r2, [r7, #4]
 8576 0042 1E4B     		ldr	r3, .L376+20
 8577 0044 9A42     		cmp	r2, r3
 8578 0046 05D0     		beq	.L374
 8579 0048 1D4A     		ldr	r2, .L376+24
 8580 004a 1E4B     		ldr	r3, .L376+28
 8581 004c 101C     		mov	r0, r2
 8582 004e 191C     		mov	r1, r3
 8583 0050 FFF7FEFF 		bl	assert_failed
 8584              	.L374:
2151:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
 8585              		.loc 1 2151 0 is_stmt 1
 8586 0054 BB1C     		add	r3, r7, #2
 8587 0056 1B88     		ldrh	r3, [r3]
 8588 0058 002B     		cmp	r3, #0
 8589 005a 11D0     		beq	.L375
 8590              		.loc 1 2151 0 is_stmt 0 discriminator 1
 8591 005c BB1C     		add	r3, r7, #2
 8592 005e 1B88     		ldrh	r3, [r3]
 8593 0060 042B     		cmp	r3, #4
 8594 0062 0DD0     		beq	.L375
 8595 0064 BB1C     		add	r3, r7, #2
 8596 0066 1B88     		ldrh	r3, [r3]
 8597 0068 082B     		cmp	r3, #8
 8598 006a 09D0     		beq	.L375
 8599 006c BB1C     		add	r3, r7, #2
 8600 006e 1B88     		ldrh	r3, [r3]
 8601 0070 0C2B     		cmp	r3, #12
 8602 0072 05D0     		beq	.L375
 8603 0074 124A     		ldr	r2, .L376+24
 8604 0076 144B     		ldr	r3, .L376+32
 8605 0078 101C     		mov	r0, r2
 8606 007a 191C     		mov	r1, r3
 8607 007c FFF7FEFF 		bl	assert_failed
 8608              	.L375:
2152:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
2153:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the IC1PSC Bits */
2154:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~((uint16_t)TIM_CCMR1_IC1PSC);
 8609              		.loc 1 2154 0 is_stmt 1
 8610 0080 7B68     		ldr	r3, [r7, #4]
 8611 0082 1B8B     		ldrh	r3, [r3, #24]
 8612 0084 9BB2     		uxth	r3, r3
 8613 0086 0C22     		mov	r2, #12
 8614 0088 9343     		bic	r3, r2
 8615 008a 9AB2     		uxth	r2, r3
 8616 008c 7B68     		ldr	r3, [r7, #4]
 8617 008e 1A83     		strh	r2, [r3, #24]
2155:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the IC1PSC value */
2156:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR1 |= TIM_ICPSC;
 8618              		.loc 1 2156 0
 8619 0090 7B68     		ldr	r3, [r7, #4]
 8620 0092 1B8B     		ldrh	r3, [r3, #24]
 8621 0094 9AB2     		uxth	r2, r3
 8622 0096 BB1C     		add	r3, r7, #2
 8623 0098 1B88     		ldrh	r3, [r3]
 8624 009a 1343     		orr	r3, r2
 8625 009c 9AB2     		uxth	r2, r3
 8626 009e 7B68     		ldr	r3, [r7, #4]
 8627 00a0 1A83     		strh	r2, [r3, #24]
2157:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 8628              		.loc 1 2157 0
 8629 00a2 BD46     		mov	sp, r7
 8630 00a4 02B0     		add	sp, sp, #8
 8631              		@ sp needed
 8632 00a6 80BD     		pop	{r7, pc}
 8633              	.L377:
 8634              		.align	2
 8635              	.L376:
 8636 00a8 002C0140 		.word	1073818624
 8637 00ac 00040040 		.word	1073742848
 8638 00b0 00200040 		.word	1073750016
 8639 00b4 00400140 		.word	1073823744
 8640 00b8 00440140 		.word	1073824768
 8641 00bc 00480140 		.word	1073825792
 8642 00c0 00000000 		.word	.LC0
 8643 00c4 66080000 		.word	2150
 8644 00c8 67080000 		.word	2151
 8645              		.cfi_endproc
 8646              	.LFE95:
 8648              		.section	.text.TIM_SetIC2Prescaler,"ax",%progbits
 8649              		.align	2
 8650              		.global	TIM_SetIC2Prescaler
 8651              		.code	16
 8652              		.thumb_func
 8654              	TIM_SetIC2Prescaler:
 8655              	.LFB96:
2158:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2159:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2160:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Sets the TIMx Input Capture 2 prescaler.
2161:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3 or 15 to select the TIM peripheral.
2162:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture2 prescaler new value.
2163:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
2164:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPSC_DIV1: no prescaler
2165:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2166:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2167:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2168:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
2169:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2170:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_SetIC2Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2171:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 8656              		.loc 1 2171 0
 8657              		.cfi_startproc
 8658 0000 80B5     		push	{r7, lr}
 8659              		.cfi_def_cfa_offset 8
 8660              		.cfi_offset 7, -8
 8661              		.cfi_offset 14, -4
 8662 0002 82B0     		sub	sp, sp, #8
 8663              		.cfi_def_cfa_offset 16
 8664 0004 00AF     		add	r7, sp, #0
 8665              		.cfi_def_cfa_register 7
 8666 0006 7860     		str	r0, [r7, #4]
 8667 0008 0A1C     		mov	r2, r1
 8668 000a BB1C     		add	r3, r7, #2
 8669 000c 1A80     		strh	r2, [r3]
2172:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2173:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 8670              		.loc 1 2173 0
 8671 000e 7A68     		ldr	r2, [r7, #4]
 8672 0010 204B     		ldr	r3, .L381
 8673 0012 9A42     		cmp	r2, r3
 8674 0014 12D0     		beq	.L379
 8675              		.loc 1 2173 0 is_stmt 0 discriminator 1
 8676 0016 7A68     		ldr	r2, [r7, #4]
 8677 0018 8023     		mov	r3, #128
 8678 001a DB05     		lsl	r3, r3, #23
 8679 001c 9A42     		cmp	r2, r3
 8680 001e 0DD0     		beq	.L379
 8681 0020 7A68     		ldr	r2, [r7, #4]
 8682 0022 1D4B     		ldr	r3, .L381+4
 8683 0024 9A42     		cmp	r2, r3
 8684 0026 09D0     		beq	.L379
 8685 0028 7A68     		ldr	r2, [r7, #4]
 8686 002a 1C4B     		ldr	r3, .L381+8
 8687 002c 9A42     		cmp	r2, r3
 8688 002e 05D0     		beq	.L379
 8689 0030 1B4A     		ldr	r2, .L381+12
 8690 0032 1C4B     		ldr	r3, .L381+16
 8691 0034 101C     		mov	r0, r2
 8692 0036 191C     		mov	r1, r3
 8693 0038 FFF7FEFF 		bl	assert_failed
 8694              	.L379:
2174:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
 8695              		.loc 1 2174 0 is_stmt 1
 8696 003c BB1C     		add	r3, r7, #2
 8697 003e 1B88     		ldrh	r3, [r3]
 8698 0040 002B     		cmp	r3, #0
 8699 0042 11D0     		beq	.L380
 8700              		.loc 1 2174 0 is_stmt 0 discriminator 1
 8701 0044 BB1C     		add	r3, r7, #2
 8702 0046 1B88     		ldrh	r3, [r3]
 8703 0048 042B     		cmp	r3, #4
 8704 004a 0DD0     		beq	.L380
 8705 004c BB1C     		add	r3, r7, #2
 8706 004e 1B88     		ldrh	r3, [r3]
 8707 0050 082B     		cmp	r3, #8
 8708 0052 09D0     		beq	.L380
 8709 0054 BB1C     		add	r3, r7, #2
 8710 0056 1B88     		ldrh	r3, [r3]
 8711 0058 0C2B     		cmp	r3, #12
 8712 005a 05D0     		beq	.L380
 8713 005c 104A     		ldr	r2, .L381+12
 8714 005e 124B     		ldr	r3, .L381+20
 8715 0060 101C     		mov	r0, r2
 8716 0062 191C     		mov	r1, r3
 8717 0064 FFF7FEFF 		bl	assert_failed
 8718              	.L380:
2175:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
2176:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the IC2PSC Bits */
2177:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~((uint16_t)TIM_CCMR1_IC2PSC);
 8719              		.loc 1 2177 0 is_stmt 1
 8720 0068 7B68     		ldr	r3, [r7, #4]
 8721 006a 1B8B     		ldrh	r3, [r3, #24]
 8722 006c 9AB2     		uxth	r2, r3
 8723 006e 0F4B     		ldr	r3, .L381+24
 8724 0070 1340     		and	r3, r2
 8725 0072 9AB2     		uxth	r2, r3
 8726 0074 7B68     		ldr	r3, [r7, #4]
 8727 0076 1A83     		strh	r2, [r3, #24]
2178:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the IC2PSC value */
2179:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR1 |= (uint16_t)(TIM_ICPSC << 8);
 8728              		.loc 1 2179 0
 8729 0078 7B68     		ldr	r3, [r7, #4]
 8730 007a 1B8B     		ldrh	r3, [r3, #24]
 8731 007c 9AB2     		uxth	r2, r3
 8732 007e BB1C     		add	r3, r7, #2
 8733 0080 1B88     		ldrh	r3, [r3]
 8734 0082 1B02     		lsl	r3, r3, #8
 8735 0084 9BB2     		uxth	r3, r3
 8736 0086 1343     		orr	r3, r2
 8737 0088 9AB2     		uxth	r2, r3
 8738 008a 7B68     		ldr	r3, [r7, #4]
 8739 008c 1A83     		strh	r2, [r3, #24]
2180:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 8740              		.loc 1 2180 0
 8741 008e BD46     		mov	sp, r7
 8742 0090 02B0     		add	sp, sp, #8
 8743              		@ sp needed
 8744 0092 80BD     		pop	{r7, pc}
 8745              	.L382:
 8746              		.align	2
 8747              	.L381:
 8748 0094 002C0140 		.word	1073818624
 8749 0098 00040040 		.word	1073742848
 8750 009c 00400140 		.word	1073823744
 8751 00a0 00000000 		.word	.LC0
 8752 00a4 7D080000 		.word	2173
 8753 00a8 7E080000 		.word	2174
 8754 00ac FFF3FFFF 		.word	-3073
 8755              		.cfi_endproc
 8756              	.LFE96:
 8758              		.section	.text.TIM_SetIC3Prescaler,"ax",%progbits
 8759              		.align	2
 8760              		.global	TIM_SetIC3Prescaler
 8761              		.code	16
 8762              		.thumb_func
 8764              	TIM_SetIC3Prescaler:
 8765              	.LFB97:
2181:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2182:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2183:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Sets the TIMx Input Capture 3 prescaler.
2184:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2 or 3 to select the TIM peripheral.
2185:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture3 prescaler new value.
2186:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
2187:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPSC_DIV1: no prescaler
2188:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2189:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2190:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2191:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
2192:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2193:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_SetIC3Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2194:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 8766              		.loc 1 2194 0
 8767              		.cfi_startproc
 8768 0000 80B5     		push	{r7, lr}
 8769              		.cfi_def_cfa_offset 8
 8770              		.cfi_offset 7, -8
 8771              		.cfi_offset 14, -4
 8772 0002 82B0     		sub	sp, sp, #8
 8773              		.cfi_def_cfa_offset 16
 8774 0004 00AF     		add	r7, sp, #0
 8775              		.cfi_def_cfa_register 7
 8776 0006 7860     		str	r0, [r7, #4]
 8777 0008 0A1C     		mov	r2, r1
 8778 000a BB1C     		add	r3, r7, #2
 8779 000c 1A80     		strh	r2, [r3]
2195:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2196:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 8780              		.loc 1 2196 0
 8781 000e 7A68     		ldr	r2, [r7, #4]
 8782 0010 1D4B     		ldr	r3, .L386
 8783 0012 9A42     		cmp	r2, r3
 8784 0014 0ED0     		beq	.L384
 8785              		.loc 1 2196 0 is_stmt 0 discriminator 1
 8786 0016 7A68     		ldr	r2, [r7, #4]
 8787 0018 8023     		mov	r3, #128
 8788 001a DB05     		lsl	r3, r3, #23
 8789 001c 9A42     		cmp	r2, r3
 8790 001e 09D0     		beq	.L384
 8791 0020 7A68     		ldr	r2, [r7, #4]
 8792 0022 1A4B     		ldr	r3, .L386+4
 8793 0024 9A42     		cmp	r2, r3
 8794 0026 05D0     		beq	.L384
 8795 0028 194A     		ldr	r2, .L386+8
 8796 002a 1A4B     		ldr	r3, .L386+12
 8797 002c 101C     		mov	r0, r2
 8798 002e 191C     		mov	r1, r3
 8799 0030 FFF7FEFF 		bl	assert_failed
 8800              	.L384:
2197:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
 8801              		.loc 1 2197 0 is_stmt 1
 8802 0034 BB1C     		add	r3, r7, #2
 8803 0036 1B88     		ldrh	r3, [r3]
 8804 0038 002B     		cmp	r3, #0
 8805 003a 11D0     		beq	.L385
 8806              		.loc 1 2197 0 is_stmt 0 discriminator 1
 8807 003c BB1C     		add	r3, r7, #2
 8808 003e 1B88     		ldrh	r3, [r3]
 8809 0040 042B     		cmp	r3, #4
 8810 0042 0DD0     		beq	.L385
 8811 0044 BB1C     		add	r3, r7, #2
 8812 0046 1B88     		ldrh	r3, [r3]
 8813 0048 082B     		cmp	r3, #8
 8814 004a 09D0     		beq	.L385
 8815 004c BB1C     		add	r3, r7, #2
 8816 004e 1B88     		ldrh	r3, [r3]
 8817 0050 0C2B     		cmp	r3, #12
 8818 0052 05D0     		beq	.L385
 8819 0054 0E4A     		ldr	r2, .L386+8
 8820 0056 104B     		ldr	r3, .L386+16
 8821 0058 101C     		mov	r0, r2
 8822 005a 191C     		mov	r1, r3
 8823 005c FFF7FEFF 		bl	assert_failed
 8824              	.L385:
2198:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
2199:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the IC3PSC Bits */
2200:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~((uint16_t)TIM_CCMR2_IC3PSC);
 8825              		.loc 1 2200 0 is_stmt 1
 8826 0060 7B68     		ldr	r3, [r7, #4]
 8827 0062 9B8B     		ldrh	r3, [r3, #28]
 8828 0064 9BB2     		uxth	r3, r3
 8829 0066 0C22     		mov	r2, #12
 8830 0068 9343     		bic	r3, r2
 8831 006a 9AB2     		uxth	r2, r3
 8832 006c 7B68     		ldr	r3, [r7, #4]
 8833 006e 9A83     		strh	r2, [r3, #28]
2201:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the IC3PSC value */
2202:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR2 |= TIM_ICPSC;
 8834              		.loc 1 2202 0
 8835 0070 7B68     		ldr	r3, [r7, #4]
 8836 0072 9B8B     		ldrh	r3, [r3, #28]
 8837 0074 9AB2     		uxth	r2, r3
 8838 0076 BB1C     		add	r3, r7, #2
 8839 0078 1B88     		ldrh	r3, [r3]
 8840 007a 1343     		orr	r3, r2
 8841 007c 9AB2     		uxth	r2, r3
 8842 007e 7B68     		ldr	r3, [r7, #4]
 8843 0080 9A83     		strh	r2, [r3, #28]
2203:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 8844              		.loc 1 2203 0
 8845 0082 BD46     		mov	sp, r7
 8846 0084 02B0     		add	sp, sp, #8
 8847              		@ sp needed
 8848 0086 80BD     		pop	{r7, pc}
 8849              	.L387:
 8850              		.align	2
 8851              	.L386:
 8852 0088 002C0140 		.word	1073818624
 8853 008c 00040040 		.word	1073742848
 8854 0090 00000000 		.word	.LC0
 8855 0094 94080000 		.word	2196
 8856 0098 95080000 		.word	2197
 8857              		.cfi_endproc
 8858              	.LFE97:
 8860              		.section	.text.TIM_SetIC4Prescaler,"ax",%progbits
 8861              		.align	2
 8862              		.global	TIM_SetIC4Prescaler
 8863              		.code	16
 8864              		.thumb_func
 8866              	TIM_SetIC4Prescaler:
 8867              	.LFB98:
2204:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2205:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2206:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Sets the TIMx Input Capture 4 prescaler.
2207:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2 or 3 to select the TIM peripheral.
2208:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture4 prescaler new value.
2209:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
2210:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPSC_DIV1: no prescaler
2211:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2212:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2213:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2214:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
2215:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2216:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_SetIC4Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2217:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {  
 8868              		.loc 1 2217 0
 8869              		.cfi_startproc
 8870 0000 80B5     		push	{r7, lr}
 8871              		.cfi_def_cfa_offset 8
 8872              		.cfi_offset 7, -8
 8873              		.cfi_offset 14, -4
 8874 0002 82B0     		sub	sp, sp, #8
 8875              		.cfi_def_cfa_offset 16
 8876 0004 00AF     		add	r7, sp, #0
 8877              		.cfi_def_cfa_register 7
 8878 0006 7860     		str	r0, [r7, #4]
 8879 0008 0A1C     		mov	r2, r1
 8880 000a BB1C     		add	r3, r7, #2
 8881 000c 1A80     		strh	r2, [r3]
2218:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2219:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 8882              		.loc 1 2219 0
 8883 000e 7A68     		ldr	r2, [r7, #4]
 8884 0010 1E4B     		ldr	r3, .L391
 8885 0012 9A42     		cmp	r2, r3
 8886 0014 0ED0     		beq	.L389
 8887              		.loc 1 2219 0 is_stmt 0 discriminator 1
 8888 0016 7A68     		ldr	r2, [r7, #4]
 8889 0018 8023     		mov	r3, #128
 8890 001a DB05     		lsl	r3, r3, #23
 8891 001c 9A42     		cmp	r2, r3
 8892 001e 09D0     		beq	.L389
 8893 0020 7A68     		ldr	r2, [r7, #4]
 8894 0022 1B4B     		ldr	r3, .L391+4
 8895 0024 9A42     		cmp	r2, r3
 8896 0026 05D0     		beq	.L389
 8897 0028 1A4A     		ldr	r2, .L391+8
 8898 002a 1B4B     		ldr	r3, .L391+12
 8899 002c 101C     		mov	r0, r2
 8900 002e 191C     		mov	r1, r3
 8901 0030 FFF7FEFF 		bl	assert_failed
 8902              	.L389:
2220:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
 8903              		.loc 1 2220 0 is_stmt 1
 8904 0034 BB1C     		add	r3, r7, #2
 8905 0036 1B88     		ldrh	r3, [r3]
 8906 0038 002B     		cmp	r3, #0
 8907 003a 11D0     		beq	.L390
 8908              		.loc 1 2220 0 is_stmt 0 discriminator 1
 8909 003c BB1C     		add	r3, r7, #2
 8910 003e 1B88     		ldrh	r3, [r3]
 8911 0040 042B     		cmp	r3, #4
 8912 0042 0DD0     		beq	.L390
 8913 0044 BB1C     		add	r3, r7, #2
 8914 0046 1B88     		ldrh	r3, [r3]
 8915 0048 082B     		cmp	r3, #8
 8916 004a 09D0     		beq	.L390
 8917 004c BB1C     		add	r3, r7, #2
 8918 004e 1B88     		ldrh	r3, [r3]
 8919 0050 0C2B     		cmp	r3, #12
 8920 0052 05D0     		beq	.L390
 8921 0054 0F4A     		ldr	r2, .L391+8
 8922 0056 114B     		ldr	r3, .L391+16
 8923 0058 101C     		mov	r0, r2
 8924 005a 191C     		mov	r1, r3
 8925 005c FFF7FEFF 		bl	assert_failed
 8926              	.L390:
2221:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
2222:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the IC4PSC Bits */
2223:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~((uint16_t)TIM_CCMR2_IC4PSC);
 8927              		.loc 1 2223 0 is_stmt 1
 8928 0060 7B68     		ldr	r3, [r7, #4]
 8929 0062 9B8B     		ldrh	r3, [r3, #28]
 8930 0064 9AB2     		uxth	r2, r3
 8931 0066 0E4B     		ldr	r3, .L391+20
 8932 0068 1340     		and	r3, r2
 8933 006a 9AB2     		uxth	r2, r3
 8934 006c 7B68     		ldr	r3, [r7, #4]
 8935 006e 9A83     		strh	r2, [r3, #28]
2224:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the IC4PSC value */
2225:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR2 |= (uint16_t)(TIM_ICPSC << 8);
 8936              		.loc 1 2225 0
 8937 0070 7B68     		ldr	r3, [r7, #4]
 8938 0072 9B8B     		ldrh	r3, [r3, #28]
 8939 0074 9AB2     		uxth	r2, r3
 8940 0076 BB1C     		add	r3, r7, #2
 8941 0078 1B88     		ldrh	r3, [r3]
 8942 007a 1B02     		lsl	r3, r3, #8
 8943 007c 9BB2     		uxth	r3, r3
 8944 007e 1343     		orr	r3, r2
 8945 0080 9AB2     		uxth	r2, r3
 8946 0082 7B68     		ldr	r3, [r7, #4]
 8947 0084 9A83     		strh	r2, [r3, #28]
2226:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 8948              		.loc 1 2226 0
 8949 0086 BD46     		mov	sp, r7
 8950 0088 02B0     		add	sp, sp, #8
 8951              		@ sp needed
 8952 008a 80BD     		pop	{r7, pc}
 8953              	.L392:
 8954              		.align	2
 8955              	.L391:
 8956 008c 002C0140 		.word	1073818624
 8957 0090 00040040 		.word	1073742848
 8958 0094 00000000 		.word	.LC0
 8959 0098 AB080000 		.word	2219
 8960 009c AC080000 		.word	2220
 8961 00a0 FFF3FFFF 		.word	-3073
 8962              		.cfi_endproc
 8963              	.LFE98:
 8965              		.section	.text.TIM_ITConfig,"ax",%progbits
 8966              		.align	2
 8967              		.global	TIM_ITConfig
 8968              		.code	16
 8969              		.thumb_func
 8971              	TIM_ITConfig:
 8972              	.LFB99:
2227:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2228:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2229:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @}
2230:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2231:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2232:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /** @defgroup TIM_Group5 Interrupts DMA and flags management functions
2233:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  *  @brief    Interrupts, DMA and flags management functions 
2234:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  *
2235:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** @verbatim
2236:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  ===============================================================================
2237:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****           ##### Interrupts, DMA and flags management functions #####
2238:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  ===============================================================================
2239:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2240:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** @endverbatim
2241:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @{
2242:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2243:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2244:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2245:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Enables or disables the specified TIM interrupts.
2246:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 6, 14, 15, 16 or 17 to select the TIMx peripheral.
2247:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupts sources to be enabled or disabled.
2248:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be any combination of the following values:
2249:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_IT_Update: TIM update Interrupt source
2250:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2251:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2252:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2253:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2254:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_IT_COM: TIM Commutation Interrupt source
2255:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2256:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_IT_Break: TIM Break Interrupt source
2257:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @note 
2258:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   - TIM6 can only generate an update interrupt.
2259:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   - TIM15 can have only TIM_IT_Update, TIM_IT_CC1,
2260:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     TIM_IT_CC2 or TIM_IT_Trigger. 
2261:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   - TIM14, TIM16 and TIM17 can have TIM_IT_Update or TIM_IT_CC1.   
2262:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   - TIM_IT_Break is used only with TIM1 and TIM15. 
2263:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   - TIM_IT_COM is used only with TIM1, TIM15, TIM16 and TIM17.    
2264:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  NewState: new state of the TIM interrupts.
2265:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
2266:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
2267:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2268:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_ITConfig(TIM_TypeDef* TIMx, uint16_t TIM_IT, FunctionalState NewState)
2269:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {  
 8973              		.loc 1 2269 0
 8974              		.cfi_startproc
 8975 0000 80B5     		push	{r7, lr}
 8976              		.cfi_def_cfa_offset 8
 8977              		.cfi_offset 7, -8
 8978              		.cfi_offset 14, -4
 8979 0002 82B0     		sub	sp, sp, #8
 8980              		.cfi_def_cfa_offset 16
 8981 0004 00AF     		add	r7, sp, #0
 8982              		.cfi_def_cfa_register 7
 8983 0006 7860     		str	r0, [r7, #4]
 8984 0008 BB1C     		add	r3, r7, #2
 8985 000a 1980     		strh	r1, [r3]
 8986 000c 7B1C     		add	r3, r7, #1
 8987 000e 1A70     		strb	r2, [r3]
2270:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2271:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 8988              		.loc 1 2271 0
 8989 0010 7A68     		ldr	r2, [r7, #4]
 8990 0012 304B     		ldr	r3, .L400
 8991 0014 9A42     		cmp	r2, r3
 8992 0016 22D0     		beq	.L394
 8993              		.loc 1 2271 0 is_stmt 0 discriminator 1
 8994 0018 7A68     		ldr	r2, [r7, #4]
 8995 001a 8023     		mov	r3, #128
 8996 001c DB05     		lsl	r3, r3, #23
 8997 001e 9A42     		cmp	r2, r3
 8998 0020 1DD0     		beq	.L394
 8999 0022 7A68     		ldr	r2, [r7, #4]
 9000 0024 2C4B     		ldr	r3, .L400+4
 9001 0026 9A42     		cmp	r2, r3
 9002 0028 19D0     		beq	.L394
 9003 002a 7A68     		ldr	r2, [r7, #4]
 9004 002c 2B4B     		ldr	r3, .L400+8
 9005 002e 9A42     		cmp	r2, r3
 9006 0030 15D0     		beq	.L394
 9007 0032 7A68     		ldr	r2, [r7, #4]
 9008 0034 2A4B     		ldr	r3, .L400+12
 9009 0036 9A42     		cmp	r2, r3
 9010 0038 11D0     		beq	.L394
 9011 003a 7A68     		ldr	r2, [r7, #4]
 9012 003c 294B     		ldr	r3, .L400+16
 9013 003e 9A42     		cmp	r2, r3
 9014 0040 0DD0     		beq	.L394
 9015 0042 7A68     		ldr	r2, [r7, #4]
 9016 0044 284B     		ldr	r3, .L400+20
 9017 0046 9A42     		cmp	r2, r3
 9018 0048 09D0     		beq	.L394
 9019 004a 7A68     		ldr	r2, [r7, #4]
 9020 004c 274B     		ldr	r3, .L400+24
 9021 004e 9A42     		cmp	r2, r3
 9022 0050 05D0     		beq	.L394
 9023 0052 274A     		ldr	r2, .L400+28
 9024 0054 274B     		ldr	r3, .L400+32
 9025 0056 101C     		mov	r0, r2
 9026 0058 191C     		mov	r1, r3
 9027 005a FFF7FEFF 		bl	assert_failed
 9028              	.L394:
2272:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
 9029              		.loc 1 2272 0 is_stmt 1
 9030 005e BB1C     		add	r3, r7, #2
 9031 0060 1A88     		ldrh	r2, [r3]
 9032 0062 FF23     		mov	r3, #255
 9033 0064 1B02     		lsl	r3, r3, #8
 9034 0066 1340     		and	r3, r2
 9035 0068 03D1     		bne	.L395
 9036              		.loc 1 2272 0 is_stmt 0 discriminator 2
 9037 006a BB1C     		add	r3, r7, #2
 9038 006c 1B88     		ldrh	r3, [r3]
 9039 006e 002B     		cmp	r3, #0
 9040 0070 06D1     		bne	.L396
 9041              	.L395:
 9042              		.loc 1 2272 0 discriminator 1
 9043 0072 1F4A     		ldr	r2, .L400+28
 9044 0074 8E23     		mov	r3, #142
 9045 0076 1B01     		lsl	r3, r3, #4
 9046 0078 101C     		mov	r0, r2
 9047 007a 191C     		mov	r1, r3
 9048 007c FFF7FEFF 		bl	assert_failed
 9049              	.L396:
2273:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 9050              		.loc 1 2273 0 is_stmt 1
 9051 0080 7B1C     		add	r3, r7, #1
 9052 0082 1B78     		ldrb	r3, [r3]
 9053 0084 002B     		cmp	r3, #0
 9054 0086 09D0     		beq	.L397
 9055              		.loc 1 2273 0 is_stmt 0 discriminator 1
 9056 0088 7B1C     		add	r3, r7, #1
 9057 008a 1B78     		ldrb	r3, [r3]
 9058 008c 012B     		cmp	r3, #1
 9059 008e 05D0     		beq	.L397
 9060 0090 174A     		ldr	r2, .L400+28
 9061 0092 194B     		ldr	r3, .L400+36
 9062 0094 101C     		mov	r0, r2
 9063 0096 191C     		mov	r1, r3
 9064 0098 FFF7FEFF 		bl	assert_failed
 9065              	.L397:
2274:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
2275:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   if (NewState != DISABLE)
 9066              		.loc 1 2275 0 is_stmt 1
 9067 009c 7B1C     		add	r3, r7, #1
 9068 009e 1B78     		ldrb	r3, [r3]
 9069 00a0 002B     		cmp	r3, #0
 9070 00a2 09D0     		beq	.L398
2276:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
2277:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Enable the Interrupt sources */
2278:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIMx->DIER |= TIM_IT;
 9071              		.loc 1 2278 0
 9072 00a4 7B68     		ldr	r3, [r7, #4]
 9073 00a6 9B89     		ldrh	r3, [r3, #12]
 9074 00a8 9AB2     		uxth	r2, r3
 9075 00aa BB1C     		add	r3, r7, #2
 9076 00ac 1B88     		ldrh	r3, [r3]
 9077 00ae 1343     		orr	r3, r2
 9078 00b0 9AB2     		uxth	r2, r3
 9079 00b2 7B68     		ldr	r3, [r7, #4]
 9080 00b4 9A81     		strh	r2, [r3, #12]
 9081 00b6 0AE0     		b	.L393
 9082              	.L398:
2279:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
2280:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   else
2281:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
2282:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Disable the Interrupt sources */
2283:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_IT;
 9083              		.loc 1 2283 0
 9084 00b8 7B68     		ldr	r3, [r7, #4]
 9085 00ba 9B89     		ldrh	r3, [r3, #12]
 9086 00bc 9BB2     		uxth	r3, r3
 9087 00be BA1C     		add	r2, r7, #2
 9088 00c0 1288     		ldrh	r2, [r2]
 9089 00c2 D243     		mvn	r2, r2
 9090 00c4 92B2     		uxth	r2, r2
 9091 00c6 1340     		and	r3, r2
 9092 00c8 9AB2     		uxth	r2, r3
 9093 00ca 7B68     		ldr	r3, [r7, #4]
 9094 00cc 9A81     		strh	r2, [r3, #12]
 9095              	.L393:
2284:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
2285:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 9096              		.loc 1 2285 0
 9097 00ce BD46     		mov	sp, r7
 9098 00d0 02B0     		add	sp, sp, #8
 9099              		@ sp needed
 9100 00d2 80BD     		pop	{r7, pc}
 9101              	.L401:
 9102              		.align	2
 9103              	.L400:
 9104 00d4 002C0140 		.word	1073818624
 9105 00d8 00040040 		.word	1073742848
 9106 00dc 00100040 		.word	1073745920
 9107 00e0 00200040 		.word	1073750016
 9108 00e4 00400140 		.word	1073823744
 9109 00e8 00440140 		.word	1073824768
 9110 00ec 00480140 		.word	1073825792
 9111 00f0 00000000 		.word	.LC0
 9112 00f4 DF080000 		.word	2271
 9113 00f8 E1080000 		.word	2273
 9114              		.cfi_endproc
 9115              	.LFE99:
 9117              		.section	.text.TIM_GenerateEvent,"ax",%progbits
 9118              		.align	2
 9119              		.global	TIM_GenerateEvent
 9120              		.code	16
 9121              		.thumb_func
 9123              	TIM_GenerateEvent:
 9124              	.LFB100:
2286:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2287:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2288:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Configures the TIMx event to be generate by software.
2289:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 6, 14, 15, 16 or 17 to select the 
2290:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *         TIM peripheral.
2291:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_EventSource: specifies the event source.
2292:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one or more of the following values:  
2293:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_EventSource_Update: Timer update Event source
2294:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_EventSource_CC1: Timer Capture Compare 1 Event source
2295:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_EventSource_CC2: Timer Capture Compare 2 Event source
2296:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_EventSource_CC3: Timer Capture Compare 3 Event source
2297:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_EventSource_CC4: Timer Capture Compare 4 Event source
2298:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_EventSource_COM: Timer COM event source  
2299:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_EventSource_Trigger: Timer Trigger Event source
2300:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_EventSource_Break: Timer Break event source
2301:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @note 
2302:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   - TIM6 can only generate an update event. 
2303:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   - TIM9 can only generate an update event, Capture Compare 1 event, 
2304:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     Capture Compare 2 event and TIM_EventSource_Trigger.  
2305:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   - TIM_EventSource_COM and TIM_EventSource_Break are used only with TIM1.          
2306:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
2307:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2308:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_GenerateEvent(TIM_TypeDef* TIMx, uint16_t TIM_EventSource)
2309:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** { 
 9125              		.loc 1 2309 0
 9126              		.cfi_startproc
 9127 0000 80B5     		push	{r7, lr}
 9128              		.cfi_def_cfa_offset 8
 9129              		.cfi_offset 7, -8
 9130              		.cfi_offset 14, -4
 9131 0002 82B0     		sub	sp, sp, #8
 9132              		.cfi_def_cfa_offset 16
 9133 0004 00AF     		add	r7, sp, #0
 9134              		.cfi_def_cfa_register 7
 9135 0006 7860     		str	r0, [r7, #4]
 9136 0008 0A1C     		mov	r2, r1
 9137 000a BB1C     		add	r3, r7, #2
 9138 000c 1A80     		strh	r2, [r3]
2310:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2311:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 9139              		.loc 1 2311 0
 9140 000e 7A68     		ldr	r2, [r7, #4]
 9141 0010 1E4B     		ldr	r3, .L406
 9142 0012 9A42     		cmp	r2, r3
 9143 0014 22D0     		beq	.L403
 9144              		.loc 1 2311 0 is_stmt 0 discriminator 1
 9145 0016 7A68     		ldr	r2, [r7, #4]
 9146 0018 8023     		mov	r3, #128
 9147 001a DB05     		lsl	r3, r3, #23
 9148 001c 9A42     		cmp	r2, r3
 9149 001e 1DD0     		beq	.L403
 9150 0020 7A68     		ldr	r2, [r7, #4]
 9151 0022 1B4B     		ldr	r3, .L406+4
 9152 0024 9A42     		cmp	r2, r3
 9153 0026 19D0     		beq	.L403
 9154 0028 7A68     		ldr	r2, [r7, #4]
 9155 002a 1A4B     		ldr	r3, .L406+8
 9156 002c 9A42     		cmp	r2, r3
 9157 002e 15D0     		beq	.L403
 9158 0030 7A68     		ldr	r2, [r7, #4]
 9159 0032 194B     		ldr	r3, .L406+12
 9160 0034 9A42     		cmp	r2, r3
 9161 0036 11D0     		beq	.L403
 9162 0038 7A68     		ldr	r2, [r7, #4]
 9163 003a 184B     		ldr	r3, .L406+16
 9164 003c 9A42     		cmp	r2, r3
 9165 003e 0DD0     		beq	.L403
 9166 0040 7A68     		ldr	r2, [r7, #4]
 9167 0042 174B     		ldr	r3, .L406+20
 9168 0044 9A42     		cmp	r2, r3
 9169 0046 09D0     		beq	.L403
 9170 0048 7A68     		ldr	r2, [r7, #4]
 9171 004a 164B     		ldr	r3, .L406+24
 9172 004c 9A42     		cmp	r2, r3
 9173 004e 05D0     		beq	.L403
 9174 0050 154A     		ldr	r2, .L406+28
 9175 0052 164B     		ldr	r3, .L406+32
 9176 0054 101C     		mov	r0, r2
 9177 0056 191C     		mov	r1, r3
 9178 0058 FFF7FEFF 		bl	assert_failed
 9179              	.L403:
2312:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_EVENT_SOURCE(TIM_EventSource)); 
 9180              		.loc 1 2312 0 is_stmt 1
 9181 005c BB1C     		add	r3, r7, #2
 9182 005e 1A88     		ldrh	r2, [r3]
 9183 0060 FF23     		mov	r3, #255
 9184 0062 1B02     		lsl	r3, r3, #8
 9185 0064 1340     		and	r3, r2
 9186 0066 03D1     		bne	.L404
 9187              		.loc 1 2312 0 is_stmt 0 discriminator 2
 9188 0068 BB1C     		add	r3, r7, #2
 9189 006a 1B88     		ldrh	r3, [r3]
 9190 006c 002B     		cmp	r3, #0
 9191 006e 05D1     		bne	.L405
 9192              	.L404:
 9193              		.loc 1 2312 0 discriminator 1
 9194 0070 0D4A     		ldr	r2, .L406+28
 9195 0072 0F4B     		ldr	r3, .L406+36
 9196 0074 101C     		mov	r0, r2
 9197 0076 191C     		mov	r1, r3
 9198 0078 FFF7FEFF 		bl	assert_failed
 9199              	.L405:
2313:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the event sources */
2314:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->EGR = TIM_EventSource;
 9200              		.loc 1 2314 0 is_stmt 1
 9201 007c 7B68     		ldr	r3, [r7, #4]
 9202 007e BA1C     		add	r2, r7, #2
 9203 0080 1288     		ldrh	r2, [r2]
 9204 0082 9A82     		strh	r2, [r3, #20]
2315:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 9205              		.loc 1 2315 0
 9206 0084 BD46     		mov	sp, r7
 9207 0086 02B0     		add	sp, sp, #8
 9208              		@ sp needed
 9209 0088 80BD     		pop	{r7, pc}
 9210              	.L407:
 9211 008a C046     		.align	2
 9212              	.L406:
 9213 008c 002C0140 		.word	1073818624
 9214 0090 00040040 		.word	1073742848
 9215 0094 00100040 		.word	1073745920
 9216 0098 00200040 		.word	1073750016
 9217 009c 00400140 		.word	1073823744
 9218 00a0 00440140 		.word	1073824768
 9219 00a4 00480140 		.word	1073825792
 9220 00a8 00000000 		.word	.LC0
 9221 00ac 07090000 		.word	2311
 9222 00b0 08090000 		.word	2312
 9223              		.cfi_endproc
 9224              	.LFE100:
 9226              		.section	.text.TIM_GetFlagStatus,"ax",%progbits
 9227              		.align	2
 9228              		.global	TIM_GetFlagStatus
 9229              		.code	16
 9230              		.thumb_func
 9232              	TIM_GetFlagStatus:
 9233              	.LFB101:
2316:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2317:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2318:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Checks whether the specified TIM flag is set or not.
2319:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 6, 14, 15, 16 or 17 to select the TIM peripheral.
2320:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_FLAG: specifies the flag to check.
2321:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
2322:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_FLAG_Update: TIM update Flag
2323:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2324:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2325:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2326:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2327:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_FLAG_COM: TIM Commutation Flag
2328:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_FLAG_Trigger: TIM Trigger Flag
2329:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_FLAG_Break: TIM Break Flag
2330:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 overcapture Flag
2331:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 overcapture Flag
2332:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 overcapture Flag
2333:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 overcapture Flag
2334:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @note
2335:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   - TIM6 can have only one update flag. 
2336:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   - TIM15 can have only TIM_FLAG_Update, TIM_FLAG_CC1, TIM_FLAG_CC2 or 
2337:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     TIM_FLAG_Trigger. 
2338:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   - TIM14, TIM16 and TIM17 can have TIM_FLAG_Update or TIM_FLAG_CC1.   
2339:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   - TIM_FLAG_Break is used only with TIM1 and TIM15. 
2340:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   - TIM_FLAG_COM is used only with TIM1 TIM15, TIM16 and TIM17.        
2341:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval The new state of TIM_FLAG (SET or RESET).
2342:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2343:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** FlagStatus TIM_GetFlagStatus(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2344:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** { 
 9234              		.loc 1 2344 0
 9235              		.cfi_startproc
 9236 0000 80B5     		push	{r7, lr}
 9237              		.cfi_def_cfa_offset 8
 9238              		.cfi_offset 7, -8
 9239              		.cfi_offset 14, -4
 9240 0002 84B0     		sub	sp, sp, #16
 9241              		.cfi_def_cfa_offset 24
 9242 0004 00AF     		add	r7, sp, #0
 9243              		.cfi_def_cfa_register 7
 9244 0006 7860     		str	r0, [r7, #4]
 9245 0008 0A1C     		mov	r2, r1
 9246 000a BB1C     		add	r3, r7, #2
 9247 000c 1A80     		strh	r2, [r3]
2345:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   ITStatus bitstatus = RESET; 
 9248              		.loc 1 2345 0
 9249 000e 3B1C     		mov	r3, r7
 9250 0010 0F33     		add	r3, r3, #15
 9251 0012 0022     		mov	r2, #0
 9252 0014 1A70     		strb	r2, [r3]
2346:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****    
2347:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2348:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 9253              		.loc 1 2348 0
 9254 0016 7A68     		ldr	r2, [r7, #4]
 9255 0018 3E4B     		ldr	r3, .L414
 9256 001a 9A42     		cmp	r2, r3
 9257 001c 22D0     		beq	.L409
 9258              		.loc 1 2348 0 is_stmt 0 discriminator 1
 9259 001e 7A68     		ldr	r2, [r7, #4]
 9260 0020 8023     		mov	r3, #128
 9261 0022 DB05     		lsl	r3, r3, #23
 9262 0024 9A42     		cmp	r2, r3
 9263 0026 1DD0     		beq	.L409
 9264 0028 7A68     		ldr	r2, [r7, #4]
 9265 002a 3B4B     		ldr	r3, .L414+4
 9266 002c 9A42     		cmp	r2, r3
 9267 002e 19D0     		beq	.L409
 9268 0030 7A68     		ldr	r2, [r7, #4]
 9269 0032 3A4B     		ldr	r3, .L414+8
 9270 0034 9A42     		cmp	r2, r3
 9271 0036 15D0     		beq	.L409
 9272 0038 7A68     		ldr	r2, [r7, #4]
 9273 003a 394B     		ldr	r3, .L414+12
 9274 003c 9A42     		cmp	r2, r3
 9275 003e 11D0     		beq	.L409
 9276 0040 7A68     		ldr	r2, [r7, #4]
 9277 0042 384B     		ldr	r3, .L414+16
 9278 0044 9A42     		cmp	r2, r3
 9279 0046 0DD0     		beq	.L409
 9280 0048 7A68     		ldr	r2, [r7, #4]
 9281 004a 374B     		ldr	r3, .L414+20
 9282 004c 9A42     		cmp	r2, r3
 9283 004e 09D0     		beq	.L409
 9284 0050 7A68     		ldr	r2, [r7, #4]
 9285 0052 364B     		ldr	r3, .L414+24
 9286 0054 9A42     		cmp	r2, r3
 9287 0056 05D0     		beq	.L409
 9288 0058 354A     		ldr	r2, .L414+28
 9289 005a 364B     		ldr	r3, .L414+32
 9290 005c 101C     		mov	r0, r2
 9291 005e 191C     		mov	r1, r3
 9292 0060 FFF7FEFF 		bl	assert_failed
 9293              	.L409:
2349:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_GET_FLAG(TIM_FLAG));
 9294              		.loc 1 2349 0 is_stmt 1
 9295 0064 BB1C     		add	r3, r7, #2
 9296 0066 1B88     		ldrh	r3, [r3]
 9297 0068 012B     		cmp	r3, #1
 9298 006a 39D0     		beq	.L410
 9299              		.loc 1 2349 0 is_stmt 0 discriminator 1
 9300 006c BB1C     		add	r3, r7, #2
 9301 006e 1B88     		ldrh	r3, [r3]
 9302 0070 022B     		cmp	r3, #2
 9303 0072 35D0     		beq	.L410
 9304 0074 BB1C     		add	r3, r7, #2
 9305 0076 1B88     		ldrh	r3, [r3]
 9306 0078 042B     		cmp	r3, #4
 9307 007a 31D0     		beq	.L410
 9308 007c BB1C     		add	r3, r7, #2
 9309 007e 1B88     		ldrh	r3, [r3]
 9310 0080 082B     		cmp	r3, #8
 9311 0082 2DD0     		beq	.L410
 9312 0084 BB1C     		add	r3, r7, #2
 9313 0086 1B88     		ldrh	r3, [r3]
 9314 0088 102B     		cmp	r3, #16
 9315 008a 29D0     		beq	.L410
 9316 008c BB1C     		add	r3, r7, #2
 9317 008e 1B88     		ldrh	r3, [r3]
 9318 0090 202B     		cmp	r3, #32
 9319 0092 25D0     		beq	.L410
 9320 0094 BB1C     		add	r3, r7, #2
 9321 0096 1B88     		ldrh	r3, [r3]
 9322 0098 402B     		cmp	r3, #64
 9323 009a 21D0     		beq	.L410
 9324 009c BB1C     		add	r3, r7, #2
 9325 009e 1B88     		ldrh	r3, [r3]
 9326 00a0 802B     		cmp	r3, #128
 9327 00a2 1DD0     		beq	.L410
 9328 00a4 BB1C     		add	r3, r7, #2
 9329 00a6 1A88     		ldrh	r2, [r3]
 9330 00a8 8023     		mov	r3, #128
 9331 00aa 9B00     		lsl	r3, r3, #2
 9332 00ac 9A42     		cmp	r2, r3
 9333 00ae 17D0     		beq	.L410
 9334 00b0 BB1C     		add	r3, r7, #2
 9335 00b2 1A88     		ldrh	r2, [r3]
 9336 00b4 8023     		mov	r3, #128
 9337 00b6 DB00     		lsl	r3, r3, #3
 9338 00b8 9A42     		cmp	r2, r3
 9339 00ba 11D0     		beq	.L410
 9340 00bc BB1C     		add	r3, r7, #2
 9341 00be 1A88     		ldrh	r2, [r3]
 9342 00c0 8023     		mov	r3, #128
 9343 00c2 1B01     		lsl	r3, r3, #4
 9344 00c4 9A42     		cmp	r2, r3
 9345 00c6 0BD0     		beq	.L410
 9346 00c8 BB1C     		add	r3, r7, #2
 9347 00ca 1A88     		ldrh	r2, [r3]
 9348 00cc 8023     		mov	r3, #128
 9349 00ce 5B01     		lsl	r3, r3, #5
 9350 00d0 9A42     		cmp	r2, r3
 9351 00d2 05D0     		beq	.L410
 9352 00d4 164A     		ldr	r2, .L414+28
 9353 00d6 184B     		ldr	r3, .L414+36
 9354 00d8 101C     		mov	r0, r2
 9355 00da 191C     		mov	r1, r3
 9356 00dc FFF7FEFF 		bl	assert_failed
 9357              	.L410:
2350:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
2351:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   if ((TIMx->SR & TIM_FLAG) != (uint16_t)RESET)
 9358              		.loc 1 2351 0 is_stmt 1
 9359 00e0 7B68     		ldr	r3, [r7, #4]
 9360 00e2 1B8A     		ldrh	r3, [r3, #16]
 9361 00e4 9BB2     		uxth	r3, r3
 9362 00e6 BA1C     		add	r2, r7, #2
 9363 00e8 1288     		ldrh	r2, [r2]
 9364 00ea 1340     		and	r3, r2
 9365 00ec 9BB2     		uxth	r3, r3
 9366 00ee 002B     		cmp	r3, #0
 9367 00f0 04D0     		beq	.L411
2352:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
2353:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     bitstatus = SET;
 9368              		.loc 1 2353 0
 9369 00f2 3B1C     		mov	r3, r7
 9370 00f4 0F33     		add	r3, r3, #15
 9371 00f6 0122     		mov	r2, #1
 9372 00f8 1A70     		strb	r2, [r3]
 9373 00fa 03E0     		b	.L412
 9374              	.L411:
2354:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
2355:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   else
2356:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
2357:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     bitstatus = RESET;
 9375              		.loc 1 2357 0
 9376 00fc 3B1C     		mov	r3, r7
 9377 00fe 0F33     		add	r3, r3, #15
 9378 0100 0022     		mov	r2, #0
 9379 0102 1A70     		strb	r2, [r3]
 9380              	.L412:
2358:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
2359:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   return bitstatus;
 9381              		.loc 1 2359 0
 9382 0104 3B1C     		mov	r3, r7
 9383 0106 0F33     		add	r3, r3, #15
 9384 0108 1B78     		ldrb	r3, [r3]
2360:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 9385              		.loc 1 2360 0
 9386 010a 181C     		mov	r0, r3
 9387 010c BD46     		mov	sp, r7
 9388 010e 04B0     		add	sp, sp, #16
 9389              		@ sp needed
 9390 0110 80BD     		pop	{r7, pc}
 9391              	.L415:
 9392 0112 C046     		.align	2
 9393              	.L414:
 9394 0114 002C0140 		.word	1073818624
 9395 0118 00040040 		.word	1073742848
 9396 011c 00100040 		.word	1073745920
 9397 0120 00200040 		.word	1073750016
 9398 0124 00400140 		.word	1073823744
 9399 0128 00440140 		.word	1073824768
 9400 012c 00480140 		.word	1073825792
 9401 0130 00000000 		.word	.LC0
 9402 0134 2C090000 		.word	2348
 9403 0138 2D090000 		.word	2349
 9404              		.cfi_endproc
 9405              	.LFE101:
 9407              		.section	.text.TIM_ClearFlag,"ax",%progbits
 9408              		.align	2
 9409              		.global	TIM_ClearFlag
 9410              		.code	16
 9411              		.thumb_func
 9413              	TIM_ClearFlag:
 9414              	.LFB102:
2361:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2362:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2363:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Clears the TIMx's pending flags.
2364:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 6, 14, 15, 16 or 17 to select the TIM peripheral.
2365:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_FLAG: specifies the flag bit to clear.
2366:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be any combination of the following values:
2367:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_FLAG_Update: TIM update Flag
2368:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2369:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2370:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2371:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2372:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_FLAG_COM: TIM Commutation Flag
2373:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_FLAG_Trigger: TIM Trigger Flag
2374:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_FLAG_Break: TIM Break Flag
2375:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 overcapture Flag
2376:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 overcapture Flag
2377:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 overcapture Flag
2378:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 overcapture Flag
2379:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @note
2380:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   - TIM6 can have only one update flag. 
2381:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   - TIM15 can have only TIM_FLAG_Update, TIM_FLAG_CC1,TIM_FLAG_CC2 or 
2382:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     TIM_FLAG_Trigger. 
2383:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   - TIM14, TIM16 and TIM17 can have TIM_FLAG_Update or TIM_FLAG_CC1.   
2384:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   - TIM_FLAG_Break is used only with TIM1 and TIM15. 
2385:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   - TIM_FLAG_COM is used only with TIM1, TIM15, TIM16 and TIM17.
2386:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
2387:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2388:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_ClearFlag(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2389:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {  
 9415              		.loc 1 2389 0
 9416              		.cfi_startproc
 9417 0000 80B5     		push	{r7, lr}
 9418              		.cfi_def_cfa_offset 8
 9419              		.cfi_offset 7, -8
 9420              		.cfi_offset 14, -4
 9421 0002 82B0     		sub	sp, sp, #8
 9422              		.cfi_def_cfa_offset 16
 9423 0004 00AF     		add	r7, sp, #0
 9424              		.cfi_def_cfa_register 7
 9425 0006 7860     		str	r0, [r7, #4]
 9426 0008 0A1C     		mov	r2, r1
 9427 000a BB1C     		add	r3, r7, #2
 9428 000c 1A80     		strh	r2, [r3]
2390:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2391:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 9429              		.loc 1 2391 0
 9430 000e 7A68     		ldr	r2, [r7, #4]
 9431 0010 1F4B     		ldr	r3, .L420
 9432 0012 9A42     		cmp	r2, r3
 9433 0014 22D0     		beq	.L417
 9434              		.loc 1 2391 0 is_stmt 0 discriminator 1
 9435 0016 7A68     		ldr	r2, [r7, #4]
 9436 0018 8023     		mov	r3, #128
 9437 001a DB05     		lsl	r3, r3, #23
 9438 001c 9A42     		cmp	r2, r3
 9439 001e 1DD0     		beq	.L417
 9440 0020 7A68     		ldr	r2, [r7, #4]
 9441 0022 1C4B     		ldr	r3, .L420+4
 9442 0024 9A42     		cmp	r2, r3
 9443 0026 19D0     		beq	.L417
 9444 0028 7A68     		ldr	r2, [r7, #4]
 9445 002a 1B4B     		ldr	r3, .L420+8
 9446 002c 9A42     		cmp	r2, r3
 9447 002e 15D0     		beq	.L417
 9448 0030 7A68     		ldr	r2, [r7, #4]
 9449 0032 1A4B     		ldr	r3, .L420+12
 9450 0034 9A42     		cmp	r2, r3
 9451 0036 11D0     		beq	.L417
 9452 0038 7A68     		ldr	r2, [r7, #4]
 9453 003a 194B     		ldr	r3, .L420+16
 9454 003c 9A42     		cmp	r2, r3
 9455 003e 0DD0     		beq	.L417
 9456 0040 7A68     		ldr	r2, [r7, #4]
 9457 0042 184B     		ldr	r3, .L420+20
 9458 0044 9A42     		cmp	r2, r3
 9459 0046 09D0     		beq	.L417
 9460 0048 7A68     		ldr	r2, [r7, #4]
 9461 004a 174B     		ldr	r3, .L420+24
 9462 004c 9A42     		cmp	r2, r3
 9463 004e 05D0     		beq	.L417
 9464 0050 164A     		ldr	r2, .L420+28
 9465 0052 174B     		ldr	r3, .L420+32
 9466 0054 101C     		mov	r0, r2
 9467 0056 191C     		mov	r1, r3
 9468 0058 FFF7FEFF 		bl	assert_failed
 9469              	.L417:
2392:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_CLEAR_FLAG(TIM_FLAG));
 9470              		.loc 1 2392 0 is_stmt 1
 9471 005c BB1C     		add	r3, r7, #2
 9472 005e 1A88     		ldrh	r2, [r3]
 9473 0060 E123     		mov	r3, #225
 9474 0062 1B02     		lsl	r3, r3, #8
 9475 0064 1340     		and	r3, r2
 9476 0066 03D1     		bne	.L418
 9477              		.loc 1 2392 0 is_stmt 0 discriminator 2
 9478 0068 BB1C     		add	r3, r7, #2
 9479 006a 1B88     		ldrh	r3, [r3]
 9480 006c 002B     		cmp	r3, #0
 9481 006e 05D1     		bne	.L419
 9482              	.L418:
 9483              		.loc 1 2392 0 discriminator 1
 9484 0070 0E4A     		ldr	r2, .L420+28
 9485 0072 104B     		ldr	r3, .L420+36
 9486 0074 101C     		mov	r0, r2
 9487 0076 191C     		mov	r1, r3
 9488 0078 FFF7FEFF 		bl	assert_failed
 9489              	.L419:
2393:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****    
2394:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Clear the flags */
2395:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_FLAG;
 9490              		.loc 1 2395 0 is_stmt 1
 9491 007c BB1C     		add	r3, r7, #2
 9492 007e 1B88     		ldrh	r3, [r3]
 9493 0080 DB43     		mvn	r3, r3
 9494 0082 9AB2     		uxth	r2, r3
 9495 0084 7B68     		ldr	r3, [r7, #4]
 9496 0086 1A82     		strh	r2, [r3, #16]
2396:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 9497              		.loc 1 2396 0
 9498 0088 BD46     		mov	sp, r7
 9499 008a 02B0     		add	sp, sp, #8
 9500              		@ sp needed
 9501 008c 80BD     		pop	{r7, pc}
 9502              	.L421:
 9503 008e C046     		.align	2
 9504              	.L420:
 9505 0090 002C0140 		.word	1073818624
 9506 0094 00040040 		.word	1073742848
 9507 0098 00100040 		.word	1073745920
 9508 009c 00200040 		.word	1073750016
 9509 00a0 00400140 		.word	1073823744
 9510 00a4 00440140 		.word	1073824768
 9511 00a8 00480140 		.word	1073825792
 9512 00ac 00000000 		.word	.LC0
 9513 00b0 57090000 		.word	2391
 9514 00b4 58090000 		.word	2392
 9515              		.cfi_endproc
 9516              	.LFE102:
 9518              		.section	.text.TIM_GetITStatus,"ax",%progbits
 9519              		.align	2
 9520              		.global	TIM_GetITStatus
 9521              		.code	16
 9522              		.thumb_func
 9524              	TIM_GetITStatus:
 9525              	.LFB103:
2397:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2398:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2399:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Checks whether the TIM interrupt has occurred or not.
2400:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 6, 14, 15, 16 or 17 to select the TIM peripheral.
2401:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupt source to check.
2402:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
2403:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_IT_Update: TIM update Interrupt source
2404:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2405:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2406:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2407:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2408:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_IT_COM: TIM Commutation Interrupt source
2409:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2410:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_IT_Break: TIM Break Interrupt source
2411:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @note
2412:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   - TIM6 can generate only an update interrupt.
2413:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   - TIM15 can have only TIM_IT_Update, TIM_IT_CC1, TIM_IT_CC2 or TIM_IT_Trigger. 
2414:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   - TIM14, TIM16 and TIM17 can have TIM_IT_Update or TIM_IT_CC1.   
2415:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   - TIM_IT_Break is used only with TIM1 and TIM15. 
2416:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   - TIM_IT_COM is used only with TIM1, TIM15, TIM16 and TIM17.
2417:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval The new state of the TIM_IT(SET or RESET).
2418:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2419:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** ITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2420:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 9526              		.loc 1 2420 0
 9527              		.cfi_startproc
 9528 0000 80B5     		push	{r7, lr}
 9529              		.cfi_def_cfa_offset 8
 9530              		.cfi_offset 7, -8
 9531              		.cfi_offset 14, -4
 9532 0002 84B0     		sub	sp, sp, #16
 9533              		.cfi_def_cfa_offset 24
 9534 0004 00AF     		add	r7, sp, #0
 9535              		.cfi_def_cfa_register 7
 9536 0006 7860     		str	r0, [r7, #4]
 9537 0008 0A1C     		mov	r2, r1
 9538 000a BB1C     		add	r3, r7, #2
 9539 000c 1A80     		strh	r2, [r3]
2421:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   ITStatus bitstatus = RESET;  
 9540              		.loc 1 2421 0
 9541 000e 3B1C     		mov	r3, r7
 9542 0010 0F33     		add	r3, r3, #15
 9543 0012 0022     		mov	r2, #0
 9544 0014 1A70     		strb	r2, [r3]
2422:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t itstatus = 0x0, itenable = 0x0;
 9545              		.loc 1 2422 0
 9546 0016 3B1C     		mov	r3, r7
 9547 0018 0C33     		add	r3, r3, #12
 9548 001a 0022     		mov	r2, #0
 9549 001c 1A80     		strh	r2, [r3]
 9550 001e 3B1C     		mov	r3, r7
 9551 0020 0A33     		add	r3, r3, #10
 9552 0022 0022     		mov	r2, #0
 9553 0024 1A80     		strh	r2, [r3]
2423:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
2424:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2425:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 9554              		.loc 1 2425 0
 9555 0026 7A68     		ldr	r2, [r7, #4]
 9556 0028 3B4B     		ldr	r3, .L428
 9557 002a 9A42     		cmp	r2, r3
 9558 002c 22D0     		beq	.L423
 9559              		.loc 1 2425 0 is_stmt 0 discriminator 1
 9560 002e 7A68     		ldr	r2, [r7, #4]
 9561 0030 8023     		mov	r3, #128
 9562 0032 DB05     		lsl	r3, r3, #23
 9563 0034 9A42     		cmp	r2, r3
 9564 0036 1DD0     		beq	.L423
 9565 0038 7A68     		ldr	r2, [r7, #4]
 9566 003a 384B     		ldr	r3, .L428+4
 9567 003c 9A42     		cmp	r2, r3
 9568 003e 19D0     		beq	.L423
 9569 0040 7A68     		ldr	r2, [r7, #4]
 9570 0042 374B     		ldr	r3, .L428+8
 9571 0044 9A42     		cmp	r2, r3
 9572 0046 15D0     		beq	.L423
 9573 0048 7A68     		ldr	r2, [r7, #4]
 9574 004a 364B     		ldr	r3, .L428+12
 9575 004c 9A42     		cmp	r2, r3
 9576 004e 11D0     		beq	.L423
 9577 0050 7A68     		ldr	r2, [r7, #4]
 9578 0052 354B     		ldr	r3, .L428+16
 9579 0054 9A42     		cmp	r2, r3
 9580 0056 0DD0     		beq	.L423
 9581 0058 7A68     		ldr	r2, [r7, #4]
 9582 005a 344B     		ldr	r3, .L428+20
 9583 005c 9A42     		cmp	r2, r3
 9584 005e 09D0     		beq	.L423
 9585 0060 7A68     		ldr	r2, [r7, #4]
 9586 0062 334B     		ldr	r3, .L428+24
 9587 0064 9A42     		cmp	r2, r3
 9588 0066 05D0     		beq	.L423
 9589 0068 324A     		ldr	r2, .L428+28
 9590 006a 334B     		ldr	r3, .L428+32
 9591 006c 101C     		mov	r0, r2
 9592 006e 191C     		mov	r1, r3
 9593 0070 FFF7FEFF 		bl	assert_failed
 9594              	.L423:
2426:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_GET_IT(TIM_IT));
 9595              		.loc 1 2426 0 is_stmt 1
 9596 0074 BB1C     		add	r3, r7, #2
 9597 0076 1B88     		ldrh	r3, [r3]
 9598 0078 012B     		cmp	r3, #1
 9599 007a 21D0     		beq	.L424
 9600              		.loc 1 2426 0 is_stmt 0 discriminator 1
 9601 007c BB1C     		add	r3, r7, #2
 9602 007e 1B88     		ldrh	r3, [r3]
 9603 0080 022B     		cmp	r3, #2
 9604 0082 1DD0     		beq	.L424
 9605 0084 BB1C     		add	r3, r7, #2
 9606 0086 1B88     		ldrh	r3, [r3]
 9607 0088 042B     		cmp	r3, #4
 9608 008a 19D0     		beq	.L424
 9609 008c BB1C     		add	r3, r7, #2
 9610 008e 1B88     		ldrh	r3, [r3]
 9611 0090 082B     		cmp	r3, #8
 9612 0092 15D0     		beq	.L424
 9613 0094 BB1C     		add	r3, r7, #2
 9614 0096 1B88     		ldrh	r3, [r3]
 9615 0098 102B     		cmp	r3, #16
 9616 009a 11D0     		beq	.L424
 9617 009c BB1C     		add	r3, r7, #2
 9618 009e 1B88     		ldrh	r3, [r3]
 9619 00a0 202B     		cmp	r3, #32
 9620 00a2 0DD0     		beq	.L424
 9621 00a4 BB1C     		add	r3, r7, #2
 9622 00a6 1B88     		ldrh	r3, [r3]
 9623 00a8 402B     		cmp	r3, #64
 9624 00aa 09D0     		beq	.L424
 9625 00ac BB1C     		add	r3, r7, #2
 9626 00ae 1B88     		ldrh	r3, [r3]
 9627 00b0 802B     		cmp	r3, #128
 9628 00b2 05D0     		beq	.L424
 9629 00b4 1F4A     		ldr	r2, .L428+28
 9630 00b6 214B     		ldr	r3, .L428+36
 9631 00b8 101C     		mov	r0, r2
 9632 00ba 191C     		mov	r1, r3
 9633 00bc FFF7FEFF 		bl	assert_failed
 9634              	.L424:
2427:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****    
2428:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   itstatus = TIMx->SR & TIM_IT;
 9635              		.loc 1 2428 0 is_stmt 1
 9636 00c0 7B68     		ldr	r3, [r7, #4]
 9637 00c2 1B8A     		ldrh	r3, [r3, #16]
 9638 00c4 9AB2     		uxth	r2, r3
 9639 00c6 3B1C     		mov	r3, r7
 9640 00c8 0C33     		add	r3, r3, #12
 9641 00ca B91C     		add	r1, r7, #2
 9642 00cc 0988     		ldrh	r1, [r1]
 9643 00ce 0A40     		and	r2, r1
 9644 00d0 1A80     		strh	r2, [r3]
2429:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
2430:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   itenable = TIMx->DIER & TIM_IT;
 9645              		.loc 1 2430 0
 9646 00d2 7B68     		ldr	r3, [r7, #4]
 9647 00d4 9B89     		ldrh	r3, [r3, #12]
 9648 00d6 9AB2     		uxth	r2, r3
 9649 00d8 3B1C     		mov	r3, r7
 9650 00da 0A33     		add	r3, r3, #10
 9651 00dc B91C     		add	r1, r7, #2
 9652 00de 0988     		ldrh	r1, [r1]
 9653 00e0 0A40     		and	r2, r1
 9654 00e2 1A80     		strh	r2, [r3]
2431:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
 9655              		.loc 1 2431 0
 9656 00e4 3B1C     		mov	r3, r7
 9657 00e6 0C33     		add	r3, r3, #12
 9658 00e8 1B88     		ldrh	r3, [r3]
 9659 00ea 002B     		cmp	r3, #0
 9660 00ec 09D0     		beq	.L425
 9661              		.loc 1 2431 0 is_stmt 0 discriminator 1
 9662 00ee 3B1C     		mov	r3, r7
 9663 00f0 0A33     		add	r3, r3, #10
 9664 00f2 1B88     		ldrh	r3, [r3]
 9665 00f4 002B     		cmp	r3, #0
 9666 00f6 04D0     		beq	.L425
2432:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
2433:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     bitstatus = SET;
 9667              		.loc 1 2433 0 is_stmt 1
 9668 00f8 3B1C     		mov	r3, r7
 9669 00fa 0F33     		add	r3, r3, #15
 9670 00fc 0122     		mov	r2, #1
 9671 00fe 1A70     		strb	r2, [r3]
 9672 0100 03E0     		b	.L426
 9673              	.L425:
2434:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
2435:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   else
2436:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
2437:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     bitstatus = RESET;
 9674              		.loc 1 2437 0
 9675 0102 3B1C     		mov	r3, r7
 9676 0104 0F33     		add	r3, r3, #15
 9677 0106 0022     		mov	r2, #0
 9678 0108 1A70     		strb	r2, [r3]
 9679              	.L426:
2438:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
2439:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   return bitstatus;
 9680              		.loc 1 2439 0
 9681 010a 3B1C     		mov	r3, r7
 9682 010c 0F33     		add	r3, r3, #15
 9683 010e 1B78     		ldrb	r3, [r3]
2440:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 9684              		.loc 1 2440 0
 9685 0110 181C     		mov	r0, r3
 9686 0112 BD46     		mov	sp, r7
 9687 0114 04B0     		add	sp, sp, #16
 9688              		@ sp needed
 9689 0116 80BD     		pop	{r7, pc}
 9690              	.L429:
 9691              		.align	2
 9692              	.L428:
 9693 0118 002C0140 		.word	1073818624
 9694 011c 00040040 		.word	1073742848
 9695 0120 00100040 		.word	1073745920
 9696 0124 00200040 		.word	1073750016
 9697 0128 00400140 		.word	1073823744
 9698 012c 00440140 		.word	1073824768
 9699 0130 00480140 		.word	1073825792
 9700 0134 00000000 		.word	.LC0
 9701 0138 79090000 		.word	2425
 9702 013c 7A090000 		.word	2426
 9703              		.cfi_endproc
 9704              	.LFE103:
 9706              		.section	.text.TIM_ClearITPendingBit,"ax",%progbits
 9707              		.align	2
 9708              		.global	TIM_ClearITPendingBit
 9709              		.code	16
 9710              		.thumb_func
 9712              	TIM_ClearITPendingBit:
 9713              	.LFB104:
2441:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2442:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2443:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Clears the TIMx's interrupt pending bits.
2444:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 6, 14, 15, 16 or 17 to select the TIM peripheral.
2445:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_IT: specifies the pending bit to clear.
2446:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be any combination of the following values:
2447:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_IT_Update: TIM1 update Interrupt source
2448:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2449:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2450:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2451:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2452:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_IT_COM: TIM Commutation Interrupt source
2453:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2454:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_IT_Break: TIM Break Interrupt source
2455:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @note
2456:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   - TIM6 can generate only an update interrupt.
2457:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   - TIM15 can have only TIM_IT_Update, TIM_IT_CC1, TIM_IT_CC2 or TIM_IT_Trigger. 
2458:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   - TIM14, TIM16 and TIM17 can have TIM_IT_Update or TIM_IT_CC1.   
2459:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   - TIM_IT_Break is used only with TIM1 and TIM15. 
2460:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   - TIM_IT_COM is used only with TIM1, TIM15, TIM16 and TIM17.
2461:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
2462:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2463:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2464:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 9714              		.loc 1 2464 0
 9715              		.cfi_startproc
 9716 0000 80B5     		push	{r7, lr}
 9717              		.cfi_def_cfa_offset 8
 9718              		.cfi_offset 7, -8
 9719              		.cfi_offset 14, -4
 9720 0002 82B0     		sub	sp, sp, #8
 9721              		.cfi_def_cfa_offset 16
 9722 0004 00AF     		add	r7, sp, #0
 9723              		.cfi_def_cfa_register 7
 9724 0006 7860     		str	r0, [r7, #4]
 9725 0008 0A1C     		mov	r2, r1
 9726 000a BB1C     		add	r3, r7, #2
 9727 000c 1A80     		strh	r2, [r3]
2465:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2466:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 9728              		.loc 1 2466 0
 9729 000e 7A68     		ldr	r2, [r7, #4]
 9730 0010 1F4B     		ldr	r3, .L434
 9731 0012 9A42     		cmp	r2, r3
 9732 0014 22D0     		beq	.L431
 9733              		.loc 1 2466 0 is_stmt 0 discriminator 1
 9734 0016 7A68     		ldr	r2, [r7, #4]
 9735 0018 8023     		mov	r3, #128
 9736 001a DB05     		lsl	r3, r3, #23
 9737 001c 9A42     		cmp	r2, r3
 9738 001e 1DD0     		beq	.L431
 9739 0020 7A68     		ldr	r2, [r7, #4]
 9740 0022 1C4B     		ldr	r3, .L434+4
 9741 0024 9A42     		cmp	r2, r3
 9742 0026 19D0     		beq	.L431
 9743 0028 7A68     		ldr	r2, [r7, #4]
 9744 002a 1B4B     		ldr	r3, .L434+8
 9745 002c 9A42     		cmp	r2, r3
 9746 002e 15D0     		beq	.L431
 9747 0030 7A68     		ldr	r2, [r7, #4]
 9748 0032 1A4B     		ldr	r3, .L434+12
 9749 0034 9A42     		cmp	r2, r3
 9750 0036 11D0     		beq	.L431
 9751 0038 7A68     		ldr	r2, [r7, #4]
 9752 003a 194B     		ldr	r3, .L434+16
 9753 003c 9A42     		cmp	r2, r3
 9754 003e 0DD0     		beq	.L431
 9755 0040 7A68     		ldr	r2, [r7, #4]
 9756 0042 184B     		ldr	r3, .L434+20
 9757 0044 9A42     		cmp	r2, r3
 9758 0046 09D0     		beq	.L431
 9759 0048 7A68     		ldr	r2, [r7, #4]
 9760 004a 174B     		ldr	r3, .L434+24
 9761 004c 9A42     		cmp	r2, r3
 9762 004e 05D0     		beq	.L431
 9763 0050 164A     		ldr	r2, .L434+28
 9764 0052 174B     		ldr	r3, .L434+32
 9765 0054 101C     		mov	r0, r2
 9766 0056 191C     		mov	r1, r3
 9767 0058 FFF7FEFF 		bl	assert_failed
 9768              	.L431:
2467:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
 9769              		.loc 1 2467 0 is_stmt 1
 9770 005c BB1C     		add	r3, r7, #2
 9771 005e 1A88     		ldrh	r2, [r3]
 9772 0060 FF23     		mov	r3, #255
 9773 0062 1B02     		lsl	r3, r3, #8
 9774 0064 1340     		and	r3, r2
 9775 0066 03D1     		bne	.L432
 9776              		.loc 1 2467 0 is_stmt 0 discriminator 2
 9777 0068 BB1C     		add	r3, r7, #2
 9778 006a 1B88     		ldrh	r3, [r3]
 9779 006c 002B     		cmp	r3, #0
 9780 006e 05D1     		bne	.L433
 9781              	.L432:
 9782              		.loc 1 2467 0 discriminator 1
 9783 0070 0E4A     		ldr	r2, .L434+28
 9784 0072 104B     		ldr	r3, .L434+36
 9785 0074 101C     		mov	r0, r2
 9786 0076 191C     		mov	r1, r3
 9787 0078 FFF7FEFF 		bl	assert_failed
 9788              	.L433:
2468:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****    
2469:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Clear the IT pending Bit */
2470:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_IT;
 9789              		.loc 1 2470 0 is_stmt 1
 9790 007c BB1C     		add	r3, r7, #2
 9791 007e 1B88     		ldrh	r3, [r3]
 9792 0080 DB43     		mvn	r3, r3
 9793 0082 9AB2     		uxth	r2, r3
 9794 0084 7B68     		ldr	r3, [r7, #4]
 9795 0086 1A82     		strh	r2, [r3, #16]
2471:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 9796              		.loc 1 2471 0
 9797 0088 BD46     		mov	sp, r7
 9798 008a 02B0     		add	sp, sp, #8
 9799              		@ sp needed
 9800 008c 80BD     		pop	{r7, pc}
 9801              	.L435:
 9802 008e C046     		.align	2
 9803              	.L434:
 9804 0090 002C0140 		.word	1073818624
 9805 0094 00040040 		.word	1073742848
 9806 0098 00100040 		.word	1073745920
 9807 009c 00200040 		.word	1073750016
 9808 00a0 00400140 		.word	1073823744
 9809 00a4 00440140 		.word	1073824768
 9810 00a8 00480140 		.word	1073825792
 9811 00ac 00000000 		.word	.LC0
 9812 00b0 A2090000 		.word	2466
 9813 00b4 A3090000 		.word	2467
 9814              		.cfi_endproc
 9815              	.LFE104:
 9817              		.section	.text.TIM_DMAConfig,"ax",%progbits
 9818              		.align	2
 9819              		.global	TIM_DMAConfig
 9820              		.code	16
 9821              		.thumb_func
 9823              	TIM_DMAConfig:
 9824              	.LFB105:
2472:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2473:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2474:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Configures the TIMx's DMA interface.
2475:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 15, 16 or 17  to select the TIM peripheral.
2476:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_DMABase: DMA Base address.
2477:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
2478:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_DMABase_CR1, TIM_DMABase_CR2, TIM_DMABase_SMCR,
2479:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *          TIM_DMABase_DIER, TIM_DMABase_SR, TIM_DMABase_EGR,
2480:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *          TIM_DMABase_CCMR1, TIM_DMABase_CCMR2, TIM_DMABase_CCER,
2481:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *          TIM_DMABase_CNT, TIM_DMABase_PSC, TIM_DMABase_ARR,
2482:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *          TIM_DMABase_CCR1, TIM_DMABase_CCR2, TIM_DMABase_CCR3, 
2483:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *          TIM_DMABase_CCR4, TIM_DMABase_DCR, TIM_DMABase_OR.
2484:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_DMABurstLength: DMA Burst length.
2485:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one value between:
2486:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   TIM_DMABurstLength_1Transfer and TIM_DMABurstLength_18Transfers.
2487:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
2488:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2489:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_DMAConfig(TIM_TypeDef* TIMx, uint16_t TIM_DMABase, uint16_t TIM_DMABurstLength)
2490:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 9825              		.loc 1 2490 0
 9826              		.cfi_startproc
 9827 0000 80B5     		push	{r7, lr}
 9828              		.cfi_def_cfa_offset 8
 9829              		.cfi_offset 7, -8
 9830              		.cfi_offset 14, -4
 9831 0002 82B0     		sub	sp, sp, #8
 9832              		.cfi_def_cfa_offset 16
 9833 0004 00AF     		add	r7, sp, #0
 9834              		.cfi_def_cfa_register 7
 9835 0006 7860     		str	r0, [r7, #4]
 9836 0008 BB1C     		add	r3, r7, #2
 9837 000a 1980     		strh	r1, [r3]
 9838 000c 3B1C     		mov	r3, r7
 9839 000e 1A80     		strh	r2, [r3]
2491:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2492:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
 9840              		.loc 1 2492 0
 9841 0010 7A68     		ldr	r2, [r7, #4]
 9842 0012 7D4B     		ldr	r3, .L440
 9843 0014 9A42     		cmp	r2, r3
 9844 0016 1ED0     		beq	.L437
 9845              		.loc 1 2492 0 is_stmt 0 discriminator 1
 9846 0018 7A68     		ldr	r2, [r7, #4]
 9847 001a 8023     		mov	r3, #128
 9848 001c DB05     		lsl	r3, r3, #23
 9849 001e 9A42     		cmp	r2, r3
 9850 0020 19D0     		beq	.L437
 9851 0022 7A68     		ldr	r2, [r7, #4]
 9852 0024 794B     		ldr	r3, .L440+4
 9853 0026 9A42     		cmp	r2, r3
 9854 0028 15D0     		beq	.L437
 9855 002a 7A68     		ldr	r2, [r7, #4]
 9856 002c 784B     		ldr	r3, .L440+8
 9857 002e 9A42     		cmp	r2, r3
 9858 0030 11D0     		beq	.L437
 9859 0032 7A68     		ldr	r2, [r7, #4]
 9860 0034 774B     		ldr	r3, .L440+12
 9861 0036 9A42     		cmp	r2, r3
 9862 0038 0DD0     		beq	.L437
 9863 003a 7A68     		ldr	r2, [r7, #4]
 9864 003c 764B     		ldr	r3, .L440+16
 9865 003e 9A42     		cmp	r2, r3
 9866 0040 09D0     		beq	.L437
 9867 0042 7A68     		ldr	r2, [r7, #4]
 9868 0044 754B     		ldr	r3, .L440+20
 9869 0046 9A42     		cmp	r2, r3
 9870 0048 05D0     		beq	.L437
 9871 004a 754A     		ldr	r2, .L440+24
 9872 004c 754B     		ldr	r3, .L440+28
 9873 004e 101C     		mov	r0, r2
 9874 0050 191C     		mov	r1, r3
 9875 0052 FFF7FEFF 		bl	assert_failed
 9876              	.L437:
2493:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_DMA_BASE(TIM_DMABase)); 
 9877              		.loc 1 2493 0 is_stmt 1
 9878 0056 BB1C     		add	r3, r7, #2
 9879 0058 1B88     		ldrh	r3, [r3]
 9880 005a 002B     		cmp	r3, #0
 9881 005c 00D1     		bne	.LCB9133
 9882 005e 52E0     		b	.L438	@long jump
 9883              	.LCB9133:
 9884              		.loc 1 2493 0 is_stmt 0 discriminator 1
 9885 0060 BB1C     		add	r3, r7, #2
 9886 0062 1B88     		ldrh	r3, [r3]
 9887 0064 012B     		cmp	r3, #1
 9888 0066 00D1     		bne	.LCB9137
 9889 0068 4DE0     		b	.L438	@long jump
 9890              	.LCB9137:
 9891 006a BB1C     		add	r3, r7, #2
 9892 006c 1B88     		ldrh	r3, [r3]
 9893 006e 022B     		cmp	r3, #2
 9894 0070 49D0     		beq	.L438
 9895 0072 BB1C     		add	r3, r7, #2
 9896 0074 1B88     		ldrh	r3, [r3]
 9897 0076 032B     		cmp	r3, #3
 9898 0078 45D0     		beq	.L438
 9899 007a BB1C     		add	r3, r7, #2
 9900 007c 1B88     		ldrh	r3, [r3]
 9901 007e 042B     		cmp	r3, #4
 9902 0080 41D0     		beq	.L438
 9903 0082 BB1C     		add	r3, r7, #2
 9904 0084 1B88     		ldrh	r3, [r3]
 9905 0086 052B     		cmp	r3, #5
 9906 0088 3DD0     		beq	.L438
 9907 008a BB1C     		add	r3, r7, #2
 9908 008c 1B88     		ldrh	r3, [r3]
 9909 008e 062B     		cmp	r3, #6
 9910 0090 39D0     		beq	.L438
 9911 0092 BB1C     		add	r3, r7, #2
 9912 0094 1B88     		ldrh	r3, [r3]
 9913 0096 072B     		cmp	r3, #7
 9914 0098 35D0     		beq	.L438
 9915 009a BB1C     		add	r3, r7, #2
 9916 009c 1B88     		ldrh	r3, [r3]
 9917 009e 082B     		cmp	r3, #8
 9918 00a0 31D0     		beq	.L438
 9919 00a2 BB1C     		add	r3, r7, #2
 9920 00a4 1B88     		ldrh	r3, [r3]
 9921 00a6 092B     		cmp	r3, #9
 9922 00a8 2DD0     		beq	.L438
 9923 00aa BB1C     		add	r3, r7, #2
 9924 00ac 1B88     		ldrh	r3, [r3]
 9925 00ae 0A2B     		cmp	r3, #10
 9926 00b0 29D0     		beq	.L438
 9927 00b2 BB1C     		add	r3, r7, #2
 9928 00b4 1B88     		ldrh	r3, [r3]
 9929 00b6 0B2B     		cmp	r3, #11
 9930 00b8 25D0     		beq	.L438
 9931 00ba BB1C     		add	r3, r7, #2
 9932 00bc 1B88     		ldrh	r3, [r3]
 9933 00be 0C2B     		cmp	r3, #12
 9934 00c0 21D0     		beq	.L438
 9935 00c2 BB1C     		add	r3, r7, #2
 9936 00c4 1B88     		ldrh	r3, [r3]
 9937 00c6 0D2B     		cmp	r3, #13
 9938 00c8 1DD0     		beq	.L438
 9939 00ca BB1C     		add	r3, r7, #2
 9940 00cc 1B88     		ldrh	r3, [r3]
 9941 00ce 0E2B     		cmp	r3, #14
 9942 00d0 19D0     		beq	.L438
 9943 00d2 BB1C     		add	r3, r7, #2
 9944 00d4 1B88     		ldrh	r3, [r3]
 9945 00d6 0F2B     		cmp	r3, #15
 9946 00d8 15D0     		beq	.L438
 9947 00da BB1C     		add	r3, r7, #2
 9948 00dc 1B88     		ldrh	r3, [r3]
 9949 00de 102B     		cmp	r3, #16
 9950 00e0 11D0     		beq	.L438
 9951 00e2 BB1C     		add	r3, r7, #2
 9952 00e4 1B88     		ldrh	r3, [r3]
 9953 00e6 112B     		cmp	r3, #17
 9954 00e8 0DD0     		beq	.L438
 9955 00ea BB1C     		add	r3, r7, #2
 9956 00ec 1B88     		ldrh	r3, [r3]
 9957 00ee 122B     		cmp	r3, #18
 9958 00f0 09D0     		beq	.L438
 9959 00f2 BB1C     		add	r3, r7, #2
 9960 00f4 1B88     		ldrh	r3, [r3]
 9961 00f6 132B     		cmp	r3, #19
 9962 00f8 05D0     		beq	.L438
 9963 00fa 494A     		ldr	r2, .L440+24
 9964 00fc 4A4B     		ldr	r3, .L440+32
 9965 00fe 101C     		mov	r0, r2
 9966 0100 191C     		mov	r1, r3
 9967 0102 FFF7FEFF 		bl	assert_failed
 9968              	.L438:
2494:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(TIM_DMABurstLength));
 9969              		.loc 1 2494 0 is_stmt 1
 9970 0106 3B1C     		mov	r3, r7
 9971 0108 1B88     		ldrh	r3, [r3]
 9972 010a 002B     		cmp	r3, #0
 9973 010c 00D1     		bne	.LCB9220
 9974 010e 6EE0     		b	.L439	@long jump
 9975              	.LCB9220:
 9976              		.loc 1 2494 0 is_stmt 0 discriminator 1
 9977 0110 3B1C     		mov	r3, r7
 9978 0112 1A88     		ldrh	r2, [r3]
 9979 0114 8023     		mov	r3, #128
 9980 0116 5B00     		lsl	r3, r3, #1
 9981 0118 9A42     		cmp	r2, r3
 9982 011a 00D1     		bne	.LCB9226
 9983 011c 67E0     		b	.L439	@long jump
 9984              	.LCB9226:
 9985 011e 3B1C     		mov	r3, r7
 9986 0120 1A88     		ldrh	r2, [r3]
 9987 0122 8023     		mov	r3, #128
 9988 0124 9B00     		lsl	r3, r3, #2
 9989 0126 9A42     		cmp	r2, r3
 9990 0128 00D1     		bne	.LCB9232
 9991 012a 60E0     		b	.L439	@long jump
 9992              	.LCB9232:
 9993 012c 3B1C     		mov	r3, r7
 9994 012e 1A88     		ldrh	r2, [r3]
 9995 0130 C023     		mov	r3, #192
 9996 0132 9B00     		lsl	r3, r3, #2
 9997 0134 9A42     		cmp	r2, r3
 9998 0136 00D1     		bne	.LCB9238
 9999 0138 59E0     		b	.L439	@long jump
 10000              	.LCB9238:
 10001 013a 3B1C     		mov	r3, r7
 10002 013c 1A88     		ldrh	r2, [r3]
 10003 013e 8023     		mov	r3, #128
 10004 0140 DB00     		lsl	r3, r3, #3
 10005 0142 9A42     		cmp	r2, r3
 10006 0144 53D0     		beq	.L439
 10007 0146 3B1C     		mov	r3, r7
 10008 0148 1A88     		ldrh	r2, [r3]
 10009 014a A023     		mov	r3, #160
 10010 014c DB00     		lsl	r3, r3, #3
 10011 014e 9A42     		cmp	r2, r3
 10012 0150 4DD0     		beq	.L439
 10013 0152 3B1C     		mov	r3, r7
 10014 0154 1A88     		ldrh	r2, [r3]
 10015 0156 C023     		mov	r3, #192
 10016 0158 DB00     		lsl	r3, r3, #3
 10017 015a 9A42     		cmp	r2, r3
 10018 015c 47D0     		beq	.L439
 10019 015e 3B1C     		mov	r3, r7
 10020 0160 1A88     		ldrh	r2, [r3]
 10021 0162 E023     		mov	r3, #224
 10022 0164 DB00     		lsl	r3, r3, #3
 10023 0166 9A42     		cmp	r2, r3
 10024 0168 41D0     		beq	.L439
 10025 016a 3B1C     		mov	r3, r7
 10026 016c 1A88     		ldrh	r2, [r3]
 10027 016e 8023     		mov	r3, #128
 10028 0170 1B01     		lsl	r3, r3, #4
 10029 0172 9A42     		cmp	r2, r3
 10030 0174 3BD0     		beq	.L439
 10031 0176 3B1C     		mov	r3, r7
 10032 0178 1A88     		ldrh	r2, [r3]
 10033 017a 9023     		mov	r3, #144
 10034 017c 1B01     		lsl	r3, r3, #4
 10035 017e 9A42     		cmp	r2, r3
 10036 0180 35D0     		beq	.L439
 10037 0182 3B1C     		mov	r3, r7
 10038 0184 1A88     		ldrh	r2, [r3]
 10039 0186 A023     		mov	r3, #160
 10040 0188 1B01     		lsl	r3, r3, #4
 10041 018a 9A42     		cmp	r2, r3
 10042 018c 2FD0     		beq	.L439
 10043 018e 3B1C     		mov	r3, r7
 10044 0190 1A88     		ldrh	r2, [r3]
 10045 0192 B023     		mov	r3, #176
 10046 0194 1B01     		lsl	r3, r3, #4
 10047 0196 9A42     		cmp	r2, r3
 10048 0198 29D0     		beq	.L439
 10049 019a 3B1C     		mov	r3, r7
 10050 019c 1A88     		ldrh	r2, [r3]
 10051 019e C023     		mov	r3, #192
 10052 01a0 1B01     		lsl	r3, r3, #4
 10053 01a2 9A42     		cmp	r2, r3
 10054 01a4 23D0     		beq	.L439
 10055 01a6 3B1C     		mov	r3, r7
 10056 01a8 1A88     		ldrh	r2, [r3]
 10057 01aa D023     		mov	r3, #208
 10058 01ac 1B01     		lsl	r3, r3, #4
 10059 01ae 9A42     		cmp	r2, r3
 10060 01b0 1DD0     		beq	.L439
 10061 01b2 3B1C     		mov	r3, r7
 10062 01b4 1A88     		ldrh	r2, [r3]
 10063 01b6 E023     		mov	r3, #224
 10064 01b8 1B01     		lsl	r3, r3, #4
 10065 01ba 9A42     		cmp	r2, r3
 10066 01bc 17D0     		beq	.L439
 10067 01be 3B1C     		mov	r3, r7
 10068 01c0 1A88     		ldrh	r2, [r3]
 10069 01c2 F023     		mov	r3, #240
 10070 01c4 1B01     		lsl	r3, r3, #4
 10071 01c6 9A42     		cmp	r2, r3
 10072 01c8 11D0     		beq	.L439
 10073 01ca 3B1C     		mov	r3, r7
 10074 01cc 1A88     		ldrh	r2, [r3]
 10075 01ce 8023     		mov	r3, #128
 10076 01d0 5B01     		lsl	r3, r3, #5
 10077 01d2 9A42     		cmp	r2, r3
 10078 01d4 0BD0     		beq	.L439
 10079 01d6 3B1C     		mov	r3, r7
 10080 01d8 1A88     		ldrh	r2, [r3]
 10081 01da 8823     		mov	r3, #136
 10082 01dc 5B01     		lsl	r3, r3, #5
 10083 01de 9A42     		cmp	r2, r3
 10084 01e0 05D0     		beq	.L439
 10085 01e2 0F4A     		ldr	r2, .L440+24
 10086 01e4 114B     		ldr	r3, .L440+36
 10087 01e6 101C     		mov	r0, r2
 10088 01e8 191C     		mov	r1, r3
 10089 01ea FFF7FEFF 		bl	assert_failed
 10090              	.L439:
2495:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the DMA Base and the DMA Burst Length */
2496:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->DCR = TIM_DMABase | TIM_DMABurstLength;
 10091              		.loc 1 2496 0 is_stmt 1
 10092 01ee BA1C     		add	r2, r7, #2
 10093 01f0 3B1C     		mov	r3, r7
 10094 01f2 1288     		ldrh	r2, [r2]
 10095 01f4 1B88     		ldrh	r3, [r3]
 10096 01f6 1343     		orr	r3, r2
 10097 01f8 99B2     		uxth	r1, r3
 10098 01fa 7A68     		ldr	r2, [r7, #4]
 10099 01fc 4823     		mov	r3, #72
 10100 01fe D152     		strh	r1, [r2, r3]
2497:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 10101              		.loc 1 2497 0
 10102 0200 BD46     		mov	sp, r7
 10103 0202 02B0     		add	sp, sp, #8
 10104              		@ sp needed
 10105 0204 80BD     		pop	{r7, pc}
 10106              	.L441:
 10107 0206 C046     		.align	2
 10108              	.L440:
 10109 0208 002C0140 		.word	1073818624
 10110 020c 00040040 		.word	1073742848
 10111 0210 00200040 		.word	1073750016
 10112 0214 00400140 		.word	1073823744
 10113 0218 00440140 		.word	1073824768
 10114 021c 00480140 		.word	1073825792
 10115 0220 00000000 		.word	.LC0
 10116 0224 BC090000 		.word	2492
 10117 0228 BD090000 		.word	2493
 10118 022c BE090000 		.word	2494
 10119              		.cfi_endproc
 10120              	.LFE105:
 10122              		.section	.text.TIM_DMACmd,"ax",%progbits
 10123              		.align	2
 10124              		.global	TIM_DMACmd
 10125              		.code	16
 10126              		.thumb_func
 10128              	TIM_DMACmd:
 10129              	.LFB106:
2498:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2499:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2500:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Enables or disables the TIMx's DMA Requests.
2501:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 6, 15, 16 or 17 to select the TIM peripheral. 
2502:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_DMASource: specifies the DMA Request sources.
2503:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be any combination of the following values:
2504:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_DMA_Update: TIM update Interrupt source
2505:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
2506:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
2507:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
2508:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
2509:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_DMA_COM: TIM Commutation DMA source
2510:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_DMA_Trigger: TIM Trigger DMA source
2511:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  NewState: new state of the DMA Request sources.
2512:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
2513:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
2514:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2515:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_DMACmd(TIM_TypeDef* TIMx, uint16_t TIM_DMASource, FunctionalState NewState)
2516:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** { 
 10130              		.loc 1 2516 0
 10131              		.cfi_startproc
 10132 0000 80B5     		push	{r7, lr}
 10133              		.cfi_def_cfa_offset 8
 10134              		.cfi_offset 7, -8
 10135              		.cfi_offset 14, -4
 10136 0002 82B0     		sub	sp, sp, #8
 10137              		.cfi_def_cfa_offset 16
 10138 0004 00AF     		add	r7, sp, #0
 10139              		.cfi_def_cfa_register 7
 10140 0006 7860     		str	r0, [r7, #4]
 10141 0008 BB1C     		add	r3, r7, #2
 10142 000a 1980     		strh	r1, [r3]
 10143 000c 7B1C     		add	r3, r7, #1
 10144 000e 1A70     		strb	r2, [r3]
2517:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2518:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST10_PERIPH(TIMx));
 10145              		.loc 1 2518 0
 10146 0010 7A68     		ldr	r2, [r7, #4]
 10147 0012 2D4B     		ldr	r3, .L449
 10148 0014 9A42     		cmp	r2, r3
 10149 0016 1ED0     		beq	.L443
 10150              		.loc 1 2518 0 is_stmt 0 discriminator 1
 10151 0018 7A68     		ldr	r2, [r7, #4]
 10152 001a 8023     		mov	r3, #128
 10153 001c DB05     		lsl	r3, r3, #23
 10154 001e 9A42     		cmp	r2, r3
 10155 0020 19D0     		beq	.L443
 10156 0022 7A68     		ldr	r2, [r7, #4]
 10157 0024 294B     		ldr	r3, .L449+4
 10158 0026 9A42     		cmp	r2, r3
 10159 0028 15D0     		beq	.L443
 10160 002a 7A68     		ldr	r2, [r7, #4]
 10161 002c 284B     		ldr	r3, .L449+8
 10162 002e 9A42     		cmp	r2, r3
 10163 0030 11D0     		beq	.L443
 10164 0032 7A68     		ldr	r2, [r7, #4]
 10165 0034 274B     		ldr	r3, .L449+12
 10166 0036 9A42     		cmp	r2, r3
 10167 0038 0DD0     		beq	.L443
 10168 003a 7A68     		ldr	r2, [r7, #4]
 10169 003c 264B     		ldr	r3, .L449+16
 10170 003e 9A42     		cmp	r2, r3
 10171 0040 09D0     		beq	.L443
 10172 0042 7A68     		ldr	r2, [r7, #4]
 10173 0044 254B     		ldr	r3, .L449+20
 10174 0046 9A42     		cmp	r2, r3
 10175 0048 05D0     		beq	.L443
 10176 004a 254A     		ldr	r2, .L449+24
 10177 004c 254B     		ldr	r3, .L449+28
 10178 004e 101C     		mov	r0, r2
 10179 0050 191C     		mov	r1, r3
 10180 0052 FFF7FEFF 		bl	assert_failed
 10181              	.L443:
2519:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(TIM_DMASource));
 10182              		.loc 1 2519 0 is_stmt 1
 10183 0056 BB1C     		add	r3, r7, #2
 10184 0058 1A88     		ldrh	r2, [r3]
 10185 005a 234B     		ldr	r3, .L449+32
 10186 005c 1340     		and	r3, r2
 10187 005e 03D1     		bne	.L444
 10188              		.loc 1 2519 0 is_stmt 0 discriminator 2
 10189 0060 BB1C     		add	r3, r7, #2
 10190 0062 1B88     		ldrh	r3, [r3]
 10191 0064 002B     		cmp	r3, #0
 10192 0066 05D1     		bne	.L445
 10193              	.L444:
 10194              		.loc 1 2519 0 discriminator 1
 10195 0068 1D4A     		ldr	r2, .L449+24
 10196 006a 204B     		ldr	r3, .L449+36
 10197 006c 101C     		mov	r0, r2
 10198 006e 191C     		mov	r1, r3
 10199 0070 FFF7FEFF 		bl	assert_failed
 10200              	.L445:
2520:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 10201              		.loc 1 2520 0 is_stmt 1
 10202 0074 7B1C     		add	r3, r7, #1
 10203 0076 1B78     		ldrb	r3, [r3]
 10204 0078 002B     		cmp	r3, #0
 10205 007a 09D0     		beq	.L446
 10206              		.loc 1 2520 0 is_stmt 0 discriminator 1
 10207 007c 7B1C     		add	r3, r7, #1
 10208 007e 1B78     		ldrb	r3, [r3]
 10209 0080 012B     		cmp	r3, #1
 10210 0082 05D0     		beq	.L446
 10211 0084 164A     		ldr	r2, .L449+24
 10212 0086 1A4B     		ldr	r3, .L449+40
 10213 0088 101C     		mov	r0, r2
 10214 008a 191C     		mov	r1, r3
 10215 008c FFF7FEFF 		bl	assert_failed
 10216              	.L446:
2521:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
2522:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   if (NewState != DISABLE)
 10217              		.loc 1 2522 0 is_stmt 1
 10218 0090 7B1C     		add	r3, r7, #1
 10219 0092 1B78     		ldrb	r3, [r3]
 10220 0094 002B     		cmp	r3, #0
 10221 0096 09D0     		beq	.L447
2523:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
2524:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Enable the DMA sources */
2525:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIMx->DIER |= TIM_DMASource; 
 10222              		.loc 1 2525 0
 10223 0098 7B68     		ldr	r3, [r7, #4]
 10224 009a 9B89     		ldrh	r3, [r3, #12]
 10225 009c 9AB2     		uxth	r2, r3
 10226 009e BB1C     		add	r3, r7, #2
 10227 00a0 1B88     		ldrh	r3, [r3]
 10228 00a2 1343     		orr	r3, r2
 10229 00a4 9AB2     		uxth	r2, r3
 10230 00a6 7B68     		ldr	r3, [r7, #4]
 10231 00a8 9A81     		strh	r2, [r3, #12]
 10232 00aa 0AE0     		b	.L442
 10233              	.L447:
2526:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
2527:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   else
2528:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
2529:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Disable the DMA sources */
2530:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_DMASource;
 10234              		.loc 1 2530 0
 10235 00ac 7B68     		ldr	r3, [r7, #4]
 10236 00ae 9B89     		ldrh	r3, [r3, #12]
 10237 00b0 9BB2     		uxth	r3, r3
 10238 00b2 BA1C     		add	r2, r7, #2
 10239 00b4 1288     		ldrh	r2, [r2]
 10240 00b6 D243     		mvn	r2, r2
 10241 00b8 92B2     		uxth	r2, r2
 10242 00ba 1340     		and	r3, r2
 10243 00bc 9AB2     		uxth	r2, r3
 10244 00be 7B68     		ldr	r3, [r7, #4]
 10245 00c0 9A81     		strh	r2, [r3, #12]
 10246              	.L442:
2531:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
2532:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 10247              		.loc 1 2532 0
 10248 00c2 BD46     		mov	sp, r7
 10249 00c4 02B0     		add	sp, sp, #8
 10250              		@ sp needed
 10251 00c6 80BD     		pop	{r7, pc}
 10252              	.L450:
 10253              		.align	2
 10254              	.L449:
 10255 00c8 002C0140 		.word	1073818624
 10256 00cc 00040040 		.word	1073742848
 10257 00d0 00100040 		.word	1073745920
 10258 00d4 00400140 		.word	1073823744
 10259 00d8 00440140 		.word	1073824768
 10260 00dc 00480140 		.word	1073825792
 10261 00e0 00000000 		.word	.LC0
 10262 00e4 D6090000 		.word	2518
 10263 00e8 FF800000 		.word	33023
 10264 00ec D7090000 		.word	2519
 10265 00f0 D8090000 		.word	2520
 10266              		.cfi_endproc
 10267              	.LFE106:
 10269              		.section	.text.TIM_SelectCCDMA,"ax",%progbits
 10270              		.align	2
 10271              		.global	TIM_SelectCCDMA
 10272              		.code	16
 10273              		.thumb_func
 10275              	TIM_SelectCCDMA:
 10276              	.LFB107:
2533:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2534:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2535:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Selects the TIMx peripheral Capture Compare DMA source.
2536:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 15, 16 or 17  to select the TIM peripheral.
2537:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  NewState: new state of the Capture Compare DMA source
2538:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
2539:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
2540:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2541:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_SelectCCDMA(TIM_TypeDef* TIMx, FunctionalState NewState)
2542:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 10277              		.loc 1 2542 0
 10278              		.cfi_startproc
 10279 0000 80B5     		push	{r7, lr}
 10280              		.cfi_def_cfa_offset 8
 10281              		.cfi_offset 7, -8
 10282              		.cfi_offset 14, -4
 10283 0002 82B0     		sub	sp, sp, #8
 10284              		.cfi_def_cfa_offset 16
 10285 0004 00AF     		add	r7, sp, #0
 10286              		.cfi_def_cfa_register 7
 10287 0006 7860     		str	r0, [r7, #4]
 10288 0008 0A1C     		mov	r2, r1
 10289 000a FB1C     		add	r3, r7, #3
 10290 000c 1A70     		strb	r2, [r3]
2543:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2544:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx));
 10291              		.loc 1 2544 0
 10292 000e 7A68     		ldr	r2, [r7, #4]
 10293 0010 224B     		ldr	r3, .L456
 10294 0012 9A42     		cmp	r2, r3
 10295 0014 1BD0     		beq	.L452
 10296              		.loc 1 2544 0 is_stmt 0 discriminator 1
 10297 0016 7A68     		ldr	r2, [r7, #4]
 10298 0018 8023     		mov	r3, #128
 10299 001a DB05     		lsl	r3, r3, #23
 10300 001c 9A42     		cmp	r2, r3
 10301 001e 16D0     		beq	.L452
 10302 0020 7A68     		ldr	r2, [r7, #4]
 10303 0022 1F4B     		ldr	r3, .L456+4
 10304 0024 9A42     		cmp	r2, r3
 10305 0026 12D0     		beq	.L452
 10306 0028 7A68     		ldr	r2, [r7, #4]
 10307 002a 1E4B     		ldr	r3, .L456+8
 10308 002c 9A42     		cmp	r2, r3
 10309 002e 0ED0     		beq	.L452
 10310 0030 7A68     		ldr	r2, [r7, #4]
 10311 0032 1D4B     		ldr	r3, .L456+12
 10312 0034 9A42     		cmp	r2, r3
 10313 0036 0AD0     		beq	.L452
 10314 0038 7A68     		ldr	r2, [r7, #4]
 10315 003a 1C4B     		ldr	r3, .L456+16
 10316 003c 9A42     		cmp	r2, r3
 10317 003e 06D0     		beq	.L452
 10318 0040 1B4A     		ldr	r2, .L456+20
 10319 0042 9F23     		mov	r3, #159
 10320 0044 1B01     		lsl	r3, r3, #4
 10321 0046 101C     		mov	r0, r2
 10322 0048 191C     		mov	r1, r3
 10323 004a FFF7FEFF 		bl	assert_failed
 10324              	.L452:
2545:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 10325              		.loc 1 2545 0 is_stmt 1
 10326 004e FB1C     		add	r3, r7, #3
 10327 0050 1B78     		ldrb	r3, [r3]
 10328 0052 002B     		cmp	r3, #0
 10329 0054 09D0     		beq	.L453
 10330              		.loc 1 2545 0 is_stmt 0 discriminator 1
 10331 0056 FB1C     		add	r3, r7, #3
 10332 0058 1B78     		ldrb	r3, [r3]
 10333 005a 012B     		cmp	r3, #1
 10334 005c 05D0     		beq	.L453
 10335 005e 144A     		ldr	r2, .L456+20
 10336 0060 144B     		ldr	r3, .L456+24
 10337 0062 101C     		mov	r0, r2
 10338 0064 191C     		mov	r1, r3
 10339 0066 FFF7FEFF 		bl	assert_failed
 10340              	.L453:
2546:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
2547:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   if (NewState != DISABLE)
 10341              		.loc 1 2547 0 is_stmt 1
 10342 006a FB1C     		add	r3, r7, #3
 10343 006c 1B78     		ldrb	r3, [r3]
 10344 006e 002B     		cmp	r3, #0
 10345 0070 08D0     		beq	.L454
2548:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
2549:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the CCDS Bit */
2550:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCDS;
 10346              		.loc 1 2550 0
 10347 0072 7B68     		ldr	r3, [r7, #4]
 10348 0074 9B88     		ldrh	r3, [r3, #4]
 10349 0076 9BB2     		uxth	r3, r3
 10350 0078 0822     		mov	r2, #8
 10351 007a 1343     		orr	r3, r2
 10352 007c 9AB2     		uxth	r2, r3
 10353 007e 7B68     		ldr	r3, [r7, #4]
 10354 0080 9A80     		strh	r2, [r3, #4]
 10355 0082 07E0     		b	.L451
 10356              	.L454:
2551:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
2552:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   else
2553:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
2554:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Reset the CCDS Bit */
2555:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_CCDS);
 10357              		.loc 1 2555 0
 10358 0084 7B68     		ldr	r3, [r7, #4]
 10359 0086 9B88     		ldrh	r3, [r3, #4]
 10360 0088 9BB2     		uxth	r3, r3
 10361 008a 0822     		mov	r2, #8
 10362 008c 9343     		bic	r3, r2
 10363 008e 9AB2     		uxth	r2, r3
 10364 0090 7B68     		ldr	r3, [r7, #4]
 10365 0092 9A80     		strh	r2, [r3, #4]
 10366              	.L451:
2556:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
2557:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 10367              		.loc 1 2557 0
 10368 0094 BD46     		mov	sp, r7
 10369 0096 02B0     		add	sp, sp, #8
 10370              		@ sp needed
 10371 0098 80BD     		pop	{r7, pc}
 10372              	.L457:
 10373 009a C046     		.align	2
 10374              	.L456:
 10375 009c 002C0140 		.word	1073818624
 10376 00a0 00040040 		.word	1073742848
 10377 00a4 00400140 		.word	1073823744
 10378 00a8 00440140 		.word	1073824768
 10379 00ac 00480140 		.word	1073825792
 10380 00b0 00000000 		.word	.LC0
 10381 00b4 F1090000 		.word	2545
 10382              		.cfi_endproc
 10383              	.LFE107:
 10385              		.section	.text.TIM_InternalClockConfig,"ax",%progbits
 10386              		.align	2
 10387              		.global	TIM_InternalClockConfig
 10388              		.code	16
 10389              		.thumb_func
 10391              	TIM_InternalClockConfig:
 10392              	.LFB108:
2558:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2559:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2560:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @}
2561:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2562:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2563:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /** @defgroup TIM_Group6 Clocks management functions
2564:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  *  @brief    Clocks management functions
2565:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  *
2566:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** @verbatim
2567:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  ===============================================================================
2568:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                      ##### Clocks management functions #####
2569:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  ===============================================================================
2570:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2571:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** @endverbatim
2572:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @{
2573:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2574:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2575:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2576:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Configures the TIMx internal Clock
2577:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, or 15 to select the TIM peripheral.
2578:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
2579:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2580:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_InternalClockConfig(TIM_TypeDef* TIMx)
2581:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 10393              		.loc 1 2581 0
 10394              		.cfi_startproc
 10395 0000 80B5     		push	{r7, lr}
 10396              		.cfi_def_cfa_offset 8
 10397              		.cfi_offset 7, -8
 10398              		.cfi_offset 14, -4
 10399 0002 82B0     		sub	sp, sp, #8
 10400              		.cfi_def_cfa_offset 16
 10401 0004 00AF     		add	r7, sp, #0
 10402              		.cfi_def_cfa_register 7
 10403 0006 7860     		str	r0, [r7, #4]
2582:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2583:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 10404              		.loc 1 2583 0
 10405 0008 7A68     		ldr	r2, [r7, #4]
 10406 000a 104B     		ldr	r3, .L460
 10407 000c 9A42     		cmp	r2, r3
 10408 000e 12D0     		beq	.L459
 10409              		.loc 1 2583 0 is_stmt 0 discriminator 1
 10410 0010 7A68     		ldr	r2, [r7, #4]
 10411 0012 8023     		mov	r3, #128
 10412 0014 DB05     		lsl	r3, r3, #23
 10413 0016 9A42     		cmp	r2, r3
 10414 0018 0DD0     		beq	.L459
 10415 001a 7A68     		ldr	r2, [r7, #4]
 10416 001c 0C4B     		ldr	r3, .L460+4
 10417 001e 9A42     		cmp	r2, r3
 10418 0020 09D0     		beq	.L459
 10419 0022 7A68     		ldr	r2, [r7, #4]
 10420 0024 0B4B     		ldr	r3, .L460+8
 10421 0026 9A42     		cmp	r2, r3
 10422 0028 05D0     		beq	.L459
 10423 002a 0B4A     		ldr	r2, .L460+12
 10424 002c 0B4B     		ldr	r3, .L460+16
 10425 002e 101C     		mov	r0, r2
 10426 0030 191C     		mov	r1, r3
 10427 0032 FFF7FEFF 		bl	assert_failed
 10428              	.L459:
2584:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Disable slave mode to clock the prescaler directly with the internal clock */
2585:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->SMCR &=  (uint16_t)(~((uint16_t)TIM_SMCR_SMS));
 10429              		.loc 1 2585 0 is_stmt 1
 10430 0036 7B68     		ldr	r3, [r7, #4]
 10431 0038 1B89     		ldrh	r3, [r3, #8]
 10432 003a 9BB2     		uxth	r3, r3
 10433 003c 0722     		mov	r2, #7
 10434 003e 9343     		bic	r3, r2
 10435 0040 9AB2     		uxth	r2, r3
 10436 0042 7B68     		ldr	r3, [r7, #4]
 10437 0044 1A81     		strh	r2, [r3, #8]
2586:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 10438              		.loc 1 2586 0
 10439 0046 BD46     		mov	sp, r7
 10440 0048 02B0     		add	sp, sp, #8
 10441              		@ sp needed
 10442 004a 80BD     		pop	{r7, pc}
 10443              	.L461:
 10444              		.align	2
 10445              	.L460:
 10446 004c 002C0140 		.word	1073818624
 10447 0050 00040040 		.word	1073742848
 10448 0054 00400140 		.word	1073823744
 10449 0058 00000000 		.word	.LC0
 10450 005c 170A0000 		.word	2583
 10451              		.cfi_endproc
 10452              	.LFE108:
 10454              		.section	.text.TIM_ITRxExternalClockConfig,"ax",%progbits
 10455              		.align	2
 10456              		.global	TIM_ITRxExternalClockConfig
 10457              		.code	16
 10458              		.thumb_func
 10460              	TIM_ITRxExternalClockConfig:
 10461              	.LFB109:
2587:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2588:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2589:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Configures the TIMx Internal Trigger as External Clock
2590:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, or 15 to select the TIM peripheral.
2591:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ITRSource: Trigger source.
2592:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
2593:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   @arg  TIM_TS_ITR0: Internal Trigger 0
2594:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   @arg  TIM_TS_ITR1: Internal Trigger 1
2595:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   @arg  TIM_TS_ITR2: Internal Trigger 2
2596:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   @arg  TIM_TS_ITR3: Internal Trigger 3
2597:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
2598:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2599:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_ITRxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2600:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 10462              		.loc 1 2600 0
 10463              		.cfi_startproc
 10464 0000 80B5     		push	{r7, lr}
 10465              		.cfi_def_cfa_offset 8
 10466              		.cfi_offset 7, -8
 10467              		.cfi_offset 14, -4
 10468 0002 82B0     		sub	sp, sp, #8
 10469              		.cfi_def_cfa_offset 16
 10470 0004 00AF     		add	r7, sp, #0
 10471              		.cfi_def_cfa_register 7
 10472 0006 7860     		str	r0, [r7, #4]
 10473 0008 0A1C     		mov	r2, r1
 10474 000a BB1C     		add	r3, r7, #2
 10475 000c 1A80     		strh	r2, [r3]
2601:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2602:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 10476              		.loc 1 2602 0
 10477 000e 7A68     		ldr	r2, [r7, #4]
 10478 0010 1E4B     		ldr	r3, .L465
 10479 0012 9A42     		cmp	r2, r3
 10480 0014 12D0     		beq	.L463
 10481              		.loc 1 2602 0 is_stmt 0 discriminator 1
 10482 0016 7A68     		ldr	r2, [r7, #4]
 10483 0018 8023     		mov	r3, #128
 10484 001a DB05     		lsl	r3, r3, #23
 10485 001c 9A42     		cmp	r2, r3
 10486 001e 0DD0     		beq	.L463
 10487 0020 7A68     		ldr	r2, [r7, #4]
 10488 0022 1B4B     		ldr	r3, .L465+4
 10489 0024 9A42     		cmp	r2, r3
 10490 0026 09D0     		beq	.L463
 10491 0028 7A68     		ldr	r2, [r7, #4]
 10492 002a 1A4B     		ldr	r3, .L465+8
 10493 002c 9A42     		cmp	r2, r3
 10494 002e 05D0     		beq	.L463
 10495 0030 194A     		ldr	r2, .L465+12
 10496 0032 1A4B     		ldr	r3, .L465+16
 10497 0034 101C     		mov	r0, r2
 10498 0036 191C     		mov	r1, r3
 10499 0038 FFF7FEFF 		bl	assert_failed
 10500              	.L463:
2603:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_INTERNAL_TRIGGER_SELECTION(TIM_InputTriggerSource));
 10501              		.loc 1 2603 0 is_stmt 1
 10502 003c BB1C     		add	r3, r7, #2
 10503 003e 1B88     		ldrh	r3, [r3]
 10504 0040 002B     		cmp	r3, #0
 10505 0042 11D0     		beq	.L464
 10506              		.loc 1 2603 0 is_stmt 0 discriminator 1
 10507 0044 BB1C     		add	r3, r7, #2
 10508 0046 1B88     		ldrh	r3, [r3]
 10509 0048 102B     		cmp	r3, #16
 10510 004a 0DD0     		beq	.L464
 10511 004c BB1C     		add	r3, r7, #2
 10512 004e 1B88     		ldrh	r3, [r3]
 10513 0050 202B     		cmp	r3, #32
 10514 0052 09D0     		beq	.L464
 10515 0054 BB1C     		add	r3, r7, #2
 10516 0056 1B88     		ldrh	r3, [r3]
 10517 0058 302B     		cmp	r3, #48
 10518 005a 05D0     		beq	.L464
 10519 005c 0E4A     		ldr	r2, .L465+12
 10520 005e 104B     		ldr	r3, .L465+20
 10521 0060 101C     		mov	r0, r2
 10522 0062 191C     		mov	r1, r3
 10523 0064 FFF7FEFF 		bl	assert_failed
 10524              	.L464:
2604:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Select the Internal Trigger */
2605:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_InputTriggerSource);
 10525              		.loc 1 2605 0 is_stmt 1
 10526 0068 7A68     		ldr	r2, [r7, #4]
 10527 006a BB1C     		add	r3, r7, #2
 10528 006c 1B88     		ldrh	r3, [r3]
 10529 006e 101C     		mov	r0, r2
 10530 0070 191C     		mov	r1, r3
 10531 0072 FFF7FEFF 		bl	TIM_SelectInputTrigger
2606:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Select the External clock mode1 */
2607:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 10532              		.loc 1 2607 0
 10533 0076 7B68     		ldr	r3, [r7, #4]
 10534 0078 1B89     		ldrh	r3, [r3, #8]
 10535 007a 9BB2     		uxth	r3, r3
 10536 007c 0722     		mov	r2, #7
 10537 007e 1343     		orr	r3, r2
 10538 0080 9AB2     		uxth	r2, r3
 10539 0082 7B68     		ldr	r3, [r7, #4]
 10540 0084 1A81     		strh	r2, [r3, #8]
2608:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 10541              		.loc 1 2608 0
 10542 0086 BD46     		mov	sp, r7
 10543 0088 02B0     		add	sp, sp, #8
 10544              		@ sp needed
 10545 008a 80BD     		pop	{r7, pc}
 10546              	.L466:
 10547              		.align	2
 10548              	.L465:
 10549 008c 002C0140 		.word	1073818624
 10550 0090 00040040 		.word	1073742848
 10551 0094 00400140 		.word	1073823744
 10552 0098 00000000 		.word	.LC0
 10553 009c 2A0A0000 		.word	2602
 10554 00a0 2B0A0000 		.word	2603
 10555              		.cfi_endproc
 10556              	.LFE109:
 10558              		.section	.text.TIM_TIxExternalClockConfig,"ax",%progbits
 10559              		.align	2
 10560              		.global	TIM_TIxExternalClockConfig
 10561              		.code	16
 10562              		.thumb_func
 10564              	TIM_TIxExternalClockConfig:
 10565              	.LFB110:
2609:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2610:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2611:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Configures the TIMx Trigger as External Clock
2612:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, or 15 to select the TIM peripheral.
2613:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_TIxExternalCLKSource: Trigger source.
2614:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
2615:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_TIxExternalCLK1Source_TI1ED: TI1 Edge Detector
2616:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_TIxExternalCLK1Source_TI1: Filtered Timer Input 1
2617:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_TIxExternalCLK1Source_TI2: Filtered Timer Input 2
2618:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ICPolarity: specifies the TIx Polarity.
2619:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
2620:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPolarity_Rising
2621:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPolarity_Falling
2622:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  ICFilter : specifies the filter value.
2623:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter must be a value between 0x0 and 0xF.
2624:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
2625:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2626:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_TIxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_TIxExternalCLKSource,
2627:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                                 uint16_t TIM_ICPolarity, uint16_t ICFilter)
2628:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 10566              		.loc 1 2628 0
 10567              		.cfi_startproc
 10568 0000 80B5     		push	{r7, lr}
 10569              		.cfi_def_cfa_offset 8
 10570              		.cfi_offset 7, -8
 10571              		.cfi_offset 14, -4
 10572 0002 84B0     		sub	sp, sp, #16
 10573              		.cfi_def_cfa_offset 24
 10574 0004 00AF     		add	r7, sp, #0
 10575              		.cfi_def_cfa_register 7
 10576 0006 F860     		str	r0, [r7, #12]
 10577 0008 081C     		mov	r0, r1
 10578 000a 111C     		mov	r1, r2
 10579 000c 1A1C     		mov	r2, r3
 10580 000e 3B1C     		mov	r3, r7
 10581 0010 0A33     		add	r3, r3, #10
 10582 0012 1880     		strh	r0, [r3]
 10583 0014 3B1C     		mov	r3, r7
 10584 0016 0833     		add	r3, r3, #8
 10585 0018 1980     		strh	r1, [r3]
 10586 001a BB1D     		add	r3, r7, #6
 10587 001c 1A80     		strh	r2, [r3]
2629:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2630:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 10588              		.loc 1 2630 0
 10589 001e FA68     		ldr	r2, [r7, #12]
 10590 0020 314B     		ldr	r3, .L473
 10591 0022 9A42     		cmp	r2, r3
 10592 0024 12D0     		beq	.L468
 10593              		.loc 1 2630 0 is_stmt 0 discriminator 1
 10594 0026 FA68     		ldr	r2, [r7, #12]
 10595 0028 8023     		mov	r3, #128
 10596 002a DB05     		lsl	r3, r3, #23
 10597 002c 9A42     		cmp	r2, r3
 10598 002e 0DD0     		beq	.L468
 10599 0030 FA68     		ldr	r2, [r7, #12]
 10600 0032 2E4B     		ldr	r3, .L473+4
 10601 0034 9A42     		cmp	r2, r3
 10602 0036 09D0     		beq	.L468
 10603 0038 FA68     		ldr	r2, [r7, #12]
 10604 003a 2D4B     		ldr	r3, .L473+8
 10605 003c 9A42     		cmp	r2, r3
 10606 003e 05D0     		beq	.L468
 10607 0040 2C4A     		ldr	r2, .L473+12
 10608 0042 2D4B     		ldr	r3, .L473+16
 10609 0044 101C     		mov	r0, r2
 10610 0046 191C     		mov	r1, r3
 10611 0048 FFF7FEFF 		bl	assert_failed
 10612              	.L468:
2631:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICPolarity));
 10613              		.loc 1 2631 0 is_stmt 1
 10614 004c 3B1C     		mov	r3, r7
 10615 004e 0833     		add	r3, r3, #8
 10616 0050 1B88     		ldrh	r3, [r3]
 10617 0052 002B     		cmp	r3, #0
 10618 0054 0FD0     		beq	.L469
 10619              		.loc 1 2631 0 is_stmt 0 discriminator 1
 10620 0056 3B1C     		mov	r3, r7
 10621 0058 0833     		add	r3, r3, #8
 10622 005a 1B88     		ldrh	r3, [r3]
 10623 005c 022B     		cmp	r3, #2
 10624 005e 0AD0     		beq	.L469
 10625 0060 3B1C     		mov	r3, r7
 10626 0062 0833     		add	r3, r3, #8
 10627 0064 1B88     		ldrh	r3, [r3]
 10628 0066 0A2B     		cmp	r3, #10
 10629 0068 05D0     		beq	.L469
 10630 006a 224A     		ldr	r2, .L473+12
 10631 006c 234B     		ldr	r3, .L473+20
 10632 006e 101C     		mov	r0, r2
 10633 0070 191C     		mov	r1, r3
 10634 0072 FFF7FEFF 		bl	assert_failed
 10635              	.L469:
2632:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(ICFilter));
 10636              		.loc 1 2632 0 is_stmt 1
 10637 0076 BB1D     		add	r3, r7, #6
 10638 0078 1B88     		ldrh	r3, [r3]
 10639 007a 0F2B     		cmp	r3, #15
 10640 007c 05D9     		bls	.L470
 10641              		.loc 1 2632 0 is_stmt 0 discriminator 1
 10642 007e 1D4A     		ldr	r2, .L473+12
 10643 0080 1F4B     		ldr	r3, .L473+24
 10644 0082 101C     		mov	r0, r2
 10645 0084 191C     		mov	r1, r3
 10646 0086 FFF7FEFF 		bl	assert_failed
 10647              	.L470:
2633:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
2634:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Configure the Timer Input Clock Source */
2635:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   if (TIM_TIxExternalCLKSource == TIM_TIxExternalCLK1Source_TI2)
 10648              		.loc 1 2635 0 is_stmt 1
 10649 008a 3B1C     		mov	r3, r7
 10650 008c 0A33     		add	r3, r3, #10
 10651 008e 1B88     		ldrh	r3, [r3]
 10652 0090 602B     		cmp	r3, #96
 10653 0092 0BD1     		bne	.L471
2636:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
2637:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TI2_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 10654              		.loc 1 2637 0
 10655 0094 F968     		ldr	r1, [r7, #12]
 10656 0096 3B1C     		mov	r3, r7
 10657 0098 0833     		add	r3, r3, #8
 10658 009a 1A88     		ldrh	r2, [r3]
 10659 009c BB1D     		add	r3, r7, #6
 10660 009e 1B88     		ldrh	r3, [r3]
 10661 00a0 081C     		mov	r0, r1
 10662 00a2 111C     		mov	r1, r2
 10663 00a4 0122     		mov	r2, #1
 10664 00a6 FFF7FEFF 		bl	TI2_Config
 10665 00aa 0AE0     		b	.L472
 10666              	.L471:
2638:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
2639:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   else
2640:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
2641:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TI1_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 10667              		.loc 1 2641 0
 10668 00ac F968     		ldr	r1, [r7, #12]
 10669 00ae 3B1C     		mov	r3, r7
 10670 00b0 0833     		add	r3, r3, #8
 10671 00b2 1A88     		ldrh	r2, [r3]
 10672 00b4 BB1D     		add	r3, r7, #6
 10673 00b6 1B88     		ldrh	r3, [r3]
 10674 00b8 081C     		mov	r0, r1
 10675 00ba 111C     		mov	r1, r2
 10676 00bc 0122     		mov	r2, #1
 10677 00be FFF7FEFF 		bl	TI1_Config
 10678              	.L472:
2642:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
2643:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Select the Trigger source */
2644:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_TIxExternalCLKSource);
 10679              		.loc 1 2644 0
 10680 00c2 FA68     		ldr	r2, [r7, #12]
 10681 00c4 3B1C     		mov	r3, r7
 10682 00c6 0A33     		add	r3, r3, #10
 10683 00c8 1B88     		ldrh	r3, [r3]
 10684 00ca 101C     		mov	r0, r2
 10685 00cc 191C     		mov	r1, r3
 10686 00ce FFF7FEFF 		bl	TIM_SelectInputTrigger
2645:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Select the External clock mode1 */
2646:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 10687              		.loc 1 2646 0
 10688 00d2 FB68     		ldr	r3, [r7, #12]
 10689 00d4 1B89     		ldrh	r3, [r3, #8]
 10690 00d6 9BB2     		uxth	r3, r3
 10691 00d8 0722     		mov	r2, #7
 10692 00da 1343     		orr	r3, r2
 10693 00dc 9AB2     		uxth	r2, r3
 10694 00de FB68     		ldr	r3, [r7, #12]
 10695 00e0 1A81     		strh	r2, [r3, #8]
2647:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 10696              		.loc 1 2647 0
 10697 00e2 BD46     		mov	sp, r7
 10698 00e4 04B0     		add	sp, sp, #16
 10699              		@ sp needed
 10700 00e6 80BD     		pop	{r7, pc}
 10701              	.L474:
 10702              		.align	2
 10703              	.L473:
 10704 00e8 002C0140 		.word	1073818624
 10705 00ec 00040040 		.word	1073742848
 10706 00f0 00400140 		.word	1073823744
 10707 00f4 00000000 		.word	.LC0
 10708 00f8 460A0000 		.word	2630
 10709 00fc 470A0000 		.word	2631
 10710 0100 480A0000 		.word	2632
 10711              		.cfi_endproc
 10712              	.LFE110:
 10714              		.section	.text.TIM_ETRClockMode1Config,"ax",%progbits
 10715              		.align	2
 10716              		.global	TIM_ETRClockMode1Config
 10717              		.code	16
 10718              		.thumb_func
 10720              	TIM_ETRClockMode1Config:
 10721              	.LFB111:
2648:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2649:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2650:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Configures the External clock Mode1
2651:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2 or 3 to select the TIM peripheral.
2652:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2653:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
2654:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2655:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2656:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2657:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2658:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2659:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
2660:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2661:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2662:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2663:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F
2664:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
2665:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2666:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_ETRClockMode1Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRGPo
2667:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                              uint16_t ExtTRGFilter)
2668:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 10722              		.loc 1 2668 0
 10723              		.cfi_startproc
 10724 0000 80B5     		push	{r7, lr}
 10725              		.cfi_def_cfa_offset 8
 10726              		.cfi_offset 7, -8
 10727              		.cfi_offset 14, -4
 10728 0002 86B0     		sub	sp, sp, #24
 10729              		.cfi_def_cfa_offset 32
 10730 0004 00AF     		add	r7, sp, #0
 10731              		.cfi_def_cfa_register 7
 10732 0006 F860     		str	r0, [r7, #12]
 10733 0008 081C     		mov	r0, r1
 10734 000a 111C     		mov	r1, r2
 10735 000c 1A1C     		mov	r2, r3
 10736 000e 3B1C     		mov	r3, r7
 10737 0010 0A33     		add	r3, r3, #10
 10738 0012 1880     		strh	r0, [r3]
 10739 0014 3B1C     		mov	r3, r7
 10740 0016 0833     		add	r3, r3, #8
 10741 0018 1980     		strh	r1, [r3]
 10742 001a BB1D     		add	r3, r7, #6
 10743 001c 1A80     		strh	r2, [r3]
2669:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpsmcr = 0;
 10744              		.loc 1 2669 0
 10745 001e 3B1C     		mov	r3, r7
 10746 0020 1633     		add	r3, r3, #22
 10747 0022 0022     		mov	r2, #0
 10748 0024 1A80     		strh	r2, [r3]
2670:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
2671:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2672:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 10749              		.loc 1 2672 0
 10750 0026 FA68     		ldr	r2, [r7, #12]
 10751 0028 434B     		ldr	r3, .L480
 10752 002a 9A42     		cmp	r2, r3
 10753 002c 0FD0     		beq	.L476
 10754              		.loc 1 2672 0 is_stmt 0 discriminator 1
 10755 002e FA68     		ldr	r2, [r7, #12]
 10756 0030 8023     		mov	r3, #128
 10757 0032 DB05     		lsl	r3, r3, #23
 10758 0034 9A42     		cmp	r2, r3
 10759 0036 0AD0     		beq	.L476
 10760 0038 FA68     		ldr	r2, [r7, #12]
 10761 003a 404B     		ldr	r3, .L480+4
 10762 003c 9A42     		cmp	r2, r3
 10763 003e 06D0     		beq	.L476
 10764 0040 3F4A     		ldr	r2, .L480+8
 10765 0042 A723     		mov	r3, #167
 10766 0044 1B01     		lsl	r3, r3, #4
 10767 0046 101C     		mov	r0, r2
 10768 0048 191C     		mov	r1, r3
 10769 004a FFF7FEFF 		bl	assert_failed
 10770              	.L476:
2673:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
 10771              		.loc 1 2673 0 is_stmt 1
 10772 004e 3B1C     		mov	r3, r7
 10773 0050 0A33     		add	r3, r3, #10
 10774 0052 1B88     		ldrh	r3, [r3]
 10775 0054 002B     		cmp	r3, #0
 10776 0056 1AD0     		beq	.L477
 10777              		.loc 1 2673 0 is_stmt 0 discriminator 1
 10778 0058 3B1C     		mov	r3, r7
 10779 005a 0A33     		add	r3, r3, #10
 10780 005c 1A88     		ldrh	r2, [r3]
 10781 005e 8023     		mov	r3, #128
 10782 0060 5B01     		lsl	r3, r3, #5
 10783 0062 9A42     		cmp	r2, r3
 10784 0064 13D0     		beq	.L477
 10785 0066 3B1C     		mov	r3, r7
 10786 0068 0A33     		add	r3, r3, #10
 10787 006a 1A88     		ldrh	r2, [r3]
 10788 006c 8023     		mov	r3, #128
 10789 006e 9B01     		lsl	r3, r3, #6
 10790 0070 9A42     		cmp	r2, r3
 10791 0072 0CD0     		beq	.L477
 10792 0074 3B1C     		mov	r3, r7
 10793 0076 0A33     		add	r3, r3, #10
 10794 0078 1A88     		ldrh	r2, [r3]
 10795 007a C023     		mov	r3, #192
 10796 007c 9B01     		lsl	r3, r3, #6
 10797 007e 9A42     		cmp	r2, r3
 10798 0080 05D0     		beq	.L477
 10799 0082 2F4A     		ldr	r2, .L480+8
 10800 0084 2F4B     		ldr	r3, .L480+12
 10801 0086 101C     		mov	r0, r2
 10802 0088 191C     		mov	r1, r3
 10803 008a FFF7FEFF 		bl	assert_failed
 10804              	.L477:
2674:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
 10805              		.loc 1 2674 0 is_stmt 1
 10806 008e 3B1C     		mov	r3, r7
 10807 0090 0833     		add	r3, r3, #8
 10808 0092 1A88     		ldrh	r2, [r3]
 10809 0094 8023     		mov	r3, #128
 10810 0096 1B02     		lsl	r3, r3, #8
 10811 0098 9A42     		cmp	r2, r3
 10812 009a 0AD0     		beq	.L478
 10813              		.loc 1 2674 0 is_stmt 0 discriminator 1
 10814 009c 3B1C     		mov	r3, r7
 10815 009e 0833     		add	r3, r3, #8
 10816 00a0 1B88     		ldrh	r3, [r3]
 10817 00a2 002B     		cmp	r3, #0
 10818 00a4 05D0     		beq	.L478
 10819 00a6 264A     		ldr	r2, .L480+8
 10820 00a8 274B     		ldr	r3, .L480+16
 10821 00aa 101C     		mov	r0, r2
 10822 00ac 191C     		mov	r1, r3
 10823 00ae FFF7FEFF 		bl	assert_failed
 10824              	.L478:
2675:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
 10825              		.loc 1 2675 0 is_stmt 1
 10826 00b2 BB1D     		add	r3, r7, #6
 10827 00b4 1B88     		ldrh	r3, [r3]
 10828 00b6 0F2B     		cmp	r3, #15
 10829 00b8 05D9     		bls	.L479
 10830              		.loc 1 2675 0 is_stmt 0 discriminator 1
 10831 00ba 214A     		ldr	r2, .L480+8
 10832 00bc 234B     		ldr	r3, .L480+20
 10833 00be 101C     		mov	r0, r2
 10834 00c0 191C     		mov	r1, r3
 10835 00c2 FFF7FEFF 		bl	assert_failed
 10836              	.L479:
2676:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
2677:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Configure the ETR Clock source */
2678:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 10837              		.loc 1 2678 0 is_stmt 1
 10838 00c6 F868     		ldr	r0, [r7, #12]
 10839 00c8 3B1C     		mov	r3, r7
 10840 00ca 0A33     		add	r3, r3, #10
 10841 00cc 1988     		ldrh	r1, [r3]
 10842 00ce 3B1C     		mov	r3, r7
 10843 00d0 0833     		add	r3, r3, #8
 10844 00d2 1A88     		ldrh	r2, [r3]
 10845 00d4 BB1D     		add	r3, r7, #6
 10846 00d6 1B88     		ldrh	r3, [r3]
 10847 00d8 FFF7FEFF 		bl	TIM_ETRConfig
2679:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
2680:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Get the TIMx SMCR register value */
2681:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 10848              		.loc 1 2681 0
 10849 00dc 3B1C     		mov	r3, r7
 10850 00de 1633     		add	r3, r3, #22
 10851 00e0 FA68     		ldr	r2, [r7, #12]
 10852 00e2 1289     		ldrh	r2, [r2, #8]
 10853 00e4 1A80     		strh	r2, [r3]
2682:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the SMS Bits */
2683:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_SMS));
 10854              		.loc 1 2683 0
 10855 00e6 3B1C     		mov	r3, r7
 10856 00e8 1633     		add	r3, r3, #22
 10857 00ea 3A1C     		mov	r2, r7
 10858 00ec 1632     		add	r2, r2, #22
 10859 00ee 1288     		ldrh	r2, [r2]
 10860 00f0 0721     		mov	r1, #7
 10861 00f2 8A43     		bic	r2, r1
 10862 00f4 1A80     		strh	r2, [r3]
2684:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Select the External clock mode1 */
2685:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpsmcr |= TIM_SlaveMode_External1;
 10863              		.loc 1 2685 0
 10864 00f6 3B1C     		mov	r3, r7
 10865 00f8 1633     		add	r3, r3, #22
 10866 00fa 3A1C     		mov	r2, r7
 10867 00fc 1632     		add	r2, r2, #22
 10868 00fe 1288     		ldrh	r2, [r2]
 10869 0100 0721     		mov	r1, #7
 10870 0102 0A43     		orr	r2, r1
 10871 0104 1A80     		strh	r2, [r3]
2686:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Select the Trigger selection : ETRF */
2687:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_TS));
 10872              		.loc 1 2687 0
 10873 0106 3B1C     		mov	r3, r7
 10874 0108 1633     		add	r3, r3, #22
 10875 010a 3A1C     		mov	r2, r7
 10876 010c 1632     		add	r2, r2, #22
 10877 010e 1288     		ldrh	r2, [r2]
 10878 0110 7021     		mov	r1, #112
 10879 0112 8A43     		bic	r2, r1
 10880 0114 1A80     		strh	r2, [r3]
2688:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpsmcr |= TIM_TS_ETRF;
 10881              		.loc 1 2688 0
 10882 0116 3B1C     		mov	r3, r7
 10883 0118 1633     		add	r3, r3, #22
 10884 011a 3A1C     		mov	r2, r7
 10885 011c 1632     		add	r2, r2, #22
 10886 011e 1288     		ldrh	r2, [r2]
 10887 0120 7021     		mov	r1, #112
 10888 0122 0A43     		orr	r2, r1
 10889 0124 1A80     		strh	r2, [r3]
2689:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx SMCR */
2690:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 10890              		.loc 1 2690 0
 10891 0126 FB68     		ldr	r3, [r7, #12]
 10892 0128 3A1C     		mov	r2, r7
 10893 012a 1632     		add	r2, r2, #22
 10894 012c 1288     		ldrh	r2, [r2]
 10895 012e 1A81     		strh	r2, [r3, #8]
2691:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 10896              		.loc 1 2691 0
 10897 0130 BD46     		mov	sp, r7
 10898 0132 06B0     		add	sp, sp, #24
 10899              		@ sp needed
 10900 0134 80BD     		pop	{r7, pc}
 10901              	.L481:
 10902 0136 C046     		.align	2
 10903              	.L480:
 10904 0138 002C0140 		.word	1073818624
 10905 013c 00040040 		.word	1073742848
 10906 0140 00000000 		.word	.LC0
 10907 0144 710A0000 		.word	2673
 10908 0148 720A0000 		.word	2674
 10909 014c 730A0000 		.word	2675
 10910              		.cfi_endproc
 10911              	.LFE111:
 10913              		.section	.text.TIM_ETRClockMode2Config,"ax",%progbits
 10914              		.align	2
 10915              		.global	TIM_ETRClockMode2Config
 10916              		.code	16
 10917              		.thumb_func
 10919              	TIM_ETRClockMode2Config:
 10920              	.LFB112:
2692:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2693:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2694:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Configures the External clock Mode2
2695:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2 or 3 to select the TIM peripheral.
2696:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2697:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
2698:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2699:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2700:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2701:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2702:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2703:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
2704:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2705:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2706:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2707:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F
2708:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
2709:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2710:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_ETRClockMode2Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, 
2711:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                              uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2712:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 10921              		.loc 1 2712 0
 10922              		.cfi_startproc
 10923 0000 80B5     		push	{r7, lr}
 10924              		.cfi_def_cfa_offset 8
 10925              		.cfi_offset 7, -8
 10926              		.cfi_offset 14, -4
 10927 0002 84B0     		sub	sp, sp, #16
 10928              		.cfi_def_cfa_offset 24
 10929 0004 00AF     		add	r7, sp, #0
 10930              		.cfi_def_cfa_register 7
 10931 0006 F860     		str	r0, [r7, #12]
 10932 0008 081C     		mov	r0, r1
 10933 000a 111C     		mov	r1, r2
 10934 000c 1A1C     		mov	r2, r3
 10935 000e 3B1C     		mov	r3, r7
 10936 0010 0A33     		add	r3, r3, #10
 10937 0012 1880     		strh	r0, [r3]
 10938 0014 3B1C     		mov	r3, r7
 10939 0016 0833     		add	r3, r3, #8
 10940 0018 1980     		strh	r1, [r3]
 10941 001a BB1D     		add	r3, r7, #6
 10942 001c 1A80     		strh	r2, [r3]
2713:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2714:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 10943              		.loc 1 2714 0
 10944 001e FA68     		ldr	r2, [r7, #12]
 10945 0020 324B     		ldr	r3, .L487
 10946 0022 9A42     		cmp	r2, r3
 10947 0024 0ED0     		beq	.L483
 10948              		.loc 1 2714 0 is_stmt 0 discriminator 1
 10949 0026 FA68     		ldr	r2, [r7, #12]
 10950 0028 8023     		mov	r3, #128
 10951 002a DB05     		lsl	r3, r3, #23
 10952 002c 9A42     		cmp	r2, r3
 10953 002e 09D0     		beq	.L483
 10954 0030 FA68     		ldr	r2, [r7, #12]
 10955 0032 2F4B     		ldr	r3, .L487+4
 10956 0034 9A42     		cmp	r2, r3
 10957 0036 05D0     		beq	.L483
 10958 0038 2E4A     		ldr	r2, .L487+8
 10959 003a 2F4B     		ldr	r3, .L487+12
 10960 003c 101C     		mov	r0, r2
 10961 003e 191C     		mov	r1, r3
 10962 0040 FFF7FEFF 		bl	assert_failed
 10963              	.L483:
2715:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
 10964              		.loc 1 2715 0 is_stmt 1
 10965 0044 3B1C     		mov	r3, r7
 10966 0046 0A33     		add	r3, r3, #10
 10967 0048 1B88     		ldrh	r3, [r3]
 10968 004a 002B     		cmp	r3, #0
 10969 004c 1AD0     		beq	.L484
 10970              		.loc 1 2715 0 is_stmt 0 discriminator 1
 10971 004e 3B1C     		mov	r3, r7
 10972 0050 0A33     		add	r3, r3, #10
 10973 0052 1A88     		ldrh	r2, [r3]
 10974 0054 8023     		mov	r3, #128
 10975 0056 5B01     		lsl	r3, r3, #5
 10976 0058 9A42     		cmp	r2, r3
 10977 005a 13D0     		beq	.L484
 10978 005c 3B1C     		mov	r3, r7
 10979 005e 0A33     		add	r3, r3, #10
 10980 0060 1A88     		ldrh	r2, [r3]
 10981 0062 8023     		mov	r3, #128
 10982 0064 9B01     		lsl	r3, r3, #6
 10983 0066 9A42     		cmp	r2, r3
 10984 0068 0CD0     		beq	.L484
 10985 006a 3B1C     		mov	r3, r7
 10986 006c 0A33     		add	r3, r3, #10
 10987 006e 1A88     		ldrh	r2, [r3]
 10988 0070 C023     		mov	r3, #192
 10989 0072 9B01     		lsl	r3, r3, #6
 10990 0074 9A42     		cmp	r2, r3
 10991 0076 05D0     		beq	.L484
 10992 0078 1E4A     		ldr	r2, .L487+8
 10993 007a 204B     		ldr	r3, .L487+16
 10994 007c 101C     		mov	r0, r2
 10995 007e 191C     		mov	r1, r3
 10996 0080 FFF7FEFF 		bl	assert_failed
 10997              	.L484:
2716:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
 10998              		.loc 1 2716 0 is_stmt 1
 10999 0084 3B1C     		mov	r3, r7
 11000 0086 0833     		add	r3, r3, #8
 11001 0088 1A88     		ldrh	r2, [r3]
 11002 008a 8023     		mov	r3, #128
 11003 008c 1B02     		lsl	r3, r3, #8
 11004 008e 9A42     		cmp	r2, r3
 11005 0090 0AD0     		beq	.L485
 11006              		.loc 1 2716 0 is_stmt 0 discriminator 1
 11007 0092 3B1C     		mov	r3, r7
 11008 0094 0833     		add	r3, r3, #8
 11009 0096 1B88     		ldrh	r3, [r3]
 11010 0098 002B     		cmp	r3, #0
 11011 009a 05D0     		beq	.L485
 11012 009c 154A     		ldr	r2, .L487+8
 11013 009e 184B     		ldr	r3, .L487+20
 11014 00a0 101C     		mov	r0, r2
 11015 00a2 191C     		mov	r1, r3
 11016 00a4 FFF7FEFF 		bl	assert_failed
 11017              	.L485:
2717:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
 11018              		.loc 1 2717 0 is_stmt 1
 11019 00a8 BB1D     		add	r3, r7, #6
 11020 00aa 1B88     		ldrh	r3, [r3]
 11021 00ac 0F2B     		cmp	r3, #15
 11022 00ae 05D9     		bls	.L486
 11023              		.loc 1 2717 0 is_stmt 0 discriminator 1
 11024 00b0 104A     		ldr	r2, .L487+8
 11025 00b2 144B     		ldr	r3, .L487+24
 11026 00b4 101C     		mov	r0, r2
 11027 00b6 191C     		mov	r1, r3
 11028 00b8 FFF7FEFF 		bl	assert_failed
 11029              	.L486:
2718:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
2719:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Configure the ETR Clock source */
2720:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 11030              		.loc 1 2720 0 is_stmt 1
 11031 00bc F868     		ldr	r0, [r7, #12]
 11032 00be 3B1C     		mov	r3, r7
 11033 00c0 0A33     		add	r3, r3, #10
 11034 00c2 1988     		ldrh	r1, [r3]
 11035 00c4 3B1C     		mov	r3, r7
 11036 00c6 0833     		add	r3, r3, #8
 11037 00c8 1A88     		ldrh	r2, [r3]
 11038 00ca BB1D     		add	r3, r7, #6
 11039 00cc 1B88     		ldrh	r3, [r3]
 11040 00ce FFF7FEFF 		bl	TIM_ETRConfig
2721:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Enable the External clock mode2 */
2722:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->SMCR |= TIM_SMCR_ECE;
 11041              		.loc 1 2722 0
 11042 00d2 FB68     		ldr	r3, [r7, #12]
 11043 00d4 1B89     		ldrh	r3, [r3, #8]
 11044 00d6 9BB2     		uxth	r3, r3
 11045 00d8 8022     		mov	r2, #128
 11046 00da D201     		lsl	r2, r2, #7
 11047 00dc 1343     		orr	r3, r2
 11048 00de 9AB2     		uxth	r2, r3
 11049 00e0 FB68     		ldr	r3, [r7, #12]
 11050 00e2 1A81     		strh	r2, [r3, #8]
2723:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 11051              		.loc 1 2723 0
 11052 00e4 BD46     		mov	sp, r7
 11053 00e6 04B0     		add	sp, sp, #16
 11054              		@ sp needed
 11055 00e8 80BD     		pop	{r7, pc}
 11056              	.L488:
 11057 00ea C046     		.align	2
 11058              	.L487:
 11059 00ec 002C0140 		.word	1073818624
 11060 00f0 00040040 		.word	1073742848
 11061 00f4 00000000 		.word	.LC0
 11062 00f8 9A0A0000 		.word	2714
 11063 00fc 9B0A0000 		.word	2715
 11064 0100 9C0A0000 		.word	2716
 11065 0104 9D0A0000 		.word	2717
 11066              		.cfi_endproc
 11067              	.LFE112:
 11069              		.section	.text.TIM_SelectInputTrigger,"ax",%progbits
 11070              		.align	2
 11071              		.global	TIM_SelectInputTrigger
 11072              		.code	16
 11073              		.thumb_func
 11075              	TIM_SelectInputTrigger:
 11076              	.LFB113:
2724:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2725:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2726:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @}
2727:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2728:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2729:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /** @defgroup TIM_Group7 Synchronization management functions
2730:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  *  @brief    Synchronization management functions 
2731:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  *
2732:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** @verbatim
2733:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  ===============================================================================
2734:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                ##### Synchronization management functions #####
2735:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  ===============================================================================
2736:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****         *** TIM Driver: how to use it in synchronization Mode ***
2737:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  ===============================================================================
2738:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     [..] Case of two/several Timers
2739:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) Configure the Master Timers using the following functions:
2740:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx,
2741:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                   uint16_t TIM_TRGOSource).
2742:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx,
2743:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                   uint16_t TIM_MasterSlaveMode);  
2744:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) Configure the Slave Timers using the following functions: 
2745:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, 
2746:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                   uint16_t TIM_InputTriggerSource);  
2747:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode);
2748:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     [..] Case of Timers and external trigger(ETR pin)
2749:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) Configure the Etrenal trigger using this function:
2750:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
2751:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                   uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter);
2752:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****          (#) Configure the Slave Timers using the following functions:
2753:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) void TIM_SelectInputTrigger(TIM_TypeDef* TIMx,
2754:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                   uint16_t TIM_InputTriggerSource);
2755:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              (++) void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode);
2756:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2757:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** @endverbatim
2758:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @{
2759:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2760:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2761:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Selects the Input Trigger source
2762:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3 or 15 to select the TIM peripheral.
2763:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_InputTriggerSource: The Input Trigger source.
2764:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
2765:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_TS_ITR0: Internal Trigger 0
2766:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_TS_ITR1: Internal Trigger 1
2767:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_TS_ITR2: Internal Trigger 2
2768:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_TS_ITR3: Internal Trigger 3
2769:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_TS_TI1F_ED: TI1 Edge Detector
2770:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_TS_TI1FP1: Filtered Timer Input 1
2771:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_TS_TI2FP2: Filtered Timer Input 2
2772:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_TS_ETRF: External Trigger input
2773:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
2774:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2775:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2776:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 11077              		.loc 1 2776 0
 11078              		.cfi_startproc
 11079 0000 80B5     		push	{r7, lr}
 11080              		.cfi_def_cfa_offset 8
 11081              		.cfi_offset 7, -8
 11082              		.cfi_offset 14, -4
 11083 0002 84B0     		sub	sp, sp, #16
 11084              		.cfi_def_cfa_offset 24
 11085 0004 00AF     		add	r7, sp, #0
 11086              		.cfi_def_cfa_register 7
 11087 0006 7860     		str	r0, [r7, #4]
 11088 0008 0A1C     		mov	r2, r1
 11089 000a BB1C     		add	r3, r7, #2
 11090 000c 1A80     		strh	r2, [r3]
2777:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpsmcr = 0;
 11091              		.loc 1 2777 0
 11092 000e 3B1C     		mov	r3, r7
 11093 0010 0E33     		add	r3, r3, #14
 11094 0012 0022     		mov	r2, #0
 11095 0014 1A80     		strh	r2, [r3]
2778:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2779:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2780:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx)); 
 11096              		.loc 1 2780 0
 11097 0016 7A68     		ldr	r2, [r7, #4]
 11098 0018 2C4B     		ldr	r3, .L492
 11099 001a 9A42     		cmp	r2, r3
 11100 001c 12D0     		beq	.L490
 11101              		.loc 1 2780 0 is_stmt 0 discriminator 1
 11102 001e 7A68     		ldr	r2, [r7, #4]
 11103 0020 8023     		mov	r3, #128
 11104 0022 DB05     		lsl	r3, r3, #23
 11105 0024 9A42     		cmp	r2, r3
 11106 0026 0DD0     		beq	.L490
 11107 0028 7A68     		ldr	r2, [r7, #4]
 11108 002a 294B     		ldr	r3, .L492+4
 11109 002c 9A42     		cmp	r2, r3
 11110 002e 09D0     		beq	.L490
 11111 0030 7A68     		ldr	r2, [r7, #4]
 11112 0032 284B     		ldr	r3, .L492+8
 11113 0034 9A42     		cmp	r2, r3
 11114 0036 05D0     		beq	.L490
 11115 0038 274A     		ldr	r2, .L492+12
 11116 003a 284B     		ldr	r3, .L492+16
 11117 003c 101C     		mov	r0, r2
 11118 003e 191C     		mov	r1, r3
 11119 0040 FFF7FEFF 		bl	assert_failed
 11120              	.L490:
2781:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(TIM_InputTriggerSource));
 11121              		.loc 1 2781 0 is_stmt 1
 11122 0044 BB1C     		add	r3, r7, #2
 11123 0046 1B88     		ldrh	r3, [r3]
 11124 0048 002B     		cmp	r3, #0
 11125 004a 21D0     		beq	.L491
 11126              		.loc 1 2781 0 is_stmt 0 discriminator 1
 11127 004c BB1C     		add	r3, r7, #2
 11128 004e 1B88     		ldrh	r3, [r3]
 11129 0050 102B     		cmp	r3, #16
 11130 0052 1DD0     		beq	.L491
 11131 0054 BB1C     		add	r3, r7, #2
 11132 0056 1B88     		ldrh	r3, [r3]
 11133 0058 202B     		cmp	r3, #32
 11134 005a 19D0     		beq	.L491
 11135 005c BB1C     		add	r3, r7, #2
 11136 005e 1B88     		ldrh	r3, [r3]
 11137 0060 302B     		cmp	r3, #48
 11138 0062 15D0     		beq	.L491
 11139 0064 BB1C     		add	r3, r7, #2
 11140 0066 1B88     		ldrh	r3, [r3]
 11141 0068 402B     		cmp	r3, #64
 11142 006a 11D0     		beq	.L491
 11143 006c BB1C     		add	r3, r7, #2
 11144 006e 1B88     		ldrh	r3, [r3]
 11145 0070 502B     		cmp	r3, #80
 11146 0072 0DD0     		beq	.L491
 11147 0074 BB1C     		add	r3, r7, #2
 11148 0076 1B88     		ldrh	r3, [r3]
 11149 0078 602B     		cmp	r3, #96
 11150 007a 09D0     		beq	.L491
 11151 007c BB1C     		add	r3, r7, #2
 11152 007e 1B88     		ldrh	r3, [r3]
 11153 0080 702B     		cmp	r3, #112
 11154 0082 05D0     		beq	.L491
 11155 0084 144A     		ldr	r2, .L492+12
 11156 0086 164B     		ldr	r3, .L492+20
 11157 0088 101C     		mov	r0, r2
 11158 008a 191C     		mov	r1, r3
 11159 008c FFF7FEFF 		bl	assert_failed
 11160              	.L491:
2782:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2783:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Get the TIMx SMCR register value */
2784:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 11161              		.loc 1 2784 0 is_stmt 1
 11162 0090 3B1C     		mov	r3, r7
 11163 0092 0E33     		add	r3, r3, #14
 11164 0094 7A68     		ldr	r2, [r7, #4]
 11165 0096 1289     		ldrh	r2, [r2, #8]
 11166 0098 1A80     		strh	r2, [r3]
2785:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the TS Bits */
2786:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_TS));
 11167              		.loc 1 2786 0
 11168 009a 3B1C     		mov	r3, r7
 11169 009c 0E33     		add	r3, r3, #14
 11170 009e 3A1C     		mov	r2, r7
 11171 00a0 0E32     		add	r2, r2, #14
 11172 00a2 1288     		ldrh	r2, [r2]
 11173 00a4 7021     		mov	r1, #112
 11174 00a6 8A43     		bic	r2, r1
 11175 00a8 1A80     		strh	r2, [r3]
2787:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the Input Trigger source */
2788:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpsmcr |= TIM_InputTriggerSource;
 11176              		.loc 1 2788 0
 11177 00aa 3B1C     		mov	r3, r7
 11178 00ac 0E33     		add	r3, r3, #14
 11179 00ae 391C     		mov	r1, r7
 11180 00b0 0E31     		add	r1, r1, #14
 11181 00b2 BA1C     		add	r2, r7, #2
 11182 00b4 0988     		ldrh	r1, [r1]
 11183 00b6 1288     		ldrh	r2, [r2]
 11184 00b8 0A43     		orr	r2, r1
 11185 00ba 1A80     		strh	r2, [r3]
2789:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx SMCR */
2790:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 11186              		.loc 1 2790 0
 11187 00bc 7B68     		ldr	r3, [r7, #4]
 11188 00be 3A1C     		mov	r2, r7
 11189 00c0 0E32     		add	r2, r2, #14
 11190 00c2 1288     		ldrh	r2, [r2]
 11191 00c4 1A81     		strh	r2, [r3, #8]
2791:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 11192              		.loc 1 2791 0
 11193 00c6 BD46     		mov	sp, r7
 11194 00c8 04B0     		add	sp, sp, #16
 11195              		@ sp needed
 11196 00ca 80BD     		pop	{r7, pc}
 11197              	.L493:
 11198              		.align	2
 11199              	.L492:
 11200 00cc 002C0140 		.word	1073818624
 11201 00d0 00040040 		.word	1073742848
 11202 00d4 00400140 		.word	1073823744
 11203 00d8 00000000 		.word	.LC0
 11204 00dc DC0A0000 		.word	2780
 11205 00e0 DD0A0000 		.word	2781
 11206              		.cfi_endproc
 11207              	.LFE113:
 11209              		.section	.text.TIM_SelectOutputTrigger,"ax",%progbits
 11210              		.align	2
 11211              		.global	TIM_SelectOutputTrigger
 11212              		.code	16
 11213              		.thumb_func
 11215              	TIM_SelectOutputTrigger:
 11216              	.LFB114:
2792:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2793:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2794:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Selects the TIMx Trigger Output Mode.
2795:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 6, or 15 to select the TIM peripheral.
2796:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_TRGOSource: specifies the Trigger Output source.
2797:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This paramter can be one of the following values:
2798:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *
2799:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   For all TIMx
2800:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_TRGOSource_Reset:  The UG bit in the TIM_EGR register is used as the trigger outpu
2801:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_TRGOSource_Enable: The Counter Enable CEN is used as the trigger output (TRGO).
2802:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_TRGOSource_Update: The update event is selected as the trigger output (TRGO).
2803:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *
2804:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   For all TIMx except TIM6 
2805:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_TRGOSource_OC1: The trigger output sends a positive pulse when the CC1IF flag
2806:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *                              is to be set, as soon as a capture or compare match occurs (TRGO).
2807:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_TRGOSource_OC1Ref: OC1REF signal is used as the trigger output (TRGO).
2808:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_TRGOSource_OC2Ref: OC2REF signal is used as the trigger output (TRGO).
2809:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_TRGOSource_OC3Ref: OC3REF signal is used as the trigger output (TRGO).
2810:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_TRGOSource_OC4Ref: OC4REF signal is used as the trigger output (TRGO).
2811:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *
2812:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
2813:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2814:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource)
2815:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 11217              		.loc 1 2815 0
 11218              		.cfi_startproc
 11219 0000 80B5     		push	{r7, lr}
 11220              		.cfi_def_cfa_offset 8
 11221              		.cfi_offset 7, -8
 11222              		.cfi_offset 14, -4
 11223 0002 82B0     		sub	sp, sp, #8
 11224              		.cfi_def_cfa_offset 16
 11225 0004 00AF     		add	r7, sp, #0
 11226              		.cfi_def_cfa_register 7
 11227 0006 7860     		str	r0, [r7, #4]
 11228 0008 0A1C     		mov	r2, r1
 11229 000a BB1C     		add	r3, r7, #2
 11230 000c 1A80     		strh	r2, [r3]
2816:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2817:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST9_PERIPH(TIMx));
 11231              		.loc 1 2817 0
 11232 000e 7A68     		ldr	r2, [r7, #4]
 11233 0010 294B     		ldr	r3, .L497
 11234 0012 9A42     		cmp	r2, r3
 11235 0014 16D0     		beq	.L495
 11236              		.loc 1 2817 0 is_stmt 0 discriminator 1
 11237 0016 7A68     		ldr	r2, [r7, #4]
 11238 0018 8023     		mov	r3, #128
 11239 001a DB05     		lsl	r3, r3, #23
 11240 001c 9A42     		cmp	r2, r3
 11241 001e 11D0     		beq	.L495
 11242 0020 7A68     		ldr	r2, [r7, #4]
 11243 0022 264B     		ldr	r3, .L497+4
 11244 0024 9A42     		cmp	r2, r3
 11245 0026 0DD0     		beq	.L495
 11246 0028 7A68     		ldr	r2, [r7, #4]
 11247 002a 254B     		ldr	r3, .L497+8
 11248 002c 9A42     		cmp	r2, r3
 11249 002e 09D0     		beq	.L495
 11250 0030 7A68     		ldr	r2, [r7, #4]
 11251 0032 244B     		ldr	r3, .L497+12
 11252 0034 9A42     		cmp	r2, r3
 11253 0036 05D0     		beq	.L495
 11254 0038 234A     		ldr	r2, .L497+16
 11255 003a 244B     		ldr	r3, .L497+20
 11256 003c 101C     		mov	r0, r2
 11257 003e 191C     		mov	r1, r3
 11258 0040 FFF7FEFF 		bl	assert_failed
 11259              	.L495:
2818:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_TRGO_SOURCE(TIM_TRGOSource));
 11260              		.loc 1 2818 0 is_stmt 1
 11261 0044 BB1C     		add	r3, r7, #2
 11262 0046 1B88     		ldrh	r3, [r3]
 11263 0048 002B     		cmp	r3, #0
 11264 004a 21D0     		beq	.L496
 11265              		.loc 1 2818 0 is_stmt 0 discriminator 1
 11266 004c BB1C     		add	r3, r7, #2
 11267 004e 1B88     		ldrh	r3, [r3]
 11268 0050 102B     		cmp	r3, #16
 11269 0052 1DD0     		beq	.L496
 11270 0054 BB1C     		add	r3, r7, #2
 11271 0056 1B88     		ldrh	r3, [r3]
 11272 0058 202B     		cmp	r3, #32
 11273 005a 19D0     		beq	.L496
 11274 005c BB1C     		add	r3, r7, #2
 11275 005e 1B88     		ldrh	r3, [r3]
 11276 0060 302B     		cmp	r3, #48
 11277 0062 15D0     		beq	.L496
 11278 0064 BB1C     		add	r3, r7, #2
 11279 0066 1B88     		ldrh	r3, [r3]
 11280 0068 402B     		cmp	r3, #64
 11281 006a 11D0     		beq	.L496
 11282 006c BB1C     		add	r3, r7, #2
 11283 006e 1B88     		ldrh	r3, [r3]
 11284 0070 502B     		cmp	r3, #80
 11285 0072 0DD0     		beq	.L496
 11286 0074 BB1C     		add	r3, r7, #2
 11287 0076 1B88     		ldrh	r3, [r3]
 11288 0078 602B     		cmp	r3, #96
 11289 007a 09D0     		beq	.L496
 11290 007c BB1C     		add	r3, r7, #2
 11291 007e 1B88     		ldrh	r3, [r3]
 11292 0080 702B     		cmp	r3, #112
 11293 0082 05D0     		beq	.L496
 11294 0084 104A     		ldr	r2, .L497+16
 11295 0086 124B     		ldr	r3, .L497+24
 11296 0088 101C     		mov	r0, r2
 11297 008a 191C     		mov	r1, r3
 11298 008c FFF7FEFF 		bl	assert_failed
 11299              	.L496:
2819:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2820:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the MMS Bits */
2821:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_MMS);
 11300              		.loc 1 2821 0 is_stmt 1
 11301 0090 7B68     		ldr	r3, [r7, #4]
 11302 0092 9B88     		ldrh	r3, [r3, #4]
 11303 0094 9BB2     		uxth	r3, r3
 11304 0096 7022     		mov	r2, #112
 11305 0098 9343     		bic	r3, r2
 11306 009a 9AB2     		uxth	r2, r3
 11307 009c 7B68     		ldr	r3, [r7, #4]
 11308 009e 9A80     		strh	r2, [r3, #4]
2822:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Select the TRGO source */
2823:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CR2 |=  TIM_TRGOSource;
 11309              		.loc 1 2823 0
 11310 00a0 7B68     		ldr	r3, [r7, #4]
 11311 00a2 9B88     		ldrh	r3, [r3, #4]
 11312 00a4 9AB2     		uxth	r2, r3
 11313 00a6 BB1C     		add	r3, r7, #2
 11314 00a8 1B88     		ldrh	r3, [r3]
 11315 00aa 1343     		orr	r3, r2
 11316 00ac 9AB2     		uxth	r2, r3
 11317 00ae 7B68     		ldr	r3, [r7, #4]
 11318 00b0 9A80     		strh	r2, [r3, #4]
2824:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 11319              		.loc 1 2824 0
 11320 00b2 BD46     		mov	sp, r7
 11321 00b4 02B0     		add	sp, sp, #8
 11322              		@ sp needed
 11323 00b6 80BD     		pop	{r7, pc}
 11324              	.L498:
 11325              		.align	2
 11326              	.L497:
 11327 00b8 002C0140 		.word	1073818624
 11328 00bc 00040040 		.word	1073742848
 11329 00c0 00100040 		.word	1073745920
 11330 00c4 00400140 		.word	1073823744
 11331 00c8 00000000 		.word	.LC0
 11332 00cc 010B0000 		.word	2817
 11333 00d0 020B0000 		.word	2818
 11334              		.cfi_endproc
 11335              	.LFE114:
 11337              		.section	.text.TIM_SelectSlaveMode,"ax",%progbits
 11338              		.align	2
 11339              		.global	TIM_SelectSlaveMode
 11340              		.code	16
 11341              		.thumb_func
 11343              	TIM_SelectSlaveMode:
 11344              	.LFB115:
2825:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2826:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2827:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Selects the TIMx Slave Mode.
2828:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3 or 15 to select the TIM peripheral.
2829:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_SlaveMode: specifies the Timer Slave Mode.
2830:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This paramter can be one of the following values:
2831:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_SlaveMode_Reset: Rising edge of the selected trigger signal (TRGI) re-initializes
2832:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *                               the counter and triggers an update of the registers.
2833:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_SlaveMode_Gated:     The counter clock is enabled when the trigger signal (TRGI) i
2834:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_SlaveMode_Trigger:   The counter starts at a rising edge of the trigger TRGI.
2835:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_SlaveMode_External1: Rising edges of the selected trigger (TRGI) clock the counter
2836:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
2837:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2838:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode)
2839:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 11345              		.loc 1 2839 0
 11346              		.cfi_startproc
 11347 0000 80B5     		push	{r7, lr}
 11348              		.cfi_def_cfa_offset 8
 11349              		.cfi_offset 7, -8
 11350              		.cfi_offset 14, -4
 11351 0002 82B0     		sub	sp, sp, #8
 11352              		.cfi_def_cfa_offset 16
 11353 0004 00AF     		add	r7, sp, #0
 11354              		.cfi_def_cfa_register 7
 11355 0006 7860     		str	r0, [r7, #4]
 11356 0008 0A1C     		mov	r2, r1
 11357 000a BB1C     		add	r3, r7, #2
 11358 000c 1A80     		strh	r2, [r3]
2840:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2841:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx)); 
 11359              		.loc 1 2841 0
 11360 000e 7A68     		ldr	r2, [r7, #4]
 11361 0010 1F4B     		ldr	r3, .L502
 11362 0012 9A42     		cmp	r2, r3
 11363 0014 12D0     		beq	.L500
 11364              		.loc 1 2841 0 is_stmt 0 discriminator 1
 11365 0016 7A68     		ldr	r2, [r7, #4]
 11366 0018 8023     		mov	r3, #128
 11367 001a DB05     		lsl	r3, r3, #23
 11368 001c 9A42     		cmp	r2, r3
 11369 001e 0DD0     		beq	.L500
 11370 0020 7A68     		ldr	r2, [r7, #4]
 11371 0022 1C4B     		ldr	r3, .L502+4
 11372 0024 9A42     		cmp	r2, r3
 11373 0026 09D0     		beq	.L500
 11374 0028 7A68     		ldr	r2, [r7, #4]
 11375 002a 1B4B     		ldr	r3, .L502+8
 11376 002c 9A42     		cmp	r2, r3
 11377 002e 05D0     		beq	.L500
 11378 0030 1A4A     		ldr	r2, .L502+12
 11379 0032 1B4B     		ldr	r3, .L502+16
 11380 0034 101C     		mov	r0, r2
 11381 0036 191C     		mov	r1, r3
 11382 0038 FFF7FEFF 		bl	assert_failed
 11383              	.L500:
2842:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(TIM_SlaveMode));
 11384              		.loc 1 2842 0 is_stmt 1
 11385 003c BB1C     		add	r3, r7, #2
 11386 003e 1B88     		ldrh	r3, [r3]
 11387 0040 042B     		cmp	r3, #4
 11388 0042 11D0     		beq	.L501
 11389              		.loc 1 2842 0 is_stmt 0 discriminator 1
 11390 0044 BB1C     		add	r3, r7, #2
 11391 0046 1B88     		ldrh	r3, [r3]
 11392 0048 052B     		cmp	r3, #5
 11393 004a 0DD0     		beq	.L501
 11394 004c BB1C     		add	r3, r7, #2
 11395 004e 1B88     		ldrh	r3, [r3]
 11396 0050 062B     		cmp	r3, #6
 11397 0052 09D0     		beq	.L501
 11398 0054 BB1C     		add	r3, r7, #2
 11399 0056 1B88     		ldrh	r3, [r3]
 11400 0058 072B     		cmp	r3, #7
 11401 005a 05D0     		beq	.L501
 11402 005c 0F4A     		ldr	r2, .L502+12
 11403 005e 114B     		ldr	r3, .L502+20
 11404 0060 101C     		mov	r0, r2
 11405 0062 191C     		mov	r1, r3
 11406 0064 FFF7FEFF 		bl	assert_failed
 11407              	.L501:
2843:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
2844:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the SMS Bits */
2845:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->SMCR &= (uint16_t)~((uint16_t)TIM_SMCR_SMS);
 11408              		.loc 1 2845 0 is_stmt 1
 11409 0068 7B68     		ldr	r3, [r7, #4]
 11410 006a 1B89     		ldrh	r3, [r3, #8]
 11411 006c 9BB2     		uxth	r3, r3
 11412 006e 0722     		mov	r2, #7
 11413 0070 9343     		bic	r3, r2
 11414 0072 9AB2     		uxth	r2, r3
 11415 0074 7B68     		ldr	r3, [r7, #4]
 11416 0076 1A81     		strh	r2, [r3, #8]
2846:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Select the Slave Mode */
2847:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode;
 11417              		.loc 1 2847 0
 11418 0078 7B68     		ldr	r3, [r7, #4]
 11419 007a 1B89     		ldrh	r3, [r3, #8]
 11420 007c 9AB2     		uxth	r2, r3
 11421 007e BB1C     		add	r3, r7, #2
 11422 0080 1B88     		ldrh	r3, [r3]
 11423 0082 1343     		orr	r3, r2
 11424 0084 9AB2     		uxth	r2, r3
 11425 0086 7B68     		ldr	r3, [r7, #4]
 11426 0088 1A81     		strh	r2, [r3, #8]
2848:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 11427              		.loc 1 2848 0
 11428 008a BD46     		mov	sp, r7
 11429 008c 02B0     		add	sp, sp, #8
 11430              		@ sp needed
 11431 008e 80BD     		pop	{r7, pc}
 11432              	.L503:
 11433              		.align	2
 11434              	.L502:
 11435 0090 002C0140 		.word	1073818624
 11436 0094 00040040 		.word	1073742848
 11437 0098 00400140 		.word	1073823744
 11438 009c 00000000 		.word	.LC0
 11439 00a0 190B0000 		.word	2841
 11440 00a4 1A0B0000 		.word	2842
 11441              		.cfi_endproc
 11442              	.LFE115:
 11444              		.section	.text.TIM_SelectMasterSlaveMode,"ax",%progbits
 11445              		.align	2
 11446              		.global	TIM_SelectMasterSlaveMode
 11447              		.code	16
 11448              		.thumb_func
 11450              	TIM_SelectMasterSlaveMode:
 11451              	.LFB116:
2849:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2850:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2851:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Sets or Resets the TIMx Master/Slave Mode.
2852:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, or 15 to select the TIM peripheral.
2853:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_MasterSlaveMode: specifies the Timer Master Slave Mode.
2854:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This paramter can be one of the following values:
2855:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_MasterSlaveMode_Enable: synchronization between the current timer
2856:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *                                      and its slaves (through TRGO).
2857:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_MasterSlaveMode_Disable: No action
2858:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
2859:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2860:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode)
2861:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 11452              		.loc 1 2861 0
 11453              		.cfi_startproc
 11454 0000 80B5     		push	{r7, lr}
 11455              		.cfi_def_cfa_offset 8
 11456              		.cfi_offset 7, -8
 11457              		.cfi_offset 14, -4
 11458 0002 82B0     		sub	sp, sp, #8
 11459              		.cfi_def_cfa_offset 16
 11460 0004 00AF     		add	r7, sp, #0
 11461              		.cfi_def_cfa_register 7
 11462 0006 7860     		str	r0, [r7, #4]
 11463 0008 0A1C     		mov	r2, r1
 11464 000a BB1C     		add	r3, r7, #2
 11465 000c 1A80     		strh	r2, [r3]
2862:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2863:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 11466              		.loc 1 2863 0
 11467 000e 7A68     		ldr	r2, [r7, #4]
 11468 0010 1C4B     		ldr	r3, .L507
 11469 0012 9A42     		cmp	r2, r3
 11470 0014 12D0     		beq	.L505
 11471              		.loc 1 2863 0 is_stmt 0 discriminator 1
 11472 0016 7A68     		ldr	r2, [r7, #4]
 11473 0018 8023     		mov	r3, #128
 11474 001a DB05     		lsl	r3, r3, #23
 11475 001c 9A42     		cmp	r2, r3
 11476 001e 0DD0     		beq	.L505
 11477 0020 7A68     		ldr	r2, [r7, #4]
 11478 0022 194B     		ldr	r3, .L507+4
 11479 0024 9A42     		cmp	r2, r3
 11480 0026 09D0     		beq	.L505
 11481 0028 7A68     		ldr	r2, [r7, #4]
 11482 002a 184B     		ldr	r3, .L507+8
 11483 002c 9A42     		cmp	r2, r3
 11484 002e 05D0     		beq	.L505
 11485 0030 174A     		ldr	r2, .L507+12
 11486 0032 184B     		ldr	r3, .L507+16
 11487 0034 101C     		mov	r0, r2
 11488 0036 191C     		mov	r1, r3
 11489 0038 FFF7FEFF 		bl	assert_failed
 11490              	.L505:
2864:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_MSM_STATE(TIM_MasterSlaveMode));
 11491              		.loc 1 2864 0 is_stmt 1
 11492 003c BB1C     		add	r3, r7, #2
 11493 003e 1B88     		ldrh	r3, [r3]
 11494 0040 802B     		cmp	r3, #128
 11495 0042 0AD0     		beq	.L506
 11496              		.loc 1 2864 0 is_stmt 0 discriminator 1
 11497 0044 BB1C     		add	r3, r7, #2
 11498 0046 1B88     		ldrh	r3, [r3]
 11499 0048 002B     		cmp	r3, #0
 11500 004a 06D0     		beq	.L506
 11501 004c 104A     		ldr	r2, .L507+12
 11502 004e B323     		mov	r3, #179
 11503 0050 1B01     		lsl	r3, r3, #4
 11504 0052 101C     		mov	r0, r2
 11505 0054 191C     		mov	r1, r3
 11506 0056 FFF7FEFF 		bl	assert_failed
 11507              	.L506:
2865:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
2866:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the MSM Bit */
2867:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->SMCR &= (uint16_t)~((uint16_t)TIM_SMCR_MSM);
 11508              		.loc 1 2867 0 is_stmt 1
 11509 005a 7B68     		ldr	r3, [r7, #4]
 11510 005c 1B89     		ldrh	r3, [r3, #8]
 11511 005e 9BB2     		uxth	r3, r3
 11512 0060 8022     		mov	r2, #128
 11513 0062 9343     		bic	r3, r2
 11514 0064 9AB2     		uxth	r2, r3
 11515 0066 7B68     		ldr	r3, [r7, #4]
 11516 0068 1A81     		strh	r2, [r3, #8]
2868:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
2869:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set or Reset the MSM Bit */
2870:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->SMCR |= TIM_MasterSlaveMode;
 11517              		.loc 1 2870 0
 11518 006a 7B68     		ldr	r3, [r7, #4]
 11519 006c 1B89     		ldrh	r3, [r3, #8]
 11520 006e 9AB2     		uxth	r2, r3
 11521 0070 BB1C     		add	r3, r7, #2
 11522 0072 1B88     		ldrh	r3, [r3]
 11523 0074 1343     		orr	r3, r2
 11524 0076 9AB2     		uxth	r2, r3
 11525 0078 7B68     		ldr	r3, [r7, #4]
 11526 007a 1A81     		strh	r2, [r3, #8]
2871:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 11527              		.loc 1 2871 0
 11528 007c BD46     		mov	sp, r7
 11529 007e 02B0     		add	sp, sp, #8
 11530              		@ sp needed
 11531 0080 80BD     		pop	{r7, pc}
 11532              	.L508:
 11533 0082 C046     		.align	2
 11534              	.L507:
 11535 0084 002C0140 		.word	1073818624
 11536 0088 00040040 		.word	1073742848
 11537 008c 00400140 		.word	1073823744
 11538 0090 00000000 		.word	.LC0
 11539 0094 2F0B0000 		.word	2863
 11540              		.cfi_endproc
 11541              	.LFE116:
 11543              		.section	.text.TIM_ETRConfig,"ax",%progbits
 11544              		.align	2
 11545              		.global	TIM_ETRConfig
 11546              		.code	16
 11547              		.thumb_func
 11549              	TIM_ETRConfig:
 11550              	.LFB117:
2872:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2873:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2874:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Configures the TIMx External Trigger (ETR).
2875:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2 or 3 to select the TIM peripheral.
2876:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2877:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
2878:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2879:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2880:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2881:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2882:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2883:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
2884:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2885:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2886:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2887:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F
2888:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
2889:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2890:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRGPolarity,
2891:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                    uint16_t ExtTRGFilter)
2892:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 11551              		.loc 1 2892 0
 11552              		.cfi_startproc
 11553 0000 80B5     		push	{r7, lr}
 11554              		.cfi_def_cfa_offset 8
 11555              		.cfi_offset 7, -8
 11556              		.cfi_offset 14, -4
 11557 0002 86B0     		sub	sp, sp, #24
 11558              		.cfi_def_cfa_offset 32
 11559 0004 00AF     		add	r7, sp, #0
 11560              		.cfi_def_cfa_register 7
 11561 0006 F860     		str	r0, [r7, #12]
 11562 0008 081C     		mov	r0, r1
 11563 000a 111C     		mov	r1, r2
 11564 000c 1A1C     		mov	r2, r3
 11565 000e 3B1C     		mov	r3, r7
 11566 0010 0A33     		add	r3, r3, #10
 11567 0012 1880     		strh	r0, [r3]
 11568 0014 3B1C     		mov	r3, r7
 11569 0016 0833     		add	r3, r3, #8
 11570 0018 1980     		strh	r1, [r3]
 11571 001a BB1D     		add	r3, r7, #6
 11572 001c 1A80     		strh	r2, [r3]
2893:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpsmcr = 0;
 11573              		.loc 1 2893 0
 11574 001e 3B1C     		mov	r3, r7
 11575 0020 1633     		add	r3, r3, #22
 11576 0022 0022     		mov	r2, #0
 11577 0024 1A80     		strh	r2, [r3]
2894:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
2895:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2896:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 11578              		.loc 1 2896 0
 11579 0026 FA68     		ldr	r2, [r7, #12]
 11580 0028 3C4B     		ldr	r3, .L514
 11581 002a 9A42     		cmp	r2, r3
 11582 002c 0FD0     		beq	.L510
 11583              		.loc 1 2896 0 is_stmt 0 discriminator 1
 11584 002e FA68     		ldr	r2, [r7, #12]
 11585 0030 8023     		mov	r3, #128
 11586 0032 DB05     		lsl	r3, r3, #23
 11587 0034 9A42     		cmp	r2, r3
 11588 0036 0AD0     		beq	.L510
 11589 0038 FA68     		ldr	r2, [r7, #12]
 11590 003a 394B     		ldr	r3, .L514+4
 11591 003c 9A42     		cmp	r2, r3
 11592 003e 06D0     		beq	.L510
 11593 0040 384A     		ldr	r2, .L514+8
 11594 0042 B523     		mov	r3, #181
 11595 0044 1B01     		lsl	r3, r3, #4
 11596 0046 101C     		mov	r0, r2
 11597 0048 191C     		mov	r1, r3
 11598 004a FFF7FEFF 		bl	assert_failed
 11599              	.L510:
2897:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
 11600              		.loc 1 2897 0 is_stmt 1
 11601 004e 3B1C     		mov	r3, r7
 11602 0050 0A33     		add	r3, r3, #10
 11603 0052 1B88     		ldrh	r3, [r3]
 11604 0054 002B     		cmp	r3, #0
 11605 0056 1AD0     		beq	.L511
 11606              		.loc 1 2897 0 is_stmt 0 discriminator 1
 11607 0058 3B1C     		mov	r3, r7
 11608 005a 0A33     		add	r3, r3, #10
 11609 005c 1A88     		ldrh	r2, [r3]
 11610 005e 8023     		mov	r3, #128
 11611 0060 5B01     		lsl	r3, r3, #5
 11612 0062 9A42     		cmp	r2, r3
 11613 0064 13D0     		beq	.L511
 11614 0066 3B1C     		mov	r3, r7
 11615 0068 0A33     		add	r3, r3, #10
 11616 006a 1A88     		ldrh	r2, [r3]
 11617 006c 8023     		mov	r3, #128
 11618 006e 9B01     		lsl	r3, r3, #6
 11619 0070 9A42     		cmp	r2, r3
 11620 0072 0CD0     		beq	.L511
 11621 0074 3B1C     		mov	r3, r7
 11622 0076 0A33     		add	r3, r3, #10
 11623 0078 1A88     		ldrh	r2, [r3]
 11624 007a C023     		mov	r3, #192
 11625 007c 9B01     		lsl	r3, r3, #6
 11626 007e 9A42     		cmp	r2, r3
 11627 0080 05D0     		beq	.L511
 11628 0082 284A     		ldr	r2, .L514+8
 11629 0084 284B     		ldr	r3, .L514+12
 11630 0086 101C     		mov	r0, r2
 11631 0088 191C     		mov	r1, r3
 11632 008a FFF7FEFF 		bl	assert_failed
 11633              	.L511:
2898:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
 11634              		.loc 1 2898 0 is_stmt 1
 11635 008e 3B1C     		mov	r3, r7
 11636 0090 0833     		add	r3, r3, #8
 11637 0092 1A88     		ldrh	r2, [r3]
 11638 0094 8023     		mov	r3, #128
 11639 0096 1B02     		lsl	r3, r3, #8
 11640 0098 9A42     		cmp	r2, r3
 11641 009a 0AD0     		beq	.L512
 11642              		.loc 1 2898 0 is_stmt 0 discriminator 1
 11643 009c 3B1C     		mov	r3, r7
 11644 009e 0833     		add	r3, r3, #8
 11645 00a0 1B88     		ldrh	r3, [r3]
 11646 00a2 002B     		cmp	r3, #0
 11647 00a4 05D0     		beq	.L512
 11648 00a6 1F4A     		ldr	r2, .L514+8
 11649 00a8 204B     		ldr	r3, .L514+16
 11650 00aa 101C     		mov	r0, r2
 11651 00ac 191C     		mov	r1, r3
 11652 00ae FFF7FEFF 		bl	assert_failed
 11653              	.L512:
2899:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
 11654              		.loc 1 2899 0 is_stmt 1
 11655 00b2 BB1D     		add	r3, r7, #6
 11656 00b4 1B88     		ldrh	r3, [r3]
 11657 00b6 0F2B     		cmp	r3, #15
 11658 00b8 05D9     		bls	.L513
 11659              		.loc 1 2899 0 is_stmt 0 discriminator 1
 11660 00ba 1A4A     		ldr	r2, .L514+8
 11661 00bc 1C4B     		ldr	r3, .L514+20
 11662 00be 101C     		mov	r0, r2
 11663 00c0 191C     		mov	r1, r3
 11664 00c2 FFF7FEFF 		bl	assert_failed
 11665              	.L513:
2900:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
2901:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 11666              		.loc 1 2901 0 is_stmt 1
 11667 00c6 3B1C     		mov	r3, r7
 11668 00c8 1633     		add	r3, r3, #22
 11669 00ca FA68     		ldr	r2, [r7, #12]
 11670 00cc 1289     		ldrh	r2, [r2, #8]
 11671 00ce 1A80     		strh	r2, [r3]
2902:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Reset the ETR Bits */
2903:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpsmcr &= SMCR_ETR_MASK;
 11672              		.loc 1 2903 0
 11673 00d0 3B1C     		mov	r3, r7
 11674 00d2 1633     		add	r3, r3, #22
 11675 00d4 3A1C     		mov	r2, r7
 11676 00d6 1632     		add	r2, r2, #22
 11677 00d8 1188     		ldrh	r1, [r2]
 11678 00da FF22     		mov	r2, #255
 11679 00dc 0A40     		and	r2, r1
 11680 00de 1A80     		strh	r2, [r3]
2904:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
2905:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpsmcr |= (uint16_t)(TIM_ExtTRGPrescaler | (uint16_t)(TIM_ExtTRGPolarity | (uint16_t)(ExtTRGFilt
 11681              		.loc 1 2905 0
 11682 00e0 BB1D     		add	r3, r7, #6
 11683 00e2 1B88     		ldrh	r3, [r3]
 11684 00e4 1B02     		lsl	r3, r3, #8
 11685 00e6 9AB2     		uxth	r2, r3
 11686 00e8 3B1C     		mov	r3, r7
 11687 00ea 0833     		add	r3, r3, #8
 11688 00ec 1B88     		ldrh	r3, [r3]
 11689 00ee 1343     		orr	r3, r2
 11690 00f0 9AB2     		uxth	r2, r3
 11691 00f2 3B1C     		mov	r3, r7
 11692 00f4 0A33     		add	r3, r3, #10
 11693 00f6 1B88     		ldrh	r3, [r3]
 11694 00f8 1343     		orr	r3, r2
 11695 00fa 99B2     		uxth	r1, r3
 11696 00fc 3B1C     		mov	r3, r7
 11697 00fe 1633     		add	r3, r3, #22
 11698 0100 3A1C     		mov	r2, r7
 11699 0102 1632     		add	r2, r2, #22
 11700 0104 1288     		ldrh	r2, [r2]
 11701 0106 0A43     		orr	r2, r1
 11702 0108 1A80     		strh	r2, [r3]
2906:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx SMCR */
2907:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 11703              		.loc 1 2907 0
 11704 010a FB68     		ldr	r3, [r7, #12]
 11705 010c 3A1C     		mov	r2, r7
 11706 010e 1632     		add	r2, r2, #22
 11707 0110 1288     		ldrh	r2, [r2]
 11708 0112 1A81     		strh	r2, [r3, #8]
2908:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 11709              		.loc 1 2908 0
 11710 0114 BD46     		mov	sp, r7
 11711 0116 06B0     		add	sp, sp, #24
 11712              		@ sp needed
 11713 0118 80BD     		pop	{r7, pc}
 11714              	.L515:
 11715 011a C046     		.align	2
 11716              	.L514:
 11717 011c 002C0140 		.word	1073818624
 11718 0120 00040040 		.word	1073742848
 11719 0124 00000000 		.word	.LC0
 11720 0128 510B0000 		.word	2897
 11721 012c 520B0000 		.word	2898
 11722 0130 530B0000 		.word	2899
 11723              		.cfi_endproc
 11724              	.LFE117:
 11726              		.section	.text.TIM_EncoderInterfaceConfig,"ax",%progbits
 11727              		.align	2
 11728              		.global	TIM_EncoderInterfaceConfig
 11729              		.code	16
 11730              		.thumb_func
 11732              	TIM_EncoderInterfaceConfig:
 11733              	.LFB118:
2909:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2910:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2911:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @}
2912:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2913:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2914:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /** @defgroup TIM_Group8 Specific interface management functions
2915:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  *  @brief    Specific interface management functions 
2916:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  *
2917:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** @verbatim
2918:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  ===============================================================================
2919:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****              ##### Specific interface management functions #####
2920:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  ===============================================================================
2921:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2922:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** @endverbatim
2923:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @{
2924:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2925:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2926:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2927:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Configures the TIMx Encoder Interface.
2928:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be  1, 2 or 3 to select the TIM peripheral.
2929:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_EncoderMode: specifies the TIMx Encoder Mode.
2930:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
2931:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_EncoderMode_TI1: Counter counts on TI1FP1 edge depending on TI2FP2 level.
2932:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_EncoderMode_TI2: Counter counts on TI2FP2 edge depending on TI1FP1 level.
2933:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_EncoderMode_TI12: Counter counts on both TI1FP1 and TI2FP2 edges depending
2934:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *                                on the level of the other input.
2935:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_IC1Polarity: specifies the IC1 Polarity
2936:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parmeter can be one of the following values:
2937:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPolarity_Falling: IC Falling edge.
2938:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPolarity_Rising: IC Rising edge.
2939:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_IC2Polarity: specifies the IC2 Polarity
2940:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parmeter can be one of the following values:
2941:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPolarity_Falling: IC Falling edge.
2942:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPolarity_Rising: IC Rising edge.
2943:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
2944:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2945:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_EncoderInterfaceConfig(TIM_TypeDef* TIMx, uint16_t TIM_EncoderMode,
2946:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                                 uint16_t TIM_IC1Polarity, uint16_t TIM_IC2Polarity)
2947:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 11734              		.loc 1 2947 0
 11735              		.cfi_startproc
 11736 0000 80B5     		push	{r7, lr}
 11737              		.cfi_def_cfa_offset 8
 11738              		.cfi_offset 7, -8
 11739              		.cfi_offset 14, -4
 11740 0002 86B0     		sub	sp, sp, #24
 11741              		.cfi_def_cfa_offset 32
 11742 0004 00AF     		add	r7, sp, #0
 11743              		.cfi_def_cfa_register 7
 11744 0006 F860     		str	r0, [r7, #12]
 11745 0008 081C     		mov	r0, r1
 11746 000a 111C     		mov	r1, r2
 11747 000c 1A1C     		mov	r2, r3
 11748 000e 3B1C     		mov	r3, r7
 11749 0010 0A33     		add	r3, r3, #10
 11750 0012 1880     		strh	r0, [r3]
 11751 0014 3B1C     		mov	r3, r7
 11752 0016 0833     		add	r3, r3, #8
 11753 0018 1980     		strh	r1, [r3]
 11754 001a BB1D     		add	r3, r7, #6
 11755 001c 1A80     		strh	r2, [r3]
2948:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpsmcr = 0;
 11756              		.loc 1 2948 0
 11757 001e 3B1C     		mov	r3, r7
 11758 0020 1633     		add	r3, r3, #22
 11759 0022 0022     		mov	r2, #0
 11760 0024 1A80     		strh	r2, [r3]
2949:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccmr1 = 0;
 11761              		.loc 1 2949 0
 11762 0026 3B1C     		mov	r3, r7
 11763 0028 1433     		add	r3, r3, #20
 11764 002a 0022     		mov	r2, #0
 11765 002c 1A80     		strh	r2, [r3]
2950:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccer = 0;
 11766              		.loc 1 2950 0
 11767 002e 3B1C     		mov	r3, r7
 11768 0030 1233     		add	r3, r3, #18
 11769 0032 0022     		mov	r2, #0
 11770 0034 1A80     		strh	r2, [r3]
2951:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     
2952:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2953:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 11771              		.loc 1 2953 0
 11772 0036 FA68     		ldr	r2, [r7, #12]
 11773 0038 544B     		ldr	r3, .L521
 11774 003a 9A42     		cmp	r2, r3
 11775 003c 0ED0     		beq	.L517
 11776              		.loc 1 2953 0 is_stmt 0 discriminator 1
 11777 003e FA68     		ldr	r2, [r7, #12]
 11778 0040 8023     		mov	r3, #128
 11779 0042 DB05     		lsl	r3, r3, #23
 11780 0044 9A42     		cmp	r2, r3
 11781 0046 09D0     		beq	.L517
 11782 0048 FA68     		ldr	r2, [r7, #12]
 11783 004a 514B     		ldr	r3, .L521+4
 11784 004c 9A42     		cmp	r2, r3
 11785 004e 05D0     		beq	.L517
 11786 0050 504A     		ldr	r2, .L521+8
 11787 0052 514B     		ldr	r3, .L521+12
 11788 0054 101C     		mov	r0, r2
 11789 0056 191C     		mov	r1, r3
 11790 0058 FFF7FEFF 		bl	assert_failed
 11791              	.L517:
2954:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_ENCODER_MODE(TIM_EncoderMode));
 11792              		.loc 1 2954 0 is_stmt 1
 11793 005c 3B1C     		mov	r3, r7
 11794 005e 0A33     		add	r3, r3, #10
 11795 0060 1B88     		ldrh	r3, [r3]
 11796 0062 012B     		cmp	r3, #1
 11797 0064 0FD0     		beq	.L518
 11798              		.loc 1 2954 0 is_stmt 0 discriminator 1
 11799 0066 3B1C     		mov	r3, r7
 11800 0068 0A33     		add	r3, r3, #10
 11801 006a 1B88     		ldrh	r3, [r3]
 11802 006c 022B     		cmp	r3, #2
 11803 006e 0AD0     		beq	.L518
 11804 0070 3B1C     		mov	r3, r7
 11805 0072 0A33     		add	r3, r3, #10
 11806 0074 1B88     		ldrh	r3, [r3]
 11807 0076 032B     		cmp	r3, #3
 11808 0078 05D0     		beq	.L518
 11809 007a 464A     		ldr	r2, .L521+8
 11810 007c 474B     		ldr	r3, .L521+16
 11811 007e 101C     		mov	r0, r2
 11812 0080 191C     		mov	r1, r3
 11813 0082 FFF7FEFF 		bl	assert_failed
 11814              	.L518:
2955:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC1Polarity));
 11815              		.loc 1 2955 0 is_stmt 1
 11816 0086 3B1C     		mov	r3, r7
 11817 0088 0833     		add	r3, r3, #8
 11818 008a 1B88     		ldrh	r3, [r3]
 11819 008c 002B     		cmp	r3, #0
 11820 008e 0FD0     		beq	.L519
 11821              		.loc 1 2955 0 is_stmt 0 discriminator 1
 11822 0090 3B1C     		mov	r3, r7
 11823 0092 0833     		add	r3, r3, #8
 11824 0094 1B88     		ldrh	r3, [r3]
 11825 0096 022B     		cmp	r3, #2
 11826 0098 0AD0     		beq	.L519
 11827 009a 3B1C     		mov	r3, r7
 11828 009c 0833     		add	r3, r3, #8
 11829 009e 1B88     		ldrh	r3, [r3]
 11830 00a0 0A2B     		cmp	r3, #10
 11831 00a2 05D0     		beq	.L519
 11832 00a4 3B4A     		ldr	r2, .L521+8
 11833 00a6 3E4B     		ldr	r3, .L521+20
 11834 00a8 101C     		mov	r0, r2
 11835 00aa 191C     		mov	r1, r3
 11836 00ac FFF7FEFF 		bl	assert_failed
 11837              	.L519:
2956:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC2Polarity));
 11838              		.loc 1 2956 0 is_stmt 1
 11839 00b0 BB1D     		add	r3, r7, #6
 11840 00b2 1B88     		ldrh	r3, [r3]
 11841 00b4 002B     		cmp	r3, #0
 11842 00b6 0DD0     		beq	.L520
 11843              		.loc 1 2956 0 is_stmt 0 discriminator 1
 11844 00b8 BB1D     		add	r3, r7, #6
 11845 00ba 1B88     		ldrh	r3, [r3]
 11846 00bc 022B     		cmp	r3, #2
 11847 00be 09D0     		beq	.L520
 11848 00c0 BB1D     		add	r3, r7, #6
 11849 00c2 1B88     		ldrh	r3, [r3]
 11850 00c4 0A2B     		cmp	r3, #10
 11851 00c6 05D0     		beq	.L520
 11852 00c8 324A     		ldr	r2, .L521+8
 11853 00ca 364B     		ldr	r3, .L521+24
 11854 00cc 101C     		mov	r0, r2
 11855 00ce 191C     		mov	r1, r3
 11856 00d0 FFF7FEFF 		bl	assert_failed
 11857              	.L520:
2957:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
2958:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Get the TIMx SMCR register value */
2959:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 11858              		.loc 1 2959 0 is_stmt 1
 11859 00d4 3B1C     		mov	r3, r7
 11860 00d6 1633     		add	r3, r3, #22
 11861 00d8 FA68     		ldr	r2, [r7, #12]
 11862 00da 1289     		ldrh	r2, [r2, #8]
 11863 00dc 1A80     		strh	r2, [r3]
2960:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Get the TIMx CCMR1 register value */
2961:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 11864              		.loc 1 2961 0
 11865 00de 3B1C     		mov	r3, r7
 11866 00e0 1433     		add	r3, r3, #20
 11867 00e2 FA68     		ldr	r2, [r7, #12]
 11868 00e4 128B     		ldrh	r2, [r2, #24]
 11869 00e6 1A80     		strh	r2, [r3]
2962:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Get the TIMx CCER register value */
2963:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer = TIMx->CCER;
 11870              		.loc 1 2963 0
 11871 00e8 3B1C     		mov	r3, r7
 11872 00ea 1233     		add	r3, r3, #18
 11873 00ec FA68     		ldr	r2, [r7, #12]
 11874 00ee 128C     		ldrh	r2, [r2, #32]
 11875 00f0 1A80     		strh	r2, [r3]
2964:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the encoder Mode */
2965:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_SMS));
 11876              		.loc 1 2965 0
 11877 00f2 3B1C     		mov	r3, r7
 11878 00f4 1633     		add	r3, r3, #22
 11879 00f6 3A1C     		mov	r2, r7
 11880 00f8 1632     		add	r2, r2, #22
 11881 00fa 1288     		ldrh	r2, [r2]
 11882 00fc 0721     		mov	r1, #7
 11883 00fe 8A43     		bic	r2, r1
 11884 0100 1A80     		strh	r2, [r3]
2966:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpsmcr |= TIM_EncoderMode;
 11885              		.loc 1 2966 0
 11886 0102 3B1C     		mov	r3, r7
 11887 0104 1633     		add	r3, r3, #22
 11888 0106 391C     		mov	r1, r7
 11889 0108 1631     		add	r1, r1, #22
 11890 010a 3A1C     		mov	r2, r7
 11891 010c 0A32     		add	r2, r2, #10
 11892 010e 0988     		ldrh	r1, [r1]
 11893 0110 1288     		ldrh	r2, [r2]
 11894 0112 0A43     		orr	r2, r1
 11895 0114 1A80     		strh	r2, [r3]
2967:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Select the Capture Compare 1 and the Capture Compare 2 as input */
2968:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCMR1_CC1S)) & (uint16_t)(~((uint16_t)TIM_CCMR1
 11896              		.loc 1 2968 0
 11897 0116 3B1C     		mov	r3, r7
 11898 0118 1433     		add	r3, r3, #20
 11899 011a 3A1C     		mov	r2, r7
 11900 011c 1432     		add	r2, r2, #20
 11901 011e 1188     		ldrh	r1, [r2]
 11902 0120 214A     		ldr	r2, .L521+28
 11903 0122 0A40     		and	r2, r1
 11904 0124 1A80     		strh	r2, [r3]
2969:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
 11905              		.loc 1 2969 0
 11906 0126 3B1C     		mov	r3, r7
 11907 0128 1433     		add	r3, r3, #20
 11908 012a 3A1C     		mov	r2, r7
 11909 012c 1432     		add	r2, r2, #20
 11910 012e 1288     		ldrh	r2, [r2]
 11911 0130 0221     		mov	r1, #2
 11912 0132 FF31     		add	r1, r1, #255
 11913 0134 0A43     		orr	r2, r1
 11914 0136 1A80     		strh	r2, [r3]
2970:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the TI1 and the TI2 Polarities */
2971:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   //tmpccer &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCER_CC1P)) & ((uint16_t)~((uint16_t)TIM_CCER_
2972:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC1P | TIM_CCER_CC1NP)) & (uint16_t)~((uint16_t)(TIM_C
 11915              		.loc 1 2972 0
 11916 0138 3B1C     		mov	r3, r7
 11917 013a 1233     		add	r3, r3, #18
 11918 013c 3A1C     		mov	r2, r7
 11919 013e 1232     		add	r2, r2, #18
 11920 0140 1288     		ldrh	r2, [r2]
 11921 0142 AA21     		mov	r1, #170
 11922 0144 8A43     		bic	r2, r1
 11923 0146 1A80     		strh	r2, [r3]
2973:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
 11924              		.loc 1 2973 0
 11925 0148 BB1D     		add	r3, r7, #6
 11926 014a 1B88     		ldrh	r3, [r3]
 11927 014c 1B01     		lsl	r3, r3, #4
 11928 014e 9AB2     		uxth	r2, r3
 11929 0150 3B1C     		mov	r3, r7
 11930 0152 0833     		add	r3, r3, #8
 11931 0154 1B88     		ldrh	r3, [r3]
 11932 0156 1343     		orr	r3, r2
 11933 0158 99B2     		uxth	r1, r3
 11934 015a 3B1C     		mov	r3, r7
 11935 015c 1233     		add	r3, r3, #18
 11936 015e 3A1C     		mov	r2, r7
 11937 0160 1232     		add	r2, r2, #18
 11938 0162 1288     		ldrh	r2, [r2]
 11939 0164 0A43     		orr	r2, r1
 11940 0166 1A80     		strh	r2, [r3]
2974:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx SMCR */
2975:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 11941              		.loc 1 2975 0
 11942 0168 FB68     		ldr	r3, [r7, #12]
 11943 016a 3A1C     		mov	r2, r7
 11944 016c 1632     		add	r2, r2, #22
 11945 016e 1288     		ldrh	r2, [r2]
 11946 0170 1A81     		strh	r2, [r3, #8]
2976:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCMR1 */
2977:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 11947              		.loc 1 2977 0
 11948 0172 FB68     		ldr	r3, [r7, #12]
 11949 0174 3A1C     		mov	r2, r7
 11950 0176 1432     		add	r2, r2, #20
 11951 0178 1288     		ldrh	r2, [r2]
 11952 017a 1A83     		strh	r2, [r3, #24]
2978:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCER */
2979:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCER = tmpccer;
 11953              		.loc 1 2979 0
 11954 017c FB68     		ldr	r3, [r7, #12]
 11955 017e 3A1C     		mov	r2, r7
 11956 0180 1232     		add	r2, r2, #18
 11957 0182 1288     		ldrh	r2, [r2]
 11958 0184 1A84     		strh	r2, [r3, #32]
2980:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 11959              		.loc 1 2980 0
 11960 0186 BD46     		mov	sp, r7
 11961 0188 06B0     		add	sp, sp, #24
 11962              		@ sp needed
 11963 018a 80BD     		pop	{r7, pc}
 11964              	.L522:
 11965              		.align	2
 11966              	.L521:
 11967 018c 002C0140 		.word	1073818624
 11968 0190 00040040 		.word	1073742848
 11969 0194 00000000 		.word	.LC0
 11970 0198 890B0000 		.word	2953
 11971 019c 8A0B0000 		.word	2954
 11972 01a0 8B0B0000 		.word	2955
 11973 01a4 8C0B0000 		.word	2956
 11974 01a8 FCFCFFFF 		.word	-772
 11975              		.cfi_endproc
 11976              	.LFE118:
 11978              		.section	.text.TIM_SelectHallSensor,"ax",%progbits
 11979              		.align	2
 11980              		.global	TIM_SelectHallSensor
 11981              		.code	16
 11982              		.thumb_func
 11984              	TIM_SelectHallSensor:
 11985              	.LFB119:
2981:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
2982:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
2983:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Enables or disables the TIMx's Hall sensor interface.
2984:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2 or 3 to select the TIM peripheral.
2985:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  NewState: new state of the TIMx Hall sensor interface.
2986:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
2987:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
2988:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
2989:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_SelectHallSensor(TIM_TypeDef* TIMx, FunctionalState NewState)
2990:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 11986              		.loc 1 2990 0
 11987              		.cfi_startproc
 11988 0000 80B5     		push	{r7, lr}
 11989              		.cfi_def_cfa_offset 8
 11990              		.cfi_offset 7, -8
 11991              		.cfi_offset 14, -4
 11992 0002 82B0     		sub	sp, sp, #8
 11993              		.cfi_def_cfa_offset 16
 11994 0004 00AF     		add	r7, sp, #0
 11995              		.cfi_def_cfa_register 7
 11996 0006 7860     		str	r0, [r7, #4]
 11997 0008 0A1C     		mov	r2, r1
 11998 000a FB1C     		add	r3, r7, #3
 11999 000c 1A70     		strb	r2, [r3]
2991:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Check the parameters */
2992:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 12000              		.loc 1 2992 0
 12001 000e 7A68     		ldr	r2, [r7, #4]
 12002 0010 1C4B     		ldr	r3, .L528
 12003 0012 9A42     		cmp	r2, r3
 12004 0014 0FD0     		beq	.L524
 12005              		.loc 1 2992 0 is_stmt 0 discriminator 1
 12006 0016 7A68     		ldr	r2, [r7, #4]
 12007 0018 8023     		mov	r3, #128
 12008 001a DB05     		lsl	r3, r3, #23
 12009 001c 9A42     		cmp	r2, r3
 12010 001e 0AD0     		beq	.L524
 12011 0020 7A68     		ldr	r2, [r7, #4]
 12012 0022 194B     		ldr	r3, .L528+4
 12013 0024 9A42     		cmp	r2, r3
 12014 0026 06D0     		beq	.L524
 12015 0028 184A     		ldr	r2, .L528+8
 12016 002a BB23     		mov	r3, #187
 12017 002c 1B01     		lsl	r3, r3, #4
 12018 002e 101C     		mov	r0, r2
 12019 0030 191C     		mov	r1, r3
 12020 0032 FFF7FEFF 		bl	assert_failed
 12021              	.L524:
2993:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 12022              		.loc 1 2993 0 is_stmt 1
 12023 0036 FB1C     		add	r3, r7, #3
 12024 0038 1B78     		ldrb	r3, [r3]
 12025 003a 002B     		cmp	r3, #0
 12026 003c 09D0     		beq	.L525
 12027              		.loc 1 2993 0 is_stmt 0 discriminator 1
 12028 003e FB1C     		add	r3, r7, #3
 12029 0040 1B78     		ldrb	r3, [r3]
 12030 0042 012B     		cmp	r3, #1
 12031 0044 05D0     		beq	.L525
 12032 0046 114A     		ldr	r2, .L528+8
 12033 0048 114B     		ldr	r3, .L528+12
 12034 004a 101C     		mov	r0, r2
 12035 004c 191C     		mov	r1, r3
 12036 004e FFF7FEFF 		bl	assert_failed
 12037              	.L525:
2994:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   
2995:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   if (NewState != DISABLE)
 12038              		.loc 1 2995 0 is_stmt 1
 12039 0052 FB1C     		add	r3, r7, #3
 12040 0054 1B78     		ldrb	r3, [r3]
 12041 0056 002B     		cmp	r3, #0
 12042 0058 08D0     		beq	.L526
2996:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
2997:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Set the TI1S Bit */
2998:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIMx->CR2 |= TIM_CR2_TI1S;
 12043              		.loc 1 2998 0
 12044 005a 7B68     		ldr	r3, [r7, #4]
 12045 005c 9B88     		ldrh	r3, [r3, #4]
 12046 005e 9BB2     		uxth	r3, r3
 12047 0060 8022     		mov	r2, #128
 12048 0062 1343     		orr	r3, r2
 12049 0064 9AB2     		uxth	r2, r3
 12050 0066 7B68     		ldr	r3, [r7, #4]
 12051 0068 9A80     		strh	r2, [r3, #4]
 12052 006a 07E0     		b	.L523
 12053              	.L526:
2999:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
3000:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   else
3001:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   {
3002:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     /* Reset the TI1S Bit */
3003:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_TI1S);
 12054              		.loc 1 3003 0
 12055 006c 7B68     		ldr	r3, [r7, #4]
 12056 006e 9B88     		ldrh	r3, [r3, #4]
 12057 0070 9BB2     		uxth	r3, r3
 12058 0072 8022     		mov	r2, #128
 12059 0074 9343     		bic	r3, r2
 12060 0076 9AB2     		uxth	r2, r3
 12061 0078 7B68     		ldr	r3, [r7, #4]
 12062 007a 9A80     		strh	r2, [r3, #4]
 12063              	.L523:
3004:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   }
3005:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 12064              		.loc 1 3005 0
 12065 007c BD46     		mov	sp, r7
 12066 007e 02B0     		add	sp, sp, #8
 12067              		@ sp needed
 12068 0080 80BD     		pop	{r7, pc}
 12069              	.L529:
 12070 0082 C046     		.align	2
 12071              	.L528:
 12072 0084 002C0140 		.word	1073818624
 12073 0088 00040040 		.word	1073742848
 12074 008c 00000000 		.word	.LC0
 12075 0090 B10B0000 		.word	2993
 12076              		.cfi_endproc
 12077              	.LFE119:
 12079              		.section	.text.TIM_RemapConfig,"ax",%progbits
 12080              		.align	2
 12081              		.global	TIM_RemapConfig
 12082              		.code	16
 12083              		.thumb_func
 12085              	TIM_RemapConfig:
 12086              	.LFB120:
3006:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
3007:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
3008:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @}
3009:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
3010:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
3011:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /** @defgroup TIM_Group9 Specific remapping management function
3012:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  *  @brief   Specific remapping management function
3013:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  *
3014:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** @verbatim
3015:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  ===============================================================================
3016:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                ##### Specific remapping management function #####
3017:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  ===============================================================================
3018:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
3019:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** @endverbatim
3020:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @{
3021:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
3022:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
3023:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Configures the TIM14 Remapping input Capabilities.
3024:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param TIMx: where x can be 14 to select the TIM peripheral.
3025:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param TIM_Remap: specifies the TIM input reampping source.
3026:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
3027:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   @arg TIM14_GPIO     : TIM14 Channel 1 is connected to GPIO.
3028:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   @arg TIM14_RTC_CLK  : TIM14 Channel 1 is connected to RTC input clock.
3029:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *                       RTC input clock can be LSE, LSI or HSE/div128.
3030:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   @arg TIM14_HSE_DIV32 : TIM14 Channel 1 is connected to HSE/32 clock.  
3031:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   @arg TIM14_MCO : TIM14 Channel 1 is connected to MCO clock.  
3032:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *                  MCO clock can be HSI14, SYSCLK, HSI, HSE or PLL/2.  
3033:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval : None
3034:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
3035:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** void TIM_RemapConfig(TIM_TypeDef* TIMx, uint16_t TIM_Remap)
3036:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 12087              		.loc 1 3036 0
 12088              		.cfi_startproc
 12089 0000 80B5     		push	{r7, lr}
 12090              		.cfi_def_cfa_offset 8
 12091              		.cfi_offset 7, -8
 12092              		.cfi_offset 14, -4
 12093 0002 82B0     		sub	sp, sp, #8
 12094              		.cfi_def_cfa_offset 16
 12095 0004 00AF     		add	r7, sp, #0
 12096              		.cfi_def_cfa_register 7
 12097 0006 7860     		str	r0, [r7, #4]
 12098 0008 0A1C     		mov	r2, r1
 12099 000a BB1C     		add	r3, r7, #2
 12100 000c 1A80     		strh	r2, [r3]
3037:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  /* Check the parameters */
3038:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_LIST11_PERIPH(TIMx));
 12101              		.loc 1 3038 0
 12102 000e 7A68     		ldr	r2, [r7, #4]
 12103 0010 134B     		ldr	r3, .L533
 12104 0012 9A42     		cmp	r2, r3
 12105 0014 05D0     		beq	.L531
 12106              		.loc 1 3038 0 is_stmt 0 discriminator 1
 12107 0016 134A     		ldr	r2, .L533+4
 12108 0018 134B     		ldr	r3, .L533+8
 12109 001a 101C     		mov	r0, r2
 12110 001c 191C     		mov	r1, r3
 12111 001e FFF7FEFF 		bl	assert_failed
 12112              	.L531:
3039:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   assert_param(IS_TIM_REMAP(TIM_Remap));
 12113              		.loc 1 3039 0 is_stmt 1
 12114 0022 BB1C     		add	r3, r7, #2
 12115 0024 1B88     		ldrh	r3, [r3]
 12116 0026 002B     		cmp	r3, #0
 12117 0028 11D0     		beq	.L532
 12118              		.loc 1 3039 0 is_stmt 0 discriminator 1
 12119 002a BB1C     		add	r3, r7, #2
 12120 002c 1B88     		ldrh	r3, [r3]
 12121 002e 012B     		cmp	r3, #1
 12122 0030 0DD0     		beq	.L532
 12123 0032 BB1C     		add	r3, r7, #2
 12124 0034 1B88     		ldrh	r3, [r3]
 12125 0036 022B     		cmp	r3, #2
 12126 0038 09D0     		beq	.L532
 12127 003a BB1C     		add	r3, r7, #2
 12128 003c 1B88     		ldrh	r3, [r3]
 12129 003e 032B     		cmp	r3, #3
 12130 0040 05D0     		beq	.L532
 12131 0042 084A     		ldr	r2, .L533+4
 12132 0044 094B     		ldr	r3, .L533+12
 12133 0046 101C     		mov	r0, r2
 12134 0048 191C     		mov	r1, r3
 12135 004a FFF7FEFF 		bl	assert_failed
 12136              	.L532:
3040:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
3041:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Set the Timer remapping configuration */
3042:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->OR =  TIM_Remap;
 12137              		.loc 1 3042 0 is_stmt 1
 12138 004e 7A68     		ldr	r2, [r7, #4]
 12139 0050 B91C     		add	r1, r7, #2
 12140 0052 5023     		mov	r3, #80
 12141 0054 0988     		ldrh	r1, [r1]
 12142 0056 D152     		strh	r1, [r2, r3]
3043:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 12143              		.loc 1 3043 0
 12144 0058 BD46     		mov	sp, r7
 12145 005a 02B0     		add	sp, sp, #8
 12146              		@ sp needed
 12147 005c 80BD     		pop	{r7, pc}
 12148              	.L534:
 12149 005e C046     		.align	2
 12150              	.L533:
 12151 0060 00200040 		.word	1073750016
 12152 0064 00000000 		.word	.LC0
 12153 0068 DE0B0000 		.word	3038
 12154 006c DF0B0000 		.word	3039
 12155              		.cfi_endproc
 12156              	.LFE120:
 12158              		.section	.text.TI1_Config,"ax",%progbits
 12159              		.align	2
 12160              		.code	16
 12161              		.thumb_func
 12163              	TI1_Config:
 12164              	.LFB121:
3044:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
3045:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
3046:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @}
3047:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
3048:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
3049:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
3050:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Configure the TI1 as Input.
3051:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 14, 15, 16 or 17 to select the TIM peripheral.
3052:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3053:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
3054:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPolarity_Rising
3055:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPolarity_Falling
3056:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3057:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
3058:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICSelection_DirectTI: TIM Input 1 is selected to be connected to IC1.
3059:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICSelection_IndirectTI: TIM Input 1 is selected to be connected to IC2.
3060:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICSelection_TRC: TIM Input 1 is selected to be connected to TRC.
3061:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3062:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F.
3063:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
3064:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
3065:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3066:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                        uint16_t TIM_ICFilter)
3067:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 12165              		.loc 1 3067 0
 12166              		.cfi_startproc
 12167 0000 80B5     		push	{r7, lr}
 12168              		.cfi_def_cfa_offset 8
 12169              		.cfi_offset 7, -8
 12170              		.cfi_offset 14, -4
 12171 0002 86B0     		sub	sp, sp, #24
 12172              		.cfi_def_cfa_offset 32
 12173 0004 00AF     		add	r7, sp, #0
 12174              		.cfi_def_cfa_register 7
 12175 0006 F860     		str	r0, [r7, #12]
 12176 0008 081C     		mov	r0, r1
 12177 000a 111C     		mov	r1, r2
 12178 000c 1A1C     		mov	r2, r3
 12179 000e 3B1C     		mov	r3, r7
 12180 0010 0A33     		add	r3, r3, #10
 12181 0012 1880     		strh	r0, [r3]
 12182 0014 3B1C     		mov	r3, r7
 12183 0016 0833     		add	r3, r3, #8
 12184 0018 1980     		strh	r1, [r3]
 12185 001a BB1D     		add	r3, r7, #6
 12186 001c 1A80     		strh	r2, [r3]
3068:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0;
 12187              		.loc 1 3068 0
 12188 001e 3B1C     		mov	r3, r7
 12189 0020 1633     		add	r3, r3, #22
 12190 0022 0022     		mov	r2, #0
 12191 0024 1A80     		strh	r2, [r3]
 12192 0026 3B1C     		mov	r3, r7
 12193 0028 1433     		add	r3, r3, #20
 12194 002a 0022     		mov	r2, #0
 12195 002c 1A80     		strh	r2, [r3]
3069:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
3070:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCER &= (uint16_t)~((uint16_t)TIM_CCER_CC1E);
 12196              		.loc 1 3070 0
 12197 002e FB68     		ldr	r3, [r7, #12]
 12198 0030 1B8C     		ldrh	r3, [r3, #32]
 12199 0032 9BB2     		uxth	r3, r3
 12200 0034 0122     		mov	r2, #1
 12201 0036 9343     		bic	r3, r2
 12202 0038 9AB2     		uxth	r2, r3
 12203 003a FB68     		ldr	r3, [r7, #12]
 12204 003c 1A84     		strh	r2, [r3, #32]
3071:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 12205              		.loc 1 3071 0
 12206 003e 3B1C     		mov	r3, r7
 12207 0040 1633     		add	r3, r3, #22
 12208 0042 FA68     		ldr	r2, [r7, #12]
 12209 0044 128B     		ldrh	r2, [r2, #24]
 12210 0046 1A80     		strh	r2, [r3]
3072:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer = TIMx->CCER;
 12211              		.loc 1 3072 0
 12212 0048 3B1C     		mov	r3, r7
 12213 004a 1433     		add	r3, r3, #20
 12214 004c FA68     		ldr	r2, [r7, #12]
 12215 004e 128C     		ldrh	r2, [r2, #32]
 12216 0050 1A80     		strh	r2, [r3]
3073:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Select the Input and set the filter */
3074:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCMR1_CC1S)) & ((uint16_t)~((uint16_t)TIM_CCMR1
 12217              		.loc 1 3074 0
 12218 0052 3B1C     		mov	r3, r7
 12219 0054 1633     		add	r3, r3, #22
 12220 0056 3A1C     		mov	r2, r7
 12221 0058 1632     		add	r2, r2, #22
 12222 005a 1288     		ldrh	r2, [r2]
 12223 005c F321     		mov	r1, #243
 12224 005e 8A43     		bic	r2, r1
 12225 0060 1A80     		strh	r2, [r3]
3075:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 12226              		.loc 1 3075 0
 12227 0062 BB1D     		add	r3, r7, #6
 12228 0064 1B88     		ldrh	r3, [r3]
 12229 0066 1B01     		lsl	r3, r3, #4
 12230 0068 9AB2     		uxth	r2, r3
 12231 006a 3B1C     		mov	r3, r7
 12232 006c 0833     		add	r3, r3, #8
 12233 006e 1B88     		ldrh	r3, [r3]
 12234 0070 1343     		orr	r3, r2
 12235 0072 99B2     		uxth	r1, r3
 12236 0074 3B1C     		mov	r3, r7
 12237 0076 1633     		add	r3, r3, #22
 12238 0078 3A1C     		mov	r2, r7
 12239 007a 1632     		add	r2, r2, #22
 12240 007c 1288     		ldrh	r2, [r2]
 12241 007e 0A43     		orr	r2, r1
 12242 0080 1A80     		strh	r2, [r3]
3076:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****  
3077:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Select the Polarity and set the CC1E Bit */
3078:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC1P | TIM_CCER_CC1NP));
 12243              		.loc 1 3078 0
 12244 0082 3B1C     		mov	r3, r7
 12245 0084 1433     		add	r3, r3, #20
 12246 0086 3A1C     		mov	r2, r7
 12247 0088 1432     		add	r2, r2, #20
 12248 008a 1288     		ldrh	r2, [r2]
 12249 008c 0A21     		mov	r1, #10
 12250 008e 8A43     		bic	r2, r1
 12251 0090 1A80     		strh	r2, [r3]
3079:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
 12252              		.loc 1 3079 0
 12253 0092 3A1C     		mov	r2, r7
 12254 0094 0A32     		add	r2, r2, #10
 12255 0096 3B1C     		mov	r3, r7
 12256 0098 1433     		add	r3, r3, #20
 12257 009a 1288     		ldrh	r2, [r2]
 12258 009c 1B88     		ldrh	r3, [r3]
 12259 009e 1343     		orr	r3, r2
 12260 00a0 9AB2     		uxth	r2, r3
 12261 00a2 3B1C     		mov	r3, r7
 12262 00a4 1433     		add	r3, r3, #20
 12263 00a6 0121     		mov	r1, #1
 12264 00a8 0A43     		orr	r2, r1
 12265 00aa 1A80     		strh	r2, [r3]
3080:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3081:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 12266              		.loc 1 3081 0
 12267 00ac FB68     		ldr	r3, [r7, #12]
 12268 00ae 3A1C     		mov	r2, r7
 12269 00b0 1632     		add	r2, r2, #22
 12270 00b2 1288     		ldrh	r2, [r2]
 12271 00b4 1A83     		strh	r2, [r3, #24]
3082:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCER = tmpccer;
 12272              		.loc 1 3082 0
 12273 00b6 FB68     		ldr	r3, [r7, #12]
 12274 00b8 3A1C     		mov	r2, r7
 12275 00ba 1432     		add	r2, r2, #20
 12276 00bc 1288     		ldrh	r2, [r2]
 12277 00be 1A84     		strh	r2, [r3, #32]
3083:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 12278              		.loc 1 3083 0
 12279 00c0 BD46     		mov	sp, r7
 12280 00c2 06B0     		add	sp, sp, #24
 12281              		@ sp needed
 12282 00c4 80BD     		pop	{r7, pc}
 12283              		.cfi_endproc
 12284              	.LFE121:
 12286 00c6 C046     		.section	.text.TI2_Config,"ax",%progbits
 12287              		.align	2
 12288              		.code	16
 12289              		.thumb_func
 12291              	TI2_Config:
 12292              	.LFB122:
3084:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
3085:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
3086:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Configure the TI2 as Input.
3087:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, or 15 to select the TIM peripheral.
3088:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3089:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
3090:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPolarity_Rising
3091:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPolarity_Falling
3092:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3093:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
3094:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICSelection_DirectTI: TIM Input 2 is selected to be connected to IC2.
3095:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICSelection_IndirectTI: TIM Input 2 is selected to be connected to IC1.
3096:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICSelection_TRC: TIM Input 2 is selected to be connected to TRC.
3097:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3098:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F.
3099:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
3100:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
3101:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3102:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                        uint16_t TIM_ICFilter)
3103:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 12293              		.loc 1 3103 0
 12294              		.cfi_startproc
 12295 0000 80B5     		push	{r7, lr}
 12296              		.cfi_def_cfa_offset 8
 12297              		.cfi_offset 7, -8
 12298              		.cfi_offset 14, -4
 12299 0002 86B0     		sub	sp, sp, #24
 12300              		.cfi_def_cfa_offset 32
 12301 0004 00AF     		add	r7, sp, #0
 12302              		.cfi_def_cfa_register 7
 12303 0006 F860     		str	r0, [r7, #12]
 12304 0008 081C     		mov	r0, r1
 12305 000a 111C     		mov	r1, r2
 12306 000c 1A1C     		mov	r2, r3
 12307 000e 3B1C     		mov	r3, r7
 12308 0010 0A33     		add	r3, r3, #10
 12309 0012 1880     		strh	r0, [r3]
 12310 0014 3B1C     		mov	r3, r7
 12311 0016 0833     		add	r3, r3, #8
 12312 0018 1980     		strh	r1, [r3]
 12313 001a BB1D     		add	r3, r7, #6
 12314 001c 1A80     		strh	r2, [r3]
3104:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0, tmp = 0;
 12315              		.loc 1 3104 0
 12316 001e 3B1C     		mov	r3, r7
 12317 0020 1633     		add	r3, r3, #22
 12318 0022 0022     		mov	r2, #0
 12319 0024 1A80     		strh	r2, [r3]
 12320 0026 3B1C     		mov	r3, r7
 12321 0028 1433     		add	r3, r3, #20
 12322 002a 0022     		mov	r2, #0
 12323 002c 1A80     		strh	r2, [r3]
 12324 002e 3B1C     		mov	r3, r7
 12325 0030 1233     		add	r3, r3, #18
 12326 0032 0022     		mov	r2, #0
 12327 0034 1A80     		strh	r2, [r3]
3105:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
3106:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCER &= (uint16_t)~((uint16_t)TIM_CCER_CC2E);
 12328              		.loc 1 3106 0
 12329 0036 FB68     		ldr	r3, [r7, #12]
 12330 0038 1B8C     		ldrh	r3, [r3, #32]
 12331 003a 9BB2     		uxth	r3, r3
 12332 003c 1022     		mov	r2, #16
 12333 003e 9343     		bic	r3, r2
 12334 0040 9AB2     		uxth	r2, r3
 12335 0042 FB68     		ldr	r3, [r7, #12]
 12336 0044 1A84     		strh	r2, [r3, #32]
3107:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 12337              		.loc 1 3107 0
 12338 0046 3B1C     		mov	r3, r7
 12339 0048 1633     		add	r3, r3, #22
 12340 004a FA68     		ldr	r2, [r7, #12]
 12341 004c 128B     		ldrh	r2, [r2, #24]
 12342 004e 1A80     		strh	r2, [r3]
3108:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer = TIMx->CCER;
 12343              		.loc 1 3108 0
 12344 0050 3B1C     		mov	r3, r7
 12345 0052 1433     		add	r3, r3, #20
 12346 0054 FA68     		ldr	r2, [r7, #12]
 12347 0056 128C     		ldrh	r2, [r2, #32]
 12348 0058 1A80     		strh	r2, [r3]
3109:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 4);
 12349              		.loc 1 3109 0
 12350 005a 3B1C     		mov	r3, r7
 12351 005c 1233     		add	r3, r3, #18
 12352 005e 3A1C     		mov	r2, r7
 12353 0060 0A32     		add	r2, r2, #10
 12354 0062 1288     		ldrh	r2, [r2]
 12355 0064 1201     		lsl	r2, r2, #4
 12356 0066 1A80     		strh	r2, [r3]
3110:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Select the Input and set the filter */
3111:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCMR1_CC2S)) & ((uint16_t)~((uint16_t)TIM_CCMR1
 12357              		.loc 1 3111 0
 12358 0068 3B1C     		mov	r3, r7
 12359 006a 1633     		add	r3, r3, #22
 12360 006c 3A1C     		mov	r2, r7
 12361 006e 1632     		add	r2, r2, #22
 12362 0070 1188     		ldrh	r1, [r2]
 12363 0072 1E4A     		ldr	r2, .L537
 12364 0074 0A40     		and	r2, r1
 12365 0076 1A80     		strh	r2, [r3]
3112:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICFilter << 12);
 12366              		.loc 1 3112 0
 12367 0078 BB1D     		add	r3, r7, #6
 12368 007a 1B88     		ldrh	r3, [r3]
 12369 007c 1B03     		lsl	r3, r3, #12
 12370 007e 99B2     		uxth	r1, r3
 12371 0080 3B1C     		mov	r3, r7
 12372 0082 1633     		add	r3, r3, #22
 12373 0084 3A1C     		mov	r2, r7
 12374 0086 1632     		add	r2, r2, #22
 12375 0088 1288     		ldrh	r2, [r2]
 12376 008a 0A43     		orr	r2, r1
 12377 008c 1A80     		strh	r2, [r3]
3113:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection << 8); 
 12378              		.loc 1 3113 0
 12379 008e 3B1C     		mov	r3, r7
 12380 0090 0833     		add	r3, r3, #8
 12381 0092 1B88     		ldrh	r3, [r3]
 12382 0094 1B02     		lsl	r3, r3, #8
 12383 0096 99B2     		uxth	r1, r3
 12384 0098 3B1C     		mov	r3, r7
 12385 009a 1633     		add	r3, r3, #22
 12386 009c 3A1C     		mov	r2, r7
 12387 009e 1632     		add	r2, r2, #22
 12388 00a0 1288     		ldrh	r2, [r2]
 12389 00a2 0A43     		orr	r2, r1
 12390 00a4 1A80     		strh	r2, [r3]
3114:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Select the Polarity and set the CC2E Bit */
3115:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC2P | TIM_CCER_CC2NP));
 12391              		.loc 1 3115 0
 12392 00a6 3B1C     		mov	r3, r7
 12393 00a8 1433     		add	r3, r3, #20
 12394 00aa 3A1C     		mov	r2, r7
 12395 00ac 1432     		add	r2, r2, #20
 12396 00ae 1288     		ldrh	r2, [r2]
 12397 00b0 A021     		mov	r1, #160
 12398 00b2 8A43     		bic	r2, r1
 12399 00b4 1A80     		strh	r2, [r3]
3116:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC2E);  
 12400              		.loc 1 3116 0
 12401 00b6 3A1C     		mov	r2, r7
 12402 00b8 1232     		add	r2, r2, #18
 12403 00ba 3B1C     		mov	r3, r7
 12404 00bc 1433     		add	r3, r3, #20
 12405 00be 1288     		ldrh	r2, [r2]
 12406 00c0 1B88     		ldrh	r3, [r3]
 12407 00c2 1343     		orr	r3, r2
 12408 00c4 9AB2     		uxth	r2, r3
 12409 00c6 3B1C     		mov	r3, r7
 12410 00c8 1433     		add	r3, r3, #20
 12411 00ca 1021     		mov	r1, #16
 12412 00cc 0A43     		orr	r2, r1
 12413 00ce 1A80     		strh	r2, [r3]
3117:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3118:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 12414              		.loc 1 3118 0
 12415 00d0 FB68     		ldr	r3, [r7, #12]
 12416 00d2 3A1C     		mov	r2, r7
 12417 00d4 1632     		add	r2, r2, #22
 12418 00d6 1288     		ldrh	r2, [r2]
 12419 00d8 1A83     		strh	r2, [r3, #24]
3119:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCER = tmpccer;
 12420              		.loc 1 3119 0
 12421 00da FB68     		ldr	r3, [r7, #12]
 12422 00dc 3A1C     		mov	r2, r7
 12423 00de 1432     		add	r2, r2, #20
 12424 00e0 1288     		ldrh	r2, [r2]
 12425 00e2 1A84     		strh	r2, [r3, #32]
3120:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 12426              		.loc 1 3120 0
 12427 00e4 BD46     		mov	sp, r7
 12428 00e6 06B0     		add	sp, sp, #24
 12429              		@ sp needed
 12430 00e8 80BD     		pop	{r7, pc}
 12431              	.L538:
 12432 00ea C046     		.align	2
 12433              	.L537:
 12434 00ec FF0C0000 		.word	3327
 12435              		.cfi_endproc
 12436              	.LFE122:
 12438              		.section	.text.TI3_Config,"ax",%progbits
 12439              		.align	2
 12440              		.code	16
 12441              		.thumb_func
 12443              	TI3_Config:
 12444              	.LFB123:
3121:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
3122:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
3123:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Configure the TI3 as Input.
3124:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2 or 3 to select the TIM peripheral.
3125:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3126:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
3127:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPolarity_Rising
3128:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPolarity_Falling
3129:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3130:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
3131:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICSelection_DirectTI: TIM Input 3 is selected to be connected to IC3.
3132:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICSelection_IndirectTI: TIM Input 3 is selected to be connected to IC4.
3133:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICSelection_TRC: TIM Input 3 is selected to be connected to TRC.
3134:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3135:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F.
3136:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
3137:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
3138:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3139:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                        uint16_t TIM_ICFilter)
3140:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 12445              		.loc 1 3140 0
 12446              		.cfi_startproc
 12447 0000 80B5     		push	{r7, lr}
 12448              		.cfi_def_cfa_offset 8
 12449              		.cfi_offset 7, -8
 12450              		.cfi_offset 14, -4
 12451 0002 86B0     		sub	sp, sp, #24
 12452              		.cfi_def_cfa_offset 32
 12453 0004 00AF     		add	r7, sp, #0
 12454              		.cfi_def_cfa_register 7
 12455 0006 F860     		str	r0, [r7, #12]
 12456 0008 081C     		mov	r0, r1
 12457 000a 111C     		mov	r1, r2
 12458 000c 1A1C     		mov	r2, r3
 12459 000e 3B1C     		mov	r3, r7
 12460 0010 0A33     		add	r3, r3, #10
 12461 0012 1880     		strh	r0, [r3]
 12462 0014 3B1C     		mov	r3, r7
 12463 0016 0833     		add	r3, r3, #8
 12464 0018 1980     		strh	r1, [r3]
 12465 001a BB1D     		add	r3, r7, #6
 12466 001c 1A80     		strh	r2, [r3]
3141:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
 12467              		.loc 1 3141 0
 12468 001e 3B1C     		mov	r3, r7
 12469 0020 1633     		add	r3, r3, #22
 12470 0022 0022     		mov	r2, #0
 12471 0024 1A80     		strh	r2, [r3]
 12472 0026 3B1C     		mov	r3, r7
 12473 0028 1433     		add	r3, r3, #20
 12474 002a 0022     		mov	r2, #0
 12475 002c 1A80     		strh	r2, [r3]
 12476 002e 3B1C     		mov	r3, r7
 12477 0030 1233     		add	r3, r3, #18
 12478 0032 0022     		mov	r2, #0
 12479 0034 1A80     		strh	r2, [r3]
3142:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Disable the Channel 3: Reset the CC3E Bit */
3143:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCER &= (uint16_t)~((uint16_t)TIM_CCER_CC3E);
 12480              		.loc 1 3143 0
 12481 0036 FB68     		ldr	r3, [r7, #12]
 12482 0038 1B8C     		ldrh	r3, [r3, #32]
 12483 003a 9AB2     		uxth	r2, r3
 12484 003c 284B     		ldr	r3, .L540
 12485 003e 1340     		and	r3, r2
 12486 0040 9AB2     		uxth	r2, r3
 12487 0042 FB68     		ldr	r3, [r7, #12]
 12488 0044 1A84     		strh	r2, [r3, #32]
3144:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 12489              		.loc 1 3144 0
 12490 0046 3B1C     		mov	r3, r7
 12491 0048 1633     		add	r3, r3, #22
 12492 004a FA68     		ldr	r2, [r7, #12]
 12493 004c 928B     		ldrh	r2, [r2, #28]
 12494 004e 1A80     		strh	r2, [r3]
3145:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer = TIMx->CCER;
 12495              		.loc 1 3145 0
 12496 0050 3B1C     		mov	r3, r7
 12497 0052 1433     		add	r3, r3, #20
 12498 0054 FA68     		ldr	r2, [r7, #12]
 12499 0056 128C     		ldrh	r2, [r2, #32]
 12500 0058 1A80     		strh	r2, [r3]
3146:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 8);
 12501              		.loc 1 3146 0
 12502 005a 3B1C     		mov	r3, r7
 12503 005c 1233     		add	r3, r3, #18
 12504 005e 3A1C     		mov	r2, r7
 12505 0060 0A32     		add	r2, r2, #10
 12506 0062 1288     		ldrh	r2, [r2]
 12507 0064 1202     		lsl	r2, r2, #8
 12508 0066 1A80     		strh	r2, [r3]
3147:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Select the Input and set the filter */
3148:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCMR2_CC3S)) & ((uint16_t)~((uint16_t)TIM_CCMR2
 12509              		.loc 1 3148 0
 12510 0068 3B1C     		mov	r3, r7
 12511 006a 1633     		add	r3, r3, #22
 12512 006c 3A1C     		mov	r2, r7
 12513 006e 1632     		add	r2, r2, #22
 12514 0070 1288     		ldrh	r2, [r2]
 12515 0072 F321     		mov	r1, #243
 12516 0074 8A43     		bic	r2, r1
 12517 0076 1A80     		strh	r2, [r3]
3149:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 12518              		.loc 1 3149 0
 12519 0078 BB1D     		add	r3, r7, #6
 12520 007a 1B88     		ldrh	r3, [r3]
 12521 007c 1B01     		lsl	r3, r3, #4
 12522 007e 9AB2     		uxth	r2, r3
 12523 0080 3B1C     		mov	r3, r7
 12524 0082 0833     		add	r3, r3, #8
 12525 0084 1B88     		ldrh	r3, [r3]
 12526 0086 1343     		orr	r3, r2
 12527 0088 99B2     		uxth	r1, r3
 12528 008a 3B1C     		mov	r3, r7
 12529 008c 1633     		add	r3, r3, #22
 12530 008e 3A1C     		mov	r2, r7
 12531 0090 1632     		add	r2, r2, #22
 12532 0092 1288     		ldrh	r2, [r2]
 12533 0094 0A43     		orr	r2, r1
 12534 0096 1A80     		strh	r2, [r3]
3150:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Select the Polarity and set the CC3E Bit */
3151:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC3P | TIM_CCER_CC3NP));
 12535              		.loc 1 3151 0
 12536 0098 3B1C     		mov	r3, r7
 12537 009a 1433     		add	r3, r3, #20
 12538 009c 3A1C     		mov	r2, r7
 12539 009e 1432     		add	r2, r2, #20
 12540 00a0 1188     		ldrh	r1, [r2]
 12541 00a2 104A     		ldr	r2, .L540+4
 12542 00a4 0A40     		and	r2, r1
 12543 00a6 1A80     		strh	r2, [r3]
3152:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC3E);  
 12544              		.loc 1 3152 0
 12545 00a8 3A1C     		mov	r2, r7
 12546 00aa 1232     		add	r2, r2, #18
 12547 00ac 3B1C     		mov	r3, r7
 12548 00ae 1433     		add	r3, r3, #20
 12549 00b0 1288     		ldrh	r2, [r2]
 12550 00b2 1B88     		ldrh	r3, [r3]
 12551 00b4 1343     		orr	r3, r2
 12552 00b6 9AB2     		uxth	r2, r3
 12553 00b8 3B1C     		mov	r3, r7
 12554 00ba 1433     		add	r3, r3, #20
 12555 00bc 8021     		mov	r1, #128
 12556 00be 4900     		lsl	r1, r1, #1
 12557 00c0 0A43     		orr	r2, r1
 12558 00c2 1A80     		strh	r2, [r3]
3153:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3154:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 12559              		.loc 1 3154 0
 12560 00c4 FB68     		ldr	r3, [r7, #12]
 12561 00c6 3A1C     		mov	r2, r7
 12562 00c8 1632     		add	r2, r2, #22
 12563 00ca 1288     		ldrh	r2, [r2]
 12564 00cc 9A83     		strh	r2, [r3, #28]
3155:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCER = tmpccer;
 12565              		.loc 1 3155 0
 12566 00ce FB68     		ldr	r3, [r7, #12]
 12567 00d0 3A1C     		mov	r2, r7
 12568 00d2 1432     		add	r2, r2, #20
 12569 00d4 1288     		ldrh	r2, [r2]
 12570 00d6 1A84     		strh	r2, [r3, #32]
3156:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 12571              		.loc 1 3156 0
 12572 00d8 BD46     		mov	sp, r7
 12573 00da 06B0     		add	sp, sp, #24
 12574              		@ sp needed
 12575 00dc 80BD     		pop	{r7, pc}
 12576              	.L541:
 12577 00de C046     		.align	2
 12578              	.L540:
 12579 00e0 FFFEFFFF 		.word	-257
 12580 00e4 FFF5FFFF 		.word	-2561
 12581              		.cfi_endproc
 12582              	.LFE123:
 12584              		.section	.text.TI4_Config,"ax",%progbits
 12585              		.align	2
 12586              		.code	16
 12587              		.thumb_func
 12589              	TI4_Config:
 12590              	.LFB124:
3157:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
3158:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** /**
3159:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @brief  Configure the TI4 as Input.
3160:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIMx: where x can be 1, 2 or 3 to select the TIM peripheral.
3161:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3162:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
3163:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPolarity_Rising
3164:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICPolarity_Falling
3165:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3166:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter can be one of the following values:
3167:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICSelection_DirectTI: TIM Input 4 is selected to be connected to IC4.
3168:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICSelection_IndirectTI: TIM Input 4 is selected to be connected to IC3.
3169:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *     @arg TIM_ICSelection_TRC: TIM Input 4 is selected to be connected to TRC.
3170:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3171:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F.
3172:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   * @retval None
3173:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   */
3174:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3175:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****                        uint16_t TIM_ICFilter)
3176:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** {
 12591              		.loc 1 3176 0
 12592              		.cfi_startproc
 12593 0000 80B5     		push	{r7, lr}
 12594              		.cfi_def_cfa_offset 8
 12595              		.cfi_offset 7, -8
 12596              		.cfi_offset 14, -4
 12597 0002 86B0     		sub	sp, sp, #24
 12598              		.cfi_def_cfa_offset 32
 12599 0004 00AF     		add	r7, sp, #0
 12600              		.cfi_def_cfa_register 7
 12601 0006 F860     		str	r0, [r7, #12]
 12602 0008 081C     		mov	r0, r1
 12603 000a 111C     		mov	r1, r2
 12604 000c 1A1C     		mov	r2, r3
 12605 000e 3B1C     		mov	r3, r7
 12606 0010 0A33     		add	r3, r3, #10
 12607 0012 1880     		strh	r0, [r3]
 12608 0014 3B1C     		mov	r3, r7
 12609 0016 0833     		add	r3, r3, #8
 12610 0018 1980     		strh	r1, [r3]
 12611 001a BB1D     		add	r3, r7, #6
 12612 001c 1A80     		strh	r2, [r3]
3177:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
 12613              		.loc 1 3177 0
 12614 001e 3B1C     		mov	r3, r7
 12615 0020 1633     		add	r3, r3, #22
 12616 0022 0022     		mov	r2, #0
 12617 0024 1A80     		strh	r2, [r3]
 12618 0026 3B1C     		mov	r3, r7
 12619 0028 1433     		add	r3, r3, #20
 12620 002a 0022     		mov	r2, #0
 12621 002c 1A80     		strh	r2, [r3]
 12622 002e 3B1C     		mov	r3, r7
 12623 0030 1233     		add	r3, r3, #18
 12624 0032 0022     		mov	r2, #0
 12625 0034 1A80     		strh	r2, [r3]
3178:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** 
3179:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****    /* Disable the Channel 4: Reset the CC4E Bit */
3180:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCER &= (uint16_t)~((uint16_t)TIM_CCER_CC4E);
 12626              		.loc 1 3180 0
 12627 0036 FB68     		ldr	r3, [r7, #12]
 12628 0038 1B8C     		ldrh	r3, [r3, #32]
 12629 003a 9AB2     		uxth	r2, r3
 12630 003c 2B4B     		ldr	r3, .L543
 12631 003e 1340     		and	r3, r2
 12632 0040 9AB2     		uxth	r2, r3
 12633 0042 FB68     		ldr	r3, [r7, #12]
 12634 0044 1A84     		strh	r2, [r3, #32]
3181:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 12635              		.loc 1 3181 0
 12636 0046 3B1C     		mov	r3, r7
 12637 0048 1633     		add	r3, r3, #22
 12638 004a FA68     		ldr	r2, [r7, #12]
 12639 004c 928B     		ldrh	r2, [r2, #28]
 12640 004e 1A80     		strh	r2, [r3]
3182:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer = TIMx->CCER;
 12641              		.loc 1 3182 0
 12642 0050 3B1C     		mov	r3, r7
 12643 0052 1433     		add	r3, r3, #20
 12644 0054 FA68     		ldr	r2, [r7, #12]
 12645 0056 128C     		ldrh	r2, [r2, #32]
 12646 0058 1A80     		strh	r2, [r3]
3183:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 12);
 12647              		.loc 1 3183 0
 12648 005a 3B1C     		mov	r3, r7
 12649 005c 1233     		add	r3, r3, #18
 12650 005e 3A1C     		mov	r2, r7
 12651 0060 0A32     		add	r2, r2, #10
 12652 0062 1288     		ldrh	r2, [r2]
 12653 0064 1203     		lsl	r2, r2, #12
 12654 0066 1A80     		strh	r2, [r3]
3184:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Select the Input and set the filter */
3185:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 &= (uint16_t)((uint16_t)(~(uint16_t)TIM_CCMR2_CC4S) & ((uint16_t)~((uint16_t)TIM_CCMR2_I
 12655              		.loc 1 3185 0
 12656 0068 3B1C     		mov	r3, r7
 12657 006a 1633     		add	r3, r3, #22
 12658 006c 3A1C     		mov	r2, r7
 12659 006e 1632     		add	r2, r2, #22
 12660 0070 1188     		ldrh	r1, [r2]
 12661 0072 1F4A     		ldr	r2, .L543+4
 12662 0074 0A40     		and	r2, r1
 12663 0076 1A80     		strh	r2, [r3]
3186:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection << 8);
 12664              		.loc 1 3186 0
 12665 0078 3B1C     		mov	r3, r7
 12666 007a 0833     		add	r3, r3, #8
 12667 007c 1B88     		ldrh	r3, [r3]
 12668 007e 1B02     		lsl	r3, r3, #8
 12669 0080 99B2     		uxth	r1, r3
 12670 0082 3B1C     		mov	r3, r7
 12671 0084 1633     		add	r3, r3, #22
 12672 0086 3A1C     		mov	r2, r7
 12673 0088 1632     		add	r2, r2, #22
 12674 008a 1288     		ldrh	r2, [r2]
 12675 008c 0A43     		orr	r2, r1
 12676 008e 1A80     		strh	r2, [r3]
3187:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICFilter << 12);  
 12677              		.loc 1 3187 0
 12678 0090 BB1D     		add	r3, r7, #6
 12679 0092 1B88     		ldrh	r3, [r3]
 12680 0094 1B03     		lsl	r3, r3, #12
 12681 0096 99B2     		uxth	r1, r3
 12682 0098 3B1C     		mov	r3, r7
 12683 009a 1633     		add	r3, r3, #22
 12684 009c 3A1C     		mov	r2, r7
 12685 009e 1632     		add	r2, r2, #22
 12686 00a0 1288     		ldrh	r2, [r2]
 12687 00a2 0A43     		orr	r2, r1
 12688 00a4 1A80     		strh	r2, [r3]
3188:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Select the Polarity and set the CC4E Bit */
3189:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC4P | TIM_CCER_CC4NP));
 12689              		.loc 1 3189 0
 12690 00a6 3B1C     		mov	r3, r7
 12691 00a8 1433     		add	r3, r3, #20
 12692 00aa 3A1C     		mov	r2, r7
 12693 00ac 1432     		add	r2, r2, #20
 12694 00ae 1188     		ldrh	r1, [r2]
 12695 00b0 104A     		ldr	r2, .L543+8
 12696 00b2 0A40     		and	r2, r1
 12697 00b4 1A80     		strh	r2, [r3]
3190:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC4E);
 12698              		.loc 1 3190 0
 12699 00b6 3A1C     		mov	r2, r7
 12700 00b8 1232     		add	r2, r2, #18
 12701 00ba 3B1C     		mov	r3, r7
 12702 00bc 1433     		add	r3, r3, #20
 12703 00be 1288     		ldrh	r2, [r2]
 12704 00c0 1B88     		ldrh	r3, [r3]
 12705 00c2 1343     		orr	r3, r2
 12706 00c4 9AB2     		uxth	r2, r3
 12707 00c6 3B1C     		mov	r3, r7
 12708 00c8 1433     		add	r3, r3, #20
 12709 00ca 8021     		mov	r1, #128
 12710 00cc 4901     		lsl	r1, r1, #5
 12711 00ce 0A43     		orr	r2, r1
 12712 00d0 1A80     		strh	r2, [r3]
3191:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3192:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 12713              		.loc 1 3192 0
 12714 00d2 FB68     		ldr	r3, [r7, #12]
 12715 00d4 3A1C     		mov	r2, r7
 12716 00d6 1632     		add	r2, r2, #22
 12717 00d8 1288     		ldrh	r2, [r2]
 12718 00da 9A83     		strh	r2, [r3, #28]
3193:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c ****   TIMx->CCER = tmpccer;
 12719              		.loc 1 3193 0
 12720 00dc FB68     		ldr	r3, [r7, #12]
 12721 00de 3A1C     		mov	r2, r7
 12722 00e0 1432     		add	r2, r2, #20
 12723 00e2 1288     		ldrh	r2, [r2]
 12724 00e4 1A84     		strh	r2, [r3, #32]
3194:../../ext-src/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_tim.c **** }
 12725              		.loc 1 3194 0
 12726 00e6 BD46     		mov	sp, r7
 12727 00e8 06B0     		add	sp, sp, #24
 12728              		@ sp needed
 12729 00ea 80BD     		pop	{r7, pc}
 12730              	.L544:
 12731              		.align	2
 12732              	.L543:
 12733 00ec FFEFFFFF 		.word	-4097
 12734 00f0 FF0C0000 		.word	3327
 12735 00f4 FF5F0000 		.word	24575
 12736              		.cfi_endproc
 12737              	.LFE124:
 12739              		.text
 12740              	.Letext0:
 12741              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/20140609/arm-none-eabi/include/machine/_default_types
 12742              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20140609/arm-none-eabi/include/stdint.h"
 12743              		.file 4 "../../ext-src/CMSIS/ST/STM32F0xx/Include/stm32f0xx.h"
 12744              		.file 5 "../../ext-src/STM32F0xx_StdPeriph_Driver/inc/stm32f0xx_tim.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_tim.c
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:18     .rodata:0000000000000000 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:23     .text.TIM_DeInit:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:28     .text.TIM_DeInit:0000000000000000 TIM_DeInit
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:230    .text.TIM_DeInit:0000000000000154 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:242    .text.TIM_TimeBaseInit:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:247    .text.TIM_TimeBaseInit:0000000000000000 TIM_TimeBaseInit
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:483    .text.TIM_TimeBaseInit:0000000000000188 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:496    .text.TIM_TimeBaseStructInit:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:501    .text.TIM_TimeBaseStructInit:0000000000000000 TIM_TimeBaseStructInit
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:544    .text.TIM_PrescalerConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:549    .text.TIM_PrescalerConfig:0000000000000000 TIM_PrescalerConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:643    .text.TIM_PrescalerConfig:0000000000000094 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:655    .text.TIM_CounterModeConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:660    .text.TIM_CounterModeConfig:0000000000000000 TIM_CounterModeConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:771    .text.TIM_CounterModeConfig:00000000000000b0 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:778    .text.TIM_SetCounter:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:783    .text.TIM_SetCounter:0000000000000000 TIM_SetCounter
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:851    .text.TIM_SetCounter:0000000000000068 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:863    .text.TIM_SetAutoreload:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:868    .text.TIM_SetAutoreload:0000000000000000 TIM_SetAutoreload
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:936    .text.TIM_SetAutoreload:0000000000000068 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:948    .text.TIM_GetCounter:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:953    .text.TIM_GetCounter:0000000000000000 TIM_GetCounter
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:1020   .text.TIM_GetCounter:0000000000000064 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:1032   .text.TIM_GetPrescaler:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:1037   .text.TIM_GetPrescaler:0000000000000000 TIM_GetPrescaler
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:1105   .text.TIM_GetPrescaler:0000000000000068 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:1117   .text.TIM_UpdateDisableConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:1122   .text.TIM_UpdateDisableConfig:0000000000000000 TIM_UpdateDisableConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:1231   .text.TIM_UpdateDisableConfig:00000000000000ac $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:1243   .text.TIM_UpdateRequestConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:1248   .text.TIM_UpdateRequestConfig:0000000000000000 TIM_UpdateRequestConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:1357   .text.TIM_UpdateRequestConfig:00000000000000ac $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:1369   .text.TIM_ARRPreloadConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:1374   .text.TIM_ARRPreloadConfig:0000000000000000 TIM_ARRPreloadConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:1483   .text.TIM_ARRPreloadConfig:00000000000000ac $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:1495   .text.TIM_SelectOnePulseMode:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:1500   .text.TIM_SelectOnePulseMode:0000000000000000 TIM_SelectOnePulseMode
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:1601   .text.TIM_SelectOnePulseMode:00000000000000a4 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:1614   .text.TIM_SetClockDivision:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:1619   .text.TIM_SetClockDivision:0000000000000000 TIM_SetClockDivision
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:1723   .text.TIM_SetClockDivision:00000000000000a8 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:1737   .text.TIM_Cmd:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:1742   .text.TIM_Cmd:0000000000000000 TIM_Cmd
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:1849   .text.TIM_Cmd:00000000000000a8 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:1863   .text.TIM_BDTRConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:1868   .text.TIM_BDTRConfig:0000000000000000 TIM_BDTRConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:2076   .text.TIM_BDTRConfig:0000000000000154 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:2090   .text.TIM_BDTRStructInit:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:2095   .text.TIM_BDTRStructInit:0000000000000000 TIM_BDTRStructInit
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:2145   .text.TIM_CtrlPWMOutputs:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:2150   .text.TIM_CtrlPWMOutputs:0000000000000000 TIM_CtrlPWMOutputs
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:2244   .text.TIM_CtrlPWMOutputs:0000000000000090 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:2256   .text.TIM_OC1Init:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:2261   .text.TIM_OC1Init:0000000000000000 TIM_OC1Init
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:2672   .text.TIM_OC1Init:00000000000002c4 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:2691   .text.TIM_OC2Init:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:2696   .text.TIM_OC2Init:0000000000000000 TIM_OC2Init
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:3095   .text.TIM_OC2Init:00000000000002b0 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:3113   .text.TIM_OC3Init:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:3118   .text.TIM_OC3Init:0000000000000000 TIM_OC3Init
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:3511   .text.TIM_OC3Init:00000000000002a4 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:3530   .text.TIM_OC4Init:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:3535   .text.TIM_OC4Init:0000000000000000 TIM_OC4Init
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:3814   .text.TIM_OC4Init:00000000000001d8 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:3830   .text.TIM_OCStructInit:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:3835   .text.TIM_OCStructInit:0000000000000000 TIM_OCStructInit
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:3889   .text.TIM_SelectOCxM:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:3894   .text.TIM_SelectOCxM:0000000000000000 TIM_SelectOCxM
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4097   .text.TIM_SelectOCxM:0000000000000150 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4110   .text.TIM_SetCompare1:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4115   .text.TIM_SetCompare1:0000000000000000 TIM_SetCompare1
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4178   .text.TIM_SetCompare1:000000000000005c $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4190   .text.TIM_SetCompare2:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4195   .text.TIM_SetCompare2:0000000000000000 TIM_SetCompare2
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4246   .text.TIM_SetCompare2:0000000000000044 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4255   .text.TIM_SetCompare3:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4260   .text.TIM_SetCompare3:0000000000000000 TIM_SetCompare3
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4308   .text.TIM_SetCompare3:0000000000000040 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4315   .text.TIM_SetCompare4:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4320   .text.TIM_SetCompare4:0000000000000000 TIM_SetCompare4
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4367   .text.TIM_SetCompare4:000000000000003c $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4375   .text.TIM_ForcedOC1Config:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4380   .text.TIM_ForcedOC1Config:0000000000000000 TIM_ForcedOC1Config
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4493   .text.TIM_ForcedOC1Config:00000000000000b4 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4506   .text.TIM_ForcedOC2Config:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4511   .text.TIM_ForcedOC2Config:0000000000000000 TIM_ForcedOC2Config
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4614   .text.TIM_ForcedOC2Config:00000000000000a0 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4625   .text.TIM_ForcedOC3Config:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4630   .text.TIM_ForcedOC3Config:0000000000000000 TIM_ForcedOC3Config
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4727   .text.TIM_ForcedOC3Config:0000000000000094 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4736   .text.TIM_ForcedOC4Config:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4741   .text.TIM_ForcedOC4Config:0000000000000000 TIM_ForcedOC4Config
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4841   .text.TIM_ForcedOC4Config:000000000000009c $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4850   .text.TIM_CCPreloadControl:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4855   .text.TIM_CCPreloadControl:0000000000000000 TIM_CCPreloadControl
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4946   .text.TIM_CCPreloadControl:0000000000000088 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4956   .text.TIM_OC1PreloadConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:4961   .text.TIM_OC1PreloadConfig:0000000000000000 TIM_OC1PreloadConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:5074   .text.TIM_OC1PreloadConfig:00000000000000b4 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:5087   .text.TIM_OC2PreloadConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:5092   .text.TIM_OC2PreloadConfig:0000000000000000 TIM_OC2PreloadConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:5195   .text.TIM_OC2PreloadConfig:00000000000000a0 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:5206   .text.TIM_OC3PreloadConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:5211   .text.TIM_OC3PreloadConfig:0000000000000000 TIM_OC3PreloadConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:5308   .text.TIM_OC3PreloadConfig:0000000000000094 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:5317   .text.TIM_OC4PreloadConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:5322   .text.TIM_OC4PreloadConfig:0000000000000000 TIM_OC4PreloadConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:5422   .text.TIM_OC4PreloadConfig:000000000000009c $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:5431   .text.TIM_OC1FastConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:5436   .text.TIM_OC1FastConfig:0000000000000000 TIM_OC1FastConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:5549   .text.TIM_OC1FastConfig:00000000000000b4 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:5562   .text.TIM_OC2FastConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:5567   .text.TIM_OC2FastConfig:0000000000000000 TIM_OC2FastConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:5670   .text.TIM_OC2FastConfig:00000000000000a0 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:5681   .text.TIM_OC3FastConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:5686   .text.TIM_OC3FastConfig:0000000000000000 TIM_OC3FastConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:5784   .text.TIM_OC3FastConfig:0000000000000098 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:5792   .text.TIM_OC4FastConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:5797   .text.TIM_OC4FastConfig:0000000000000000 TIM_OC4FastConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:5896   .text.TIM_OC4FastConfig:0000000000000098 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:5906   .text.TIM_ClearOC1Ref:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:5911   .text.TIM_ClearOC1Ref:0000000000000000 TIM_ClearOC1Ref
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:6024   .text.TIM_ClearOC1Ref:00000000000000b4 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:6037   .text.TIM_ClearOC2Ref:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:6042   .text.TIM_ClearOC2Ref:0000000000000000 TIM_ClearOC2Ref
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:6146   .text.TIM_ClearOC2Ref:00000000000000a4 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:6155   .text.TIM_ClearOC3Ref:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:6160   .text.TIM_ClearOC3Ref:0000000000000000 TIM_ClearOC3Ref
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:6257   .text.TIM_ClearOC3Ref:0000000000000094 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:6266   .text.TIM_ClearOC4Ref:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:6271   .text.TIM_ClearOC4Ref:0000000000000000 TIM_ClearOC4Ref
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:6370   .text.TIM_ClearOC4Ref:0000000000000098 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:6379   .text.TIM_OC1PolarityConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:6384   .text.TIM_OC1PolarityConfig:0000000000000000 TIM_OC1PolarityConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:6497   .text.TIM_OC1PolarityConfig:00000000000000b4 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:6510   .text.TIM_OC1NPolarityConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:6515   .text.TIM_OC1NPolarityConfig:0000000000000000 TIM_OC1NPolarityConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:6615   .text.TIM_OC1NPolarityConfig:000000000000009c $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:6626   .text.TIM_OC2PolarityConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:6631   .text.TIM_OC2PolarityConfig:0000000000000000 TIM_OC2PolarityConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:6735   .text.TIM_OC2PolarityConfig:00000000000000a4 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:6744   .text.TIM_OC2NPolarityConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:6749   .text.TIM_OC2NPolarityConfig:0000000000000000 TIM_OC2NPolarityConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:6840   .text.TIM_OC2NPolarityConfig:0000000000000088 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:6847   .text.TIM_OC3PolarityConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:6852   .text.TIM_OC3PolarityConfig:0000000000000000 TIM_OC3PolarityConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:6952   .text.TIM_OC3PolarityConfig:000000000000009c $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:6961   .text.TIM_OC3NPolarityConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:6966   .text.TIM_OC3NPolarityConfig:0000000000000000 TIM_OC3NPolarityConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:7056   .text.TIM_OC3NPolarityConfig:0000000000000088 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:7065   .text.TIM_OC4PolarityConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:7070   .text.TIM_OC4PolarityConfig:0000000000000000 TIM_OC4PolarityConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:7169   .text.TIM_OC4PolarityConfig:0000000000000098 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:7179   .text.TIM_SelectOCREFClear:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:7184   .text.TIM_SelectOCREFClear:0000000000000000 TIM_SelectOCREFClear
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:7264   .text.TIM_SelectOCREFClear:0000000000000078 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:7273   .text.TIM_CCxCmd:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:7278   .text.TIM_CCxCmd:0000000000000000 TIM_CCxCmd
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:7398   .text.TIM_CCxCmd:00000000000000c4 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:7411   .text.TIM_CCxNCmd:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:7416   .text.TIM_CCxNCmd:0000000000000000 TIM_CCxNCmd
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:7543   .text.TIM_CCxNCmd:00000000000000d0 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:7555   .text.TIM_SelectCOM:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:7560   .text.TIM_SelectCOM:0000000000000000 TIM_SelectCOM
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:7651   .text.TIM_SelectCOM:0000000000000088 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:7661   .text.TIM_ICInit:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:7666   .text.TIM_ICInit:0000000000000000 TIM_ICInit
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:12163  .text.TI1_Config:0000000000000000 TI1_Config
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8532   .text.TIM_SetIC1Prescaler:0000000000000000 TIM_SetIC1Prescaler
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:12291  .text.TI2_Config:0000000000000000 TI2_Config
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8654   .text.TIM_SetIC2Prescaler:0000000000000000 TIM_SetIC2Prescaler
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:12443  .text.TI3_Config:0000000000000000 TI3_Config
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8764   .text.TIM_SetIC3Prescaler:0000000000000000 TIM_SetIC3Prescaler
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:12589  .text.TI4_Config:0000000000000000 TI4_Config
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8866   .text.TIM_SetIC4Prescaler:0000000000000000 TIM_SetIC4Prescaler
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8016   .text.TIM_ICInit:000000000000026c $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8036   .text.TIM_ICStructInit:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8041   .text.TIM_ICStructInit:0000000000000000 TIM_ICStructInit
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8083   .text.TIM_PWMIConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8088   .text.TIM_PWMIConfig:0000000000000000 TIM_PWMIConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8257   .text.TIM_PWMIConfig:0000000000000114 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8266   .text.TIM_GetCapture1:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8271   .text.TIM_GetCapture1:0000000000000000 TIM_GetCapture1
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8333   .text.TIM_GetCapture1:000000000000005c $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8345   .text.TIM_GetCapture2:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8350   .text.TIM_GetCapture2:0000000000000000 TIM_GetCapture2
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8400   .text.TIM_GetCapture2:0000000000000044 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8409   .text.TIM_GetCapture3:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8414   .text.TIM_GetCapture3:0000000000000000 TIM_GetCapture3
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8460   .text.TIM_GetCapture3:000000000000003c $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8468   .text.TIM_GetCapture4:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8473   .text.TIM_GetCapture4:0000000000000000 TIM_GetCapture4
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8519   .text.TIM_GetCapture4:000000000000003c $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8527   .text.TIM_SetIC1Prescaler:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8636   .text.TIM_SetIC1Prescaler:00000000000000a8 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8649   .text.TIM_SetIC2Prescaler:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8748   .text.TIM_SetIC2Prescaler:0000000000000094 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8759   .text.TIM_SetIC3Prescaler:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8852   .text.TIM_SetIC3Prescaler:0000000000000088 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8861   .text.TIM_SetIC4Prescaler:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8956   .text.TIM_SetIC4Prescaler:000000000000008c $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8966   .text.TIM_ITConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:8971   .text.TIM_ITConfig:0000000000000000 TIM_ITConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:9104   .text.TIM_ITConfig:00000000000000d4 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:9118   .text.TIM_GenerateEvent:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:9123   .text.TIM_GenerateEvent:0000000000000000 TIM_GenerateEvent
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:9213   .text.TIM_GenerateEvent:000000000000008c $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:9227   .text.TIM_GetFlagStatus:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:9232   .text.TIM_GetFlagStatus:0000000000000000 TIM_GetFlagStatus
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:9394   .text.TIM_GetFlagStatus:0000000000000114 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:9408   .text.TIM_ClearFlag:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:9413   .text.TIM_ClearFlag:0000000000000000 TIM_ClearFlag
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:9505   .text.TIM_ClearFlag:0000000000000090 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:9519   .text.TIM_GetITStatus:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:9524   .text.TIM_GetITStatus:0000000000000000 TIM_GetITStatus
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:9693   .text.TIM_GetITStatus:0000000000000118 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:9707   .text.TIM_ClearITPendingBit:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:9712   .text.TIM_ClearITPendingBit:0000000000000000 TIM_ClearITPendingBit
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:9804   .text.TIM_ClearITPendingBit:0000000000000090 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:9818   .text.TIM_DMAConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:9823   .text.TIM_DMAConfig:0000000000000000 TIM_DMAConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:10109  .text.TIM_DMAConfig:0000000000000208 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:10123  .text.TIM_DMACmd:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:10128  .text.TIM_DMACmd:0000000000000000 TIM_DMACmd
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:10255  .text.TIM_DMACmd:00000000000000c8 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:10270  .text.TIM_SelectCCDMA:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:10275  .text.TIM_SelectCCDMA:0000000000000000 TIM_SelectCCDMA
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:10375  .text.TIM_SelectCCDMA:000000000000009c $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:10386  .text.TIM_InternalClockConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:10391  .text.TIM_InternalClockConfig:0000000000000000 TIM_InternalClockConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:10446  .text.TIM_InternalClockConfig:000000000000004c $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:10455  .text.TIM_ITRxExternalClockConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:10460  .text.TIM_ITRxExternalClockConfig:0000000000000000 TIM_ITRxExternalClockConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:11075  .text.TIM_SelectInputTrigger:0000000000000000 TIM_SelectInputTrigger
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:10549  .text.TIM_ITRxExternalClockConfig:000000000000008c $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:10559  .text.TIM_TIxExternalClockConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:10564  .text.TIM_TIxExternalClockConfig:0000000000000000 TIM_TIxExternalClockConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:10704  .text.TIM_TIxExternalClockConfig:00000000000000e8 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:10715  .text.TIM_ETRClockMode1Config:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:10720  .text.TIM_ETRClockMode1Config:0000000000000000 TIM_ETRClockMode1Config
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:11549  .text.TIM_ETRConfig:0000000000000000 TIM_ETRConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:10904  .text.TIM_ETRClockMode1Config:0000000000000138 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:10914  .text.TIM_ETRClockMode2Config:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:10919  .text.TIM_ETRClockMode2Config:0000000000000000 TIM_ETRClockMode2Config
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:11059  .text.TIM_ETRClockMode2Config:00000000000000ec $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:11070  .text.TIM_SelectInputTrigger:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:11200  .text.TIM_SelectInputTrigger:00000000000000cc $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:11210  .text.TIM_SelectOutputTrigger:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:11215  .text.TIM_SelectOutputTrigger:0000000000000000 TIM_SelectOutputTrigger
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:11327  .text.TIM_SelectOutputTrigger:00000000000000b8 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:11338  .text.TIM_SelectSlaveMode:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:11343  .text.TIM_SelectSlaveMode:0000000000000000 TIM_SelectSlaveMode
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:11435  .text.TIM_SelectSlaveMode:0000000000000090 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:11445  .text.TIM_SelectMasterSlaveMode:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:11450  .text.TIM_SelectMasterSlaveMode:0000000000000000 TIM_SelectMasterSlaveMode
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:11535  .text.TIM_SelectMasterSlaveMode:0000000000000084 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:11544  .text.TIM_ETRConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:11717  .text.TIM_ETRConfig:000000000000011c $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:11727  .text.TIM_EncoderInterfaceConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:11732  .text.TIM_EncoderInterfaceConfig:0000000000000000 TIM_EncoderInterfaceConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:11967  .text.TIM_EncoderInterfaceConfig:000000000000018c $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:11979  .text.TIM_SelectHallSensor:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:11984  .text.TIM_SelectHallSensor:0000000000000000 TIM_SelectHallSensor
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:12072  .text.TIM_SelectHallSensor:0000000000000084 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:12080  .text.TIM_RemapConfig:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:12085  .text.TIM_RemapConfig:0000000000000000 TIM_RemapConfig
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:12151  .text.TIM_RemapConfig:0000000000000060 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:12159  .text.TI1_Config:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:12287  .text.TI2_Config:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:12434  .text.TI2_Config:00000000000000ec $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:12439  .text.TI3_Config:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:12579  .text.TI3_Config:00000000000000e0 $d
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:12585  .text.TI4_Config:0000000000000000 $t
/var/folders/2L/2LLjjuM0EOeRSH4ujURun++++TI/-Tmp-//ccTy8vZD.s:12733  .text.TI4_Config:00000000000000ec $d
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.0.9252205565be9cbc11fa49e4ee70d556
                           .group:0000000000000000 wm4.stm32f0xx.h.54.664bd2bdbb20859ae6a5c66c16d4ee5a
                           .group:0000000000000000 wm4.core_cm0.h.32.41c1bd92799bc17b3c8424dd5c622427
                           .group:0000000000000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:0000000000000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:0000000000000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:0000000000000000 wm4.core_cm0.h.130.eea61816b4c7004601b0935484a214ea
                           .group:0000000000000000 wm4.stm32f0xx.h.226.38dd78fa77e64690c744af5bf4bffc7b
                           .group:0000000000000000 wm4.stm32f0xx_cec.h.80.d17e4ea90700c26010f339885be92ac0
                           .group:0000000000000000 wm4.stm32f0xx_crc.h.31.48fbd36307d848f32978567b16118557
                           .group:0000000000000000 wm4.stm32f0xx_comp.h.31.a640b8c7673f3e181cfd826dce70b6e2
                           .group:0000000000000000 wm4.stm32f0xx_dac.h.31.3e178ad0888f70df8fbc4c999d855b3e
                           .group:0000000000000000 wm4.stm32f0xx_dbgmcu.h.31.282da985c6ed8dd33417cf074ecfdf63
                           .group:0000000000000000 wm4.stm32f0xx_dma.h.31.68def2497939cb34c3f292e0c507724a
                           .group:0000000000000000 wm4.stm32f0xx_exti.h.31.81a00331ef3e014ed4dafe9e9baacca3
                           .group:0000000000000000 wm4.stm32f0xx_flash.h.31.60d92ed32439cfb92572ec2678e2be21
                           .group:0000000000000000 wm4.stm32f0xx_gpio.h.31.df5c3a39b21131ade11d30b7e1580be6
                           .group:0000000000000000 wm4.stm32f0xx_syscfg.h.31.f98c72ea26c47fccafefd977b75786d3
                           .group:0000000000000000 wm4.stm32f0xx_i2c.h.31.83969866ec38bbcc1bff9238f01a1954
                           .group:0000000000000000 wm4.stm32f0xx_iwdg.h.31.bb16f7e18e54df66bf9bd0e2b29bdc93
                           .group:0000000000000000 wm4.stm32f0xx_pwr.h.31.5b469253a65db741700e0b45f396c99d
                           .group:0000000000000000 wm4.stm32f0xx_rcc.h.31.bc2f5dd9e2f518d727a1e0ce497a42e6
                           .group:0000000000000000 wm4.stm32f0xx_rtc.h.31.bc9d631913a743746cf54f04d4efbf7b
                           .group:0000000000000000 wm4.stm32f0xx_spi.h.31.5b4d0d36c03feb5b081143cdba79744d
                           .group:0000000000000000 wm4.stm32f0xx_tim.h.31.21b4d7229c685868595d751757b51e1b
                           .group:0000000000000000 wm4.stm32f0xx_usart.h.31.8abae79a1c4f266d08faf5996370b48f
                           .group:0000000000000000 wm4.stm32f0xx_wwdg.h.31.0cf1a9b3d89d147c688025fdd33d9c49
                           .group:0000000000000000 wm4.stm32f0xx_misc.h.31.d5c08c37e69b8a852dbb75e9252454c6

UNDEFINED SYMBOLS
assert_failed
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
